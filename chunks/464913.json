{
    "exports": {
        "default": "function N(e,t,n,i,T){if(t!==d.Mode.UseGreyDot)return[{label:\"Setting the guild to a white dot unread\",apply:(e,t)=>{O(e,t,!0)}}];let A=[],N=Object.values(s.default.getMutableGuildChannelsForGuild(e.id)).filter(e=>l.default.can(S.Permissions.VIEW_CHANNEL,e));return A.push(...function(e,t){if(!(u.default.isMuted(e.id)&&!u.default.isTemporarilyMuted(e.id)))return[];let n=[{label:\"Unmuting the guild and marking it as read\",apply:e=>{e.muted=!1,e.mute_config=null},needsMarkedAsRead:!0}],i=t.filter(t=>u.default.getChannelMessageNotifications(e.id,t.id)===S.UserNotificationSettings.ALL_MESSAGES);return i.length>0&&n.push({label:`Setting ${i.length} to mentions-only since they were all-messages and we are unmuting the guild`,debug:i.map(e=>`\n    - #${e.name}`).join(\"\"),apply:(e,t)=>{for(let n of i)R(e,t,n.id,e=>{e.message_notifications=S.UserNotificationSettings.ONLY_MENTIONS})}}),n}(e,N)),A.push(function(e){if(u.default.getMessageNotifications(e.id)===S.UserNotificationSettings.ALL_MESSAGES)return{label:\"Setting the guild to only mentions since it is in care-a-little but was previously all-messages\",apply:e=>{e.message_notifications=S.UserNotificationSettings.ONLY_MENTIONS}}}(e)),A.push(function(){return{label:\"Setting the guild to a grey dot unread\",apply:(e,t)=>{O(e,t,!1)}}}()),A.push(...function(e){let t=[],[n,i]=r()(e).filter(e=>e.type===S.ChannelTypes.GUILD_ANNOUNCEMENT).partition(e=>u.default.isChannelMuted(e.guild_id,e.id)||null!=e.parent_id&&u.default.isChannelMuted(e.guild_id,e.parent_id)).value();return n.length>0&&t.push({label:`Not touching ${n.length} announcement channels since they are muted`,debug:n.map(e=>`\n    - #${e.name}`).join(\"\")}),i.length>0&&t.push({label:`Setting ${i.length} announcement channels to white-dot`,debug:i.map(e=>`\n    - #${e.name}`).join(\"\"),apply:(e,t)=>{for(let n of i)C(e,t,n.id,!0)}}),t}(N)),A.push(...function(e){let t=[],n=[];for(let t of e)u.default.isChannelMuted(t.guild_id,t.id)&&t.isCategory()&&!a.default.isCollapsed(t.id)&&n.push(t);return n.length>0&&t.push({label:`Unmuting ${n.length} categories and setting to grey-dot`,debug:n.map(e=>`\n    - #${e.name}`).join(\"\"),apply:(e,t)=>{for(let i of n)C(e,t,i.id,!1),R(e,t,i.id,e=>{e.muted=!1,e.mute_config=null})}}),t}(N)),A.push(...function(e){let t=[],n=[],i=[];return e.forEach(e=>{if(u.default.isChannelMuted(e.guild_id,e.id))return;let t=u.default.getChannelMessageNotifications(e.guild_id,e.id);t===S.UserNotificationSettings.ALL_MESSAGES?n.push(e):t===S.UserNotificationSettings.ONLY_MENTIONS&&i.push(e)}),n.length>0&&t.push({label:`Setting ${n.length} channels to white-dot since they were explicitly All Messages`,debug:n.map(e=>`\n    - #${e.name}`).join(\"\"),apply:(e,t)=>{for(let i of n)C(e,t,i.id,!0)}}),i.length>0&&t.push({label:`Setting ${i.length} channels to grey-dot since they were explicitly Mentions Only`,debug:i.map(e=>`\n    - #${e.name}`).join(\"\"),apply:(e,t)=>{for(let n of i)C(e,t,n.id,!1)}}),t}(N)),_.default.hasConsented(S.Consents.PERSONALIZATION)?A.push(...function(e,t,n,i,o){if(u.default.isMuted(e.id)&&!u.default.isTemporarilyMuted(e.id))return[];let a=new Set(t.map(e=>e.id)),s=i.filter(e=>a.has(e.channel_id)),_=r().keyBy(s,\"channel_id\"),E=Math.max(n.messages===d.PainLevel.High?o.frecency.yearMinOpensLargeServer:o.frecency.yearMinOpensSmallServer,s.reduce((e,t)=>e+Number(t.num_year_opens??0),0)*o.frecency.totalOpensPercent),l=Math.max(o.frecency.monthMinOpens,s.reduce((e,t)=>e+Number(t.num_three_month_opens??0),0)*o.frecency.totalOpensPercent),I=[],T=[];t.forEach(e=>{let t=_[e.id]??{};Number(t.num_year_opens??0)>E||Number(t.num_month_opens??0)>l?I.push(e):Number(t.num_three_month_opens??0)>2&&T.push(e)});let c=[];return I.length>0&&c.push({label:`Setting ${I.length} channels to white-dot since they are recent and frequently viewed`,debug:I.map(e=>`\n    - #${e.name} (${JSON.stringify(_[e.id])})`).join(\"\"),apply:(e,t)=>{for(let n of I)C(e,t,n.id,!0)}}),T.length>0&&c.push({label:`NOT setting ${T.length} channels to white-dot because they were only viewed a little.`,debug:T.map(e=>`\n    - #${e.name} (${JSON.stringify(_[e.id])})`).join(\"\")}),c}(e,N,n,i,T)):A.push(...function(e,t){if(u.default.isMuted(e.id)&&!u.default.isTemporarilyMuted(e.id))return[];let n=[],i=new Set(t.map(e=>e.id)),r=Date.now()-I.default.Millis.DAYS_30,a=E.default.getFrequentlyWithoutFetchingLatest().filter(e=>e instanceof o.ChannelRecordBase&&i.has(e.id)).filter(e=>{let t=E.default.frecencyWithoutFetchingLatest.usageHistory[e.id]?.recentUses??[];return 0!==t.length&&t[t.length-1]>=r});return a.length>0&&n.push({label:`Setting ${a.length} channels to white-dot since they are recent and frequently viewed`,debug:a.map(e=>`\n    - #${e.name}`).join(\"\"),apply:(e,t)=>{for(let n of a)C(e,t,n.id,!0)}}),n}(e,N)),A.filter(c.isNotNullish)}"
    }
}