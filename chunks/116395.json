{
    "exports": {
        "changeStreamRegion": "function F(e,t){a.default.patch({url:N.Endpoints.STREAM(e),body:{region:t},oldFormErrors:!0})}",
        "closeStream": "function k(e){let t=!(arguments.length>1)||void 0===arguments[1]||arguments[1];o.default.dispatch({type:\"STREAM_CLOSE\",streamKey:e,canShowFeedback:t})}",
        "createBroadcastChannelOrStartStream": "function H(e){let{channelId:t,pid:n,sourceId:s,sourceName:i}=e;(null!=n||null!=s||null!=i)&&(o.default.dispatch({type:\"START_BROADCAST_STREAM\",options:{pid:n,sourceId:s,sourceName:i}}),null==t?S.default.createBroadcastPrivateChannel():O(null,t,{pid:n,sourceId:s,sourceName:i}))}",
        "fetchStreamPreview": "async function w(e,t,n){let s=(0,d.encodeStreamKey)({streamType:null!=e?D.StreamTypes.GUILD:D.StreamTypes.CALL,guildId:e,channelId:t,ownerId:n});o.default.dispatch({type:\"STREAM_PREVIEW_FETCH_START\",streamKey:s});try{let e=await a.default.get({url:N.Endpoints.STREAM_PREVIEW(s),query:{version:Date.now()},oldFormErrors:!0});o.default.dispatch({type:\"STREAM_PREVIEW_FETCH_SUCCESS\",streamKey:s,previewURL:e.body.url})}catch(t){let e;429===t.status&&(e=t.body.retry_after*v.default.Millis.SECOND),o.default.dispatch({type:\"STREAM_PREVIEW_FETCH_FAIL\",streamKey:s,retryAfter:e})}}",
        "joinPrivateChannelAndWatchStream": "function x(e,t){let n=c.default.getId(),s=(0,d.decodeStreamKey)(t),i=h.default.getVoiceChannelId();null!=i&&i!==e&&A.default.disconnect(),S.default.addRecipient(e,n,void 0,()=>{T.default.call(e,!1,!1,null,()=>{L(s)})})}",
        "notifyStreamStart": "async function U(e){try{await I.default.post({url:N.Endpoints.STREAM_NOTIFY(e),oldFormErrors:!0,trackedActionData:{event:r.NetworkActionNames.STREAM_NOTIFY}})}catch(e){}}",
        "setStreamPaused": "function R(e,t){let n=(0,d.encodeStreamKey)(e);o.default.dispatch({type:\"STREAM_SET_PAUSED\",streamKey:n,paused:t})}",
        "startStream": "function O(e,t,n){o.default.dispatch({type:\"STREAM_START\",streamType:null!=e?D.StreamTypes.GUILD:D.StreamTypes.CALL,guildId:e,channelId:t,appContext:__OVERLAY__?N.AppContext.OVERLAY:N.AppContext.APP,...n})}",
        "stopOwnStream": "function B(){let e=!(arguments.length>0)||void 0===arguments[0]||arguments[0],t=_.default.getCurrentUserActiveStream();null!=t&&V((0,d.encodeStreamKey)(t),e)}",
        "stopStream": "function V(e){let t=!(arguments.length>1)||void 0===arguments[1]||arguments[1];k(e,t),o.default.dispatch({type:\"STREAM_STOP\",streamKey:e,appContext:__OVERLAY__?N.AppContext.OVERLAY:N.AppContext.APP})}",
        "toggleSelfStreamHidden": "function M(e,t){o.default.dispatch({type:\"STREAM_UPDATE_SELF_HIDDEN\",channelId:e,selfStreamHidden:t})}",
        "updateStreamSettings": "function G(e){(0,y.trackStreamSettingsUpdate)(e.preset,e.resolution,e.frameRate),o.default.dispatch({type:\"STREAM_UPDATE_SETTINGS\",...e})}",
        "watchStream": "function b(e,t){if(null!=u.default.getRemoteSessionId())return;let{guildId:n,channelId:s}=e;if(null!=n&&P(n,s))return;let i=(0,d.encodeStreamKey)(e),r=t?.forceMultiple||_.default.getAllActiveStreamsForChannel(s).filter(e=>{let{ownerId:t}=e;return t!==c.default.getId()}).length>=2;o.default.dispatch({type:\"STREAM_WATCH\",streamKey:i,allowMultiple:r}),!(r||t?.noFocus)&&C.default.selectParticipant(e.channelId,i)}",
        "watchStreamAndTransitionToStream": "function L(e,t){let{guildId:n,channelId:s}=e;if(null!=n&&P(n,s))return;b(e,t);let i=f.default.getWindowOpen(N.PopoutWindowKeys.CHANNEL_CALL_POPOUT),r=h.default.getVoiceChannelId();(!i||r!==s)&&(0,l.default)(e)}"
    }
}