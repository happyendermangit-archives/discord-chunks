{
    "exports": {
        "default": {
            "initializedCount": 0,
            "actions": {
                "POST_CONNECTION_OPEN": "()=>this.handlePostConnectionOpen()",
                "GUILD_MEMBER_UPDATE": "e=>this.handleGuildMemberUpdate(e)",
                "GUILD_DELETE": "e=>this.handleGuildDelete(e)",
                "CHANNEL_SELECT": "e=>this.handleChannelSelect(e)",
                "MESSAGE_CREATE": "e=>this.handleMessageSend(e)",
                "THREAD_CREATE": "e=>this.handleThreadCreate(e)"
            },
            "stores": {
                "toJSON": "function(){return Array.from(this)}",
                "get": "function get() { [native code] }",
                "set": "function set() { [native code] }",
                "has": "function has() { [native code] }",
                "delete": "function delete() { [native code] }",
                "clear": "function clear() { [native code] }",
                "entries": "function entries() { [native code] }",
                "forEach": "function forEach() { [native code] }",
                "keys": "function keys() { [native code] }",
                "size": 0,
                "values": "function values() { [native code] }"
            },
            "onboardingCompleteGuilds": {
                "toJSON": "function(){return Array.from(this)}",
                "has": "function has() { [native code] }",
                "add": "function add() { [native code] }",
                "delete": "function delete() { [native code] }",
                "clear": "function clear() { [native code] }",
                "entries": "function entries() { [native code] }",
                "forEach": "function forEach() { [native code] }",
                "size": 0,
                "values": "function values() { [native code] }",
                "keys": "function values() { [native code] }",
                "union": "function union() { [native code] }",
                "intersection": "function intersection() { [native code] }",
                "difference": "function difference() { [native code] }",
                "symmetricDifference": "function symmetricDifference() { [native code] }",
                "isSubsetOf": "function isSubsetOf() { [native code] }",
                "isSupersetOf": "function isSupersetOf() { [native code] }",
                "isDisjointFrom": "function isDisjointFrom() { [native code] }"
            },
            "handlePostConnectionOpen": "()=>{let e=s.default.getGuildId();null!=e&&this._getOrLoadOnboardingMemberActions(e)}",
            "handleGuildMemberUpdate": "e=>{let{flags:_,user:n,guildId:r}=e;if(n.id===i.default.getId()){if(!this.onboardingCompleteGuilds.has(r)&&(0,T.hasFlag)(null!=_?_:0,u.GuildMemberFlags.COMPLETED_HOME_ACTIONS)){var a,I;this.onboardingCompleteGuilds.add(r);let e=null!==(I=null===(a=N.default.getNewMemberActions(r))||void 0===a?void 0:a.length)&&void 0!==I?I:0;if(0===e)return;(0,o.openModalLazy)(async()=>{let{default:_}=await E.el(\"74066\").then(E.bind(E,\"74066\"));return E=>(0,t.jsx)(_,{...E,initialPercent:(e-1)/e,numActions:e})})}}}",
            "handleGuildDelete": "e=>{let{guild:_}=e;this.onboardingCompleteGuilds.delete(_.id)}",
            "handleChannelSelect": "async e=>{let{guildId:_,channelId:E}=e;if(null==_||null==E)return;let{memberActions:t,completedActions:o}=await this._getOrLoadOnboardingMemberActions(_),n=null==t?void 0:t.find(e=>e.channelId===E);(null==o?void 0:o[E])!==!0&&null!=n&&n.actionType===O.NewMemberActionTypes.VIEW&&(0,S.completeNewMemberAction)(_,E)}",
            "handleMessageSend": "e=>{var _;let{guildId:E,channelId:t,message:o}=e;if(null==E||null==t||(null===(_=o.author)||void 0===_?void 0:_.id)!==i.default.getId())return;let n=a.default.getChannel(t);(null==n?void 0:n.isForumPost())&&(null==n?void 0:n.parent_id)!=null&&this._completeChatAction(E,n.parent_id),this._completeChatAction(E,t)}",
            "handleThreadCreate": "e=>{var _;let{channel:E,isNewlyCreated:t}=e;if(!!t&&null!=E.parent_id&&!!(null===(_=a.default.getChannel(E.parent_id))||void 0===_?void 0:_.isForumLikeChannel()))E.ownerId===i.default.getId()&&this._completeChatAction(E.guild_id,E.parent_id)}",
            "_completeChatAction": "async(e,_)=>{let{memberActions:E,completedActions:t}=await this._getOrLoadOnboardingMemberActions(e),o=null==E?void 0:E.find(e=>e.channelId===_);(null==t?void 0:t[_])!==!0&&null!=o&&o.actionType===O.NewMemberActionTypes.CHAT&&(0,S.completeNewMemberAction)(e,_)}",
            "_getOrLoadOnboardingMemberActions": "async e=>{let _=(0,R.canSeeOnboardingHome)(e),E=r.default.isFullServerPreview(e);if(!_&&!E)return{};let t=I.default.getSelfMember(e);if(null==t||!(0,l.getIsNewMember)(t))return{};let[o,n]=await Promise.all([this._getOrLoadOnboardingHomeSettings(e,t),this._getOrLoadMemberActions(e,t)]);return{memberActions:o,completedActions:n}}",
            "_getOrLoadOnboardingHomeSettings": "async(e,_)=>{let E=N.default.getNewMemberActions(e),t=N.default.getIsLoading(e);if(!(null==E&&!t&&(0,l.getIsNewMember)(_)))return E;{let _=await (0,S.fetchGuildHomeSettings)(e);return null==_?void 0:_.newMemberActions}}",
            "_getOrLoadMemberActions": "async(e,_)=>{var E;let{completedActions:t,loading:o}=A.default.getState(e);if(!(null==t&&!o&&(0,T.hasFlag)(null!==(E=_.flags)&&void 0!==E?E:0,u.GuildMemberFlags.STARTED_HOME_ACTIONS)))return t;{let _=await (0,S.fetchNewMemberActions)(e);return _}}"
        }
    }
}