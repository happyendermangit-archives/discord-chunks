{
    "exports": {
        "canCreatePrivateChannel": "function Y(e,t,n){return e===g.ChannelTypes.GUILD_TEXT||e===g.ChannelTypes.GUILD_ANNOUNCEMENT?t:!(0,s.isGuildVocalChannelType)(e)&&e!==g.ChannelTypes.GUILD_CATEGORY||t&&n}",
        "extractPermissionOverwrites": "function K(e,t){let n=[];return Object.values(e).forEach(e=>{let{row:a}=e;null!=a.id&&\"\"!==a.id&&(a.rowType===h.RowType.ROLE?n.push((0,d.permissionOverwriteForRole)(a.id,t)):a.rowType===h.RowType.MEMBER&&n.push((0,d.permissionOverwriteForUser)(a.id,t)))}),n}",
        "flipEveryonePermission": "function k(e,t,n){let l=e.permissionOverwrites[e.guild_id];null==l&&(l=f.default.makeEveryoneOverwrite(e.guild_id));let i={...l};return i.deny=a.default.remove(i.deny,t),i.allow=a.default.remove(i.allow,t),!n&&(i.deny=a.default.add(i.deny,t)),i}",
        "getExistingMembersRows": "function P(e,t,n,a,l){var i,r,s,u,d;return(i=e,r=t,s=n,u=a,d=l,i.map(o.default.getUser).filter(c.isNotNullish).filter(e=>{var t;return!I(r,e.id,u,d)||(t=e,s.isOwner(t))})).map(e=>U(e,n)).sort(v)}",
        "getExistingRolesRowWithPermissionDisabled": "function D(e,t,n,l){var i,r,s,u;let o=[];if(null==e.roles)return o;return 0===(o=(i=e,r=t,s=n,u=l,Object.values(i.roles).filter(e=>m(e)||!I(r,e.id,s,u)&&N(i,e)||a.default.has(a.default.combine(e.permissions,r.permissionOverwrites[e.id]?.allow),s))).sort(T).map(e=>p(e,a.default.has(e.permissions,n)))).length?A(S.default.Messages.CHANNEL_PERMISSIONS_NO_ROLES):o}",
        "getExistingRolesRows": "function O(e,t,n,a){var l,i,r,s;let u=[];if(null==e.roles)return u;return 0===(u=(l=e,i=t,r=n,s=a,Object.values(l.roles).filter(e=>m(e)||!I(i,e.id,r,s)&&N(l,e))).sort(T).map(e=>p(e))).length?A(S.default.Messages.CHANNEL_PERMISSIONS_NO_ROLES):u}",
        "getMembersRows": "function G(e,t,n,a){let l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:()=>!0;return e.map(o.default.getUser).filter(c.isNotNullish).filter(e=>!n.isOwner(e)&&I(t,e.id,a)&&(l(y(e,n))||l(e.username)||l(e.discriminator))).map(e=>U(e,n)).sort(v)}",
        "getNoRolesRow": "function A(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:S.default.Messages.PRIVATE_CHANNEL_ADD_MEMBERS_MODAL_NO_ROLES;return[{rowType:h.RowType.EMPTY_STATE,colorString:(0,l.int2hex)(g.DEFAULT_ROLE_COLOR),name:e,disabled:!0,id:\"EMPTY_STATE\"}]}",
        "getPrivateChannelHintText": "function W(e){switch(e){case g.ChannelTypes.GUILD_TEXT:case g.ChannelTypes.GUILD_ANNOUNCEMENT:return S.default.Messages.PRIVATE_TEXT_CHANNEL_CREATION_PERMISSION_MISSING_HINT.format();case g.ChannelTypes.GUILD_VOICE:return S.default.Messages.PRIVATE_VOICE_CHANNEL_CREATION_PERMISSION_MISSING_HINT.format();case g.ChannelTypes.GUILD_CATEGORY:return S.default.Messages.PRIVATE_CATEGORY_CREATION_PERMISSION_MISSING_HINT.format();default:return null}}",
        "getRemoveTooltipHint": "function F(e){switch(e){case h.RowType.ROLE:return S.default.Messages.CHANNEL_PERMISSIONS_ADD_MEMBERS_TOOLTIP;case h.RowType.OWNER:return S.default.Messages.CHANNEL_PERMISSIONS_ADD_MEMBERS_TOOLTIP_OWNER;case h.RowType.ADMINISTRATOR:return S.default.Messages.CHANNEL_PERMISSIONS_ADD_MEMBERS_TOOLTIP_ADMINISTRATOR;case h.RowType.MEMBER:return S.default.Messages.CHANNEL_PERMISSIONS_ADD_MEMBERS_TOOLTIP;case h.RowType.EMPTY_STATE:default:return null}}",
        "getRoleRowData": "function p(e){var t;let n=arguments.length>1&&void 0!==arguments[1]&&arguments[1];let i=(t=e,a.default.has(t.permissions,g.Permissions.ADMINISTRATOR)?h.RowType.ADMINISTRATOR:h.RowType.ROLE);return{rowType:i,colorString:e.colorString??(0,l.int2hex)(g.DEFAULT_ROLE_COLOR),name:e.name,id:e.id,disabled:m(e)||n,key:`${i}:${e.id}`,tags:e.tags}}",
        "getRolesRows": "function R(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:()=>!0;return null==e.roles?[]:Object.values(e.roles).filter(l=>!m(l)&&I(t,l.id,n)&&N(e,l)&&a(l.name)).sort(T).map(e=>p(e))}",
        "getRolesRowsWithPermissionDisabled": "function L(e,t,n){let l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:()=>!0;return null==e.roles?[]:Object.values(e.roles).filter(a=>!m(a)&&I(t,a.id,n)&&N(e,a)&&l(a.name)).sort(T).map(e=>p(e,a.default.has(e.permissions,n)))}",
        "getRowTypeLabel": "function w(e,t){switch(e){case h.RowType.ROLE:return S.default.Messages.PRIVATE_CHANNEL_ADD_MEMBERS_MODAL_ROW_ROLE;case h.RowType.OWNER:return S.default.Messages.PRIVATE_CHANNEL_ADD_MEMBERS_MODAL_ROW_OWNER;case h.RowType.ADMINISTRATOR:return S.default.Messages.PRIVATE_CHANNEL_ADD_MEMBERS_MODAL_ROW_ADMINISTRATOR;case h.RowType.MEMBER:return t?S.default.Messages.PRIVATE_CHANNEL_ADD_MEMBERS_MODAL_ROW_MEMBER:null;case h.RowType.USER:return S.default.Messages.USER;case h.RowType.GUILD:return S.default.Messages.SERVER;case h.RowType.EMPTY_STATE:return null}}",
        "grantUserChannelAccess": "function x(e,t){let n=o.default.getCurrentUser();if(null==n)return;let l=e.permissionOverwrites[n.id];if(null==l){let l={id:n.id,type:r.PermissionOverwriteType.MEMBER,allow:a.default.add(f.default.NONE,t),deny:f.default.NONE};(0,i.savePermissionUpdates)(e.id,[l],!0)}else{let{allow:n,deny:r}=l;n=a.default.add(n,t),(0,i.updatePermission)(e,l.id,n,r)}}",
        "hasCustomRoles": "function V(e){let t=Object.keys(e.roles);return 0!==t.length&&(1!==t.length||t[0]!==e.id)}",
        "isAdmin": "function m(e){return a.default.has(e.permissions,g.Permissions.ADMINISTRATOR)}",
        "isEveryoneRoleId": "function C(e,t){return E.default.castGuildIdAsEveryoneGuildRoleId(e)===t}",
        "isNotEveryoneRoleId": "function M(e,t){return!C(e,t)}",
        "isPrivateGuildChannel": "function B(e,t){if(null==e)return!1;let n=e.permissionOverwrites[e.guild_id];return t?.[e.guild_id]!=null&&(n=t[e.guild_id]),null!=n&&a.default.has(n.deny,e.accessPermissions)}",
        "sortRoles": "function T(e,t){let n=m(e)?0:1,a=m(t)?0:1;return n!==a?n-a:t.position-e.position}",
        "toggleChannelEveryonePermission": "function H(e,t,n){let a=k(e,t,n);(0,i.updatePermission)(e,a.id,a.allow,a.deny)}"
    }
}