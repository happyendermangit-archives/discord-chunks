{
    "exports": {
        "default": {
            "initializedCount": 0,
            "actions": {
                "GUILD_CREATE": "function C(e){let{guild:_}=e;_.unableToSyncDeletes&&D(_.id)}",
                "DELETED_ENTITY_IDS": "function u(e){var _;let E=null===(_=N.default.getGuild(e.guild_id))||void 0===_?void 0:_.name;R.fileOnly(\"received deleted guild entities (id: \".concat(e.guild_id,\", name: \").concat(E,\")\")),n.default.Emitter.batched(()=>{null!=e.channels&&function(e,_){let E=O.default.keys(S.default.getMutableBasicGuildChannelsForGuild(e));R.fileOnly(\"syncChannels\",{channelIdsInMemory:E,channelIdsFromServer:_}),E.forEach(E=>{!_.has(E)&&r.default.dispatch({type:\"CHANNEL_DELETE\",channel:{guild_id:e,id:E,parent_id:void 0}})})}(e.guild_id,new Set(e.channels)),null!=e.roles&&function(e,_){var E,t;O.default.keys(null!==(t=null===(E=N.default.getGuild(e))||void 0===E?void 0:E.roles)&&void 0!==t?t:{}).forEach(E=>{!_.has(E)&&r.default.dispatch({type:\"GUILD_ROLE_DELETE\",guildId:e,roleId:E})})}(e.guild_id,new Set(e.roles)),null!=e.emojis&&function(e,_){let E=s.default.getGuildEmoji(e),t=E.filter(e=>_.has(e.id));E.length!==t.length&&r.default.dispatch({type:\"GUILD_EMOJIS_UPDATE\",guildId:e,emojis:t})}(e.guild_id,new Set(e.emojis)),null!=e.stickers&&function(e,_){var E;let t=null!==(E=T.default.getStickersByGuildId(e))&&void 0!==E?E:[],o=t.filter(e=>_.has(e.id));t.length!==o.length&&r.default.dispatch({type:\"GUILD_STICKERS_UPDATE\",guildId:e,stickers:o})}(e.guild_id,new Set(e.stickers))})}"
            },
            "stores": {
                "toJSON": "function(){return Array.from(this)}",
                "get": "function get() { [native code] }",
                "set": "function set() { [native code] }",
                "has": "function has() { [native code] }",
                "delete": "function delete() { [native code] }",
                "clear": "function clear() { [native code] }",
                "entries": "function entries() { [native code] }",
                "forEach": "function forEach() { [native code] }",
                "keys": "function keys() { [native code] }",
                "size": 0,
                "values": "function values() { [native code] }"
            },
            "_initialize": "_initialize(){r.default.subscribe(\"CONNECTION_OPEN\",L)}",
            "_terminate": "_terminate(){r.default.unsubscribe(\"CONNECTION_OPEN\",L)}"
        }
    }
}