{
    "exports": {
        "openMigrationModal": "async function h(e){let{body:{guild_noise:t,usage:s}}=await a.default.get(\"/users/@me/notification-migration-data2\"),r=(0,c.transformUsageData)(s);(0,l.openModalLazy)(async()=>{let{default:a}=await n.el(\"923660\").then(n.bind(n,\"923660\"));return n=>(0,i.jsx)(a,{...n,dismissable:e,guildPain:t,myUsage:r})})}",
        "default": {
            "initializedCount": 0,
            "actions": {
                "POST_CONNECTION_OPEN": "async handlePostConnectionOpen(){if(s.default.get(\"turnedOffNewNotifications\")||!o.default.hasConsented(f.Consents.PERSONALIZATION)||!d.NotificationsExperiment.getCurrentConfig({location:\"NotificationMigrationManager\"},{autoTrackExposure:!1}).enabled||u.default.useNewNotifications)return;let{logExposure:e,autoOpen:t}=d.UnreadsEntryPointExperiment.getCurrentConfig({location:\"NotificationMigrationManager\"},{autoTrackExposure:!1});if(!e)return;let{body:{guild_noise:r,usage:m}}=await a.default.get(\"/users/@me/notification-migration-data2\"),h=(0,c.transformUsageData)(m),{default:g}=await n.el(\"923660\").then(n.bind(n,\"923660\"));if(!(0,l.hasAnyModalOpen)())d.UnreadsEntryPointExperiment.trackExposure({location:\"NotificationMigrationManager\"}),t&&((0,c.hasGoodCandidateServers)(r,h)?(0,l.openModal)(e=>(0,i.jsx)(g,{...e,dismissable:!1,guildPain:r,myUsage:h}),{onCloseRequest:()=>{}}):(0,c.autoMigrateToNewSystem)())}"
            },
            "stores": {
                "toJSON": "function(){return Array.from(this)}",
                "get": "function get() { [native code] }",
                "set": "function set() { [native code] }",
                "has": "function has() { [native code] }",
                "delete": "function delete() { [native code] }",
                "clear": "function clear() { [native code] }",
                "entries": "function entries() { [native code] }",
                "forEach": "function forEach() { [native code] }",
                "keys": "function keys() { [native code] }",
                "size": 0,
                "values": "function values() { [native code] }"
            },
            "handlePostConnectionOpen": "async handlePostConnectionOpen(){if(s.default.get(\"turnedOffNewNotifications\")||!o.default.hasConsented(f.Consents.PERSONALIZATION)||!d.NotificationsExperiment.getCurrentConfig({location:\"NotificationMigrationManager\"},{autoTrackExposure:!1}).enabled||u.default.useNewNotifications)return;let{logExposure:e,autoOpen:t}=d.UnreadsEntryPointExperiment.getCurrentConfig({location:\"NotificationMigrationManager\"},{autoTrackExposure:!1});if(!e)return;let{body:{guild_noise:r,usage:m}}=await a.default.get(\"/users/@me/notification-migration-data2\"),h=(0,c.transformUsageData)(m),{default:g}=await n.el(\"923660\").then(n.bind(n,\"923660\"));if(!(0,l.hasAnyModalOpen)())d.UnreadsEntryPointExperiment.trackExposure({location:\"NotificationMigrationManager\"}),t&&((0,c.hasGoodCandidateServers)(r,h)?(0,l.openModal)(e=>(0,i.jsx)(g,{...e,dismissable:!1,guildPain:r,myUsage:h}),{onCloseRequest:()=>{}}):(0,c.autoMigrateToNewSystem)())}"
        }
    }
}