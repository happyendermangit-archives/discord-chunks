{
    "exports": {
        "useListState": "function s(e){let{filter:t}=e,n=(0,a.useMultipleSelectionState)(e),s=(0,r.useMemo)(()=>e.disabledKeys?new Set(e.disabledKeys):new Set,[e.disabledKeys]),c=(0,r.useCallback)(e=>new o(t?t(e):e),[t]),l=(0,r.useMemo)(()=>({suppressTextValueWarning:e.suppressTextValueWarning}),[e.suppressTextValueWarning]),u=(0,i.useCollection)(e,c,l),d=(0,r.useMemo)(()=>new a.SelectionManager(u,n),[u,n]),p=(0,r.useRef)(null);return(0,r.useEffect)(()=>{if(null!=n.focusedKey&&!u.getItem(n.focusedKey)){let e;let t=p.current.getItem(n.focusedKey),r=[...p.current.getKeys()].map(e=>{let t=p.current.getItem(e);return\"item\"===t.type?t:null}).filter(e=>null!==e),a=[...u.getKeys()].map(e=>{let t=u.getItem(e);return\"item\"===t.type?t:null}).filter(e=>null!==e),i=r.length-a.length,o=Math.min(i>1?Math.max(t.index-i+1,0):t.index,a.length-1);for(;o>=0;){if(!d.isDisabled(a[o].key)){e=a[o];break}o<a.length-1?o++:(o>t.index&&(o=t.index),o--)}n.setFocusedKey(e?e.key:null)}p.current=u},[u,d,n,n.focusedKey]),{collection:u,disabledKeys:s,selectionManager:d}}"
    }
}