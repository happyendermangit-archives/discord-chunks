{
    "exports": {
        "default": {
            "initializedCount": 0,
            "actions": {
                "RTC_CONNECTION_STATE": "function I(e){let t=(e.channelId??\"unknown\")+e.context;switch(e.state){case _.RTCConnectionStates.RTC_CONNECTED:E.add(t),s.default.setCrashInformation(i.StoredCrashInformation.HasRTCConnection,1);break;case _.RTCConnectionStates.DISCONNECTED:s.default.setCrashInformation(l(e.context),null),E.delete(t),0===E.size&&!function(){for(let e of[i.StoredCrashInformation.HasRTCConnection,i.StoredCrashInformation.IsSendingVideo,i.StoredCrashInformation.IsSendingStream,i.StoredCrashInformation.IsReceivingVideo,i.StoredCrashInformation.IsReceivingStream])s.default.setCrashInformation(e,0)}()}}",
                "RTC_CONNECTION_VIDEO": "function T(e){let t=e.userId===a.default.getId(),n=null!=e.streamId,o=null;switch(e.context){case r.MediaEngineContextTypes.DEFAULT:o=t?i.StoredCrashInformation.IsSendingVideo:i.StoredCrashInformation.IsReceivingVideo;break;case r.MediaEngineContextTypes.STREAM:o=t?i.StoredCrashInformation.IsSendingStream:i.StoredCrashInformation.IsReceivingStream}s.default.setCrashInformation(o,n?1:0)}",
                "MEDIA_SESSION_JOINED": "function u(e){s.default.setCrashInformation(l(e.context),e.mediaSessionId??null)}"
            },
            "stores": {
                "toJSON": "function(){return Array.from(this)}",
                "get": "function get() { [native code] }",
                "set": "function set() { [native code] }",
                "has": "function has() { [native code] }",
                "delete": "function delete() { [native code] }",
                "clear": "function clear() { [native code] }",
                "entries": "function entries() { [native code] }",
                "forEach": "function forEach() { [native code] }",
                "keys": "function keys() { [native code] }",
                "size": 0,
                "values": "function values() { [native code] }"
            }
        }
    }
}