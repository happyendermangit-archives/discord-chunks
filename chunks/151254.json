{
    "exports": {
        "default": {
            "addOnlineCallback": "addOnlineCallback(e){window.addEventListener(\"online\",e)}",
            "removeOnlineCallback": "removeOnlineCallback(e){window.removeEventListener(\"online\",e)}",
            "addOfflineCallback": "addOfflineCallback(e){window.addEventListener(\"offline\",e)}",
            "removeOfflineCallback": "removeOfflineCallback(e){window.removeEventListener(\"offline\",e)}",
            "addChangeCallback": "addChangeCallback(e){var t;t=e,r.push(t),function(){if(!0===o)return;let e=window.navigator.connection;null!=e&&(o=!0,e.addEventListener(\"change\",s))}()}",
            "removeChangeCallback": "removeChangeCallback(e){!function(e){let t=r.indexOf(e);-1!==t&&(r.splice(t,1),!function(){if(!1===o)return;let e=window.navigator.connection;null!=e&&0===r.length&&null!=e&&(e.removeEventListener(\"change\",s),o=!1)}())}(e)}",
            "getNetworkInformation": "()=>Promise.resolve(a())",
            "isOnline": "isOnline(){let e=navigator.onLine;return void 0===e||e}",
            "awaitOnline": "()=>new Promise(e=>{if(i.isOnline())return e();{if(r.push(e),o)return;o=!0;let t=()=>{r.forEach(e=>e()),r.length=0,o=!1,i.removeOnlineCallback(t)};i.addOnlineCallback(t)}})"
        }
    }
}