{
    "exports": {
        "GuildEntityDao": "class o{get prefix(){return this.table.prefix}constructor(e,t,n,i=!0){this.originalPrefix=e,this.table=new r.Table([e],t,n,i)}withoutLogging(){return new o(this.originalPrefix,this.table.tableId,this.table.database,!1)}get(e,t){return this.table.get([e,t])}getMany(e,t){return this.table.getMany([e],t)}getRange(e,t,n,i){return this.table.getRange([e,t],[e,n],i)}getKvEntries(){return this.table.getKvEntries()}getMapEntries(){return this.table.getMapEntries()}getIds(e){return this.table.getChildIds([e])}getGuildIds(){return this.table.getChildIds([])}getGuildId(e){return this.table.getParentId([null,e])}put(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:i.ConflictOptions.Replace;return this.transaction(i=>i.put(e,t,n),`${this.prefix} put`)}putAll(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:i.ConflictOptions.Replace;return this.transaction(i=>i.putAll(e,t,n),`${this.prefix} putAll`)}replaceAll(e,t){return this.transaction(n=>n.replaceAll(e,t),`${this.prefix} replaceAll`)}delete(e,t){return this.transaction(n=>n.delete(e,t),`${this.prefix} delete`)}deleteGeneration(e,t){return this.transaction(n=>n.deleteGeneration(e,t),`${this.prefix} deleteGeneration`)}transaction(e,t){return this.table.transaction(t=>e(new a(t)),t)}upgradeTransaction(e){return new a(this.table.upgradeTransaction(e))}getManySyncUnsafe(e,t){return this.table.getManySyncUnsafe([e],t)}getMapEntriesSyncUnsafe(){return this.table.getMapEntriesSyncUnsafe()}static cell(e,t,n){return{key:[e,t.id],data:t,generation:n}}}"
    }
}