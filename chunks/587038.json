{
    "exports": {
        "DOMUtils": {
            "getLineStart": "getLineStart(e,t,n){let i;let a=d.getParentElement(e,t);if(null==a)return null;let s=d.previous(e,{at:t,match:t=>d.isInline(e,t)&&!d.isVoid(e,t)&&t!==a[0]});null!=s&&(i=d.after(e,s[1])),null==i&&(i=d.start(e,a[1]));let l={anchor:i,focus:t},r=Array.from(d.positions(e,{at:l})),o=y(e,t,r,!0);if(n&&h.equals(t,o)&&!h.isAtEnd(t,a)){let n=d.after(e,t);if(null==n)return o;o=y(e,n,r,!0)}return o}",
            "getLineEnd": "getLineEnd(e,t,n){let i;let a=d.getParentElement(e,t);if(null==a)return null;let s=d.next(e,{at:t,match:t=>d.isInline(e,t)&&!d.isVoid(e,t)&&t!==a[0]});null!=s&&(i=d.before(e,s[1])),null==i&&(i=d.end(e,a[1]));let l={anchor:t,focus:i},r=Array.from(d.positions(e,{at:l})),o=y(e,t,r,!1);if(n&&h.equals(t,o)&&!h.isAtEnd(t,a)){let n=d.after(e,t);if(null==n)return o;o=y(e,n,r,!1)}return o}",
            "getLineActionRange": "getLineActionRange(e,t){let n=E.toPoint(e.selection);if(null==n)return null;if(t){let t=S.getLineStart(e,n,!1);return null==t?null:{anchor:t,focus:n}}{let t=S.getLineEnd(e,n,!0);return null==t?null:{anchor:n,focus:t}}}"
        },
        "EditorUtils": {
            "above": "above(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{voids:n=!1,mode:r=\"lowest\",at:a=e.selection,match:i}=t;if(a){var o=Z.path(e,a);for(var[s,l]of Z.levels(e,{at:o,voids:n,match:i,reverse:\"lowest\"===r}))if(!eO.isText(s)){if(eg.isRange(a)){if(es.isAncestor(l,a.anchor.path)&&es.isAncestor(l,a.focus.path))return[s,l]}else if(!es.equals(o,l))return[s,l]}}}",
            "addMark": "addMark(e,t,n){e.addMark(t,n)}",
            "after": "after(e,t){var n,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=Z.point(e,t,{edge:\"end\"}),i=Z.end(e,[]),{distance:o=1}=r,s=0;for(var l of Z.positions(e,K(K({},r),{},{at:{anchor:a,focus:i}}))){if(s>o)break;0!==s&&(n=l),s++}return n}",
            "before": "before(e,t){var n,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=Z.start(e,[]),i=Z.point(e,t,{edge:\"start\"}),{distance:o=1}=r,s=0;for(var l of Z.positions(e,K(K({},r),{},{at:{anchor:a,focus:i},reverse:!0}))){if(s>o)break;0!==s&&(n=l),s++}return n}",
            "deleteBackward": "deleteBackward(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{unit:n=\"character\"}=t;e.deleteBackward(n)}",
            "deleteForward": "deleteForward(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{unit:n=\"character\"}=t;e.deleteForward(n)}",
            "deleteFragment": "deleteFragment(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{direction:n=\"forward\"}=t;e.deleteFragment(n)}",
            "edges": "(e,t)=>[Z.start(e,t),Z.end(e,t)]",
            "end": "(e,t)=>Z.point(e,t,{edge:\"end\"})",
            "first": "first(e,t){var n=Z.path(e,t,{edge:\"start\"});return Z.node(e,n)}",
            "fragment": "fragment(e,t){var n=Z.range(e,t);return er.fragment(e,n)}",
            "hasBlocks": "(e,t)=>t.children.some(t=>W.isElement(t)&&Z.isBlock(e,t))",
            "hasInlines": "(e,t)=>t.children.some(t=>eO.isText(t)||Z.isInline(e,t))",
            "hasTexts": "(e,t)=>t.children.every(e=>eO.isText(e))",
            "insertBreak": "insertBreak(e){e.insertBreak()}",
            "insertSoftBreak": "insertSoftBreak(e){e.insertSoftBreak()}",
            "insertFragment": "insertFragment(e,t){e.insertFragment(t)}",
            "insertNode": "insertNode(e,t){e.insertNode(t)}",
            "insertText": "insertText(e,t){e.insertText(t)}",
            "isBlock": "(e,t)=>f.isElement(t)&&s.Editor.isBlock(e,t)",
            "isEditor": "isEditor(e){var t=X.get(e);if(void 0!==t)return t;if(!(0,i.isPlainObject)(e))return!1;var n=\"function\"==typeof e.addMark&&\"function\"==typeof e.apply&&\"function\"==typeof e.deleteBackward&&\"function\"==typeof e.deleteForward&&\"function\"==typeof e.deleteFragment&&\"function\"==typeof e.insertBreak&&\"function\"==typeof e.insertSoftBreak&&\"function\"==typeof e.insertFragment&&\"function\"==typeof e.insertNode&&\"function\"==typeof e.insertText&&\"function\"==typeof e.isInline&&\"function\"==typeof e.isVoid&&\"function\"==typeof e.normalizeNode&&\"function\"==typeof e.onChange&&\"function\"==typeof e.removeMark&&\"function\"==typeof e.getDirtyPaths&&(null===e.marks||(0,i.isPlainObject)(e.marks))&&(null===e.selection||eg.isRange(e.selection))&&er.isNodeList(e.children)&&eo.isOperationList(e.operations);return X.set(e,n),n}",
            "isEnd": "isEnd(e,t,n){var r=Z.end(e,n);return ed.equals(t,r)}",
            "isEdge": "(e,t,n)=>Z.isStart(e,t,n)||Z.isEnd(e,t,n)",
            "isEmpty": "isEmpty(e,t){var{children:n}=t,[r]=n;return 0===n.length||1===n.length&&eO.isText(r)&&\"\"===r.text&&!e.isVoid(t)}",
            "isInline": "(e,t)=>f.isElement(t)&&s.Editor.isInline(e,t)",
            "isNormalizing": "isNormalizing(e){var t=d.get(e);return void 0===t||t}",
            "isStart": "isStart(e,t,n){if(0!==t.offset)return!1;var r=Z.start(e,n);return ed.equals(t,r)}",
            "isVoid": "(e,t)=>f.isElement(t)&&s.Editor.isVoid(e,t)",
            "last": "last(e,t){var n=Z.path(e,t,{edge:\"end\"});return Z.node(e,n)}",
            "leaf": "leaf(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=Z.path(e,t,n);return[er.leaf(e,r),r]}",
            "levels": "*levels(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{at:n=e.selection,reverse:r=!1,voids:a=!1}=t,{match:i}=t;if(null==i&&(i=()=>!0),n){var o=[],s=Z.path(e,n);for(var[l,c]of er.levels(e,s))if(i(l,c)&&(o.push([l,c]),!a&&W.isElement(l)&&Z.isVoid(e,l)))break;r&&o.reverse(),yield*o}}",
            "marks": "marks(e){var{marks:t,selection:n}=e;if(!n)return null;if(t)return t;if(eg.isExpanded(n)){var[r]=Z.nodes(e,{match:eO.isText});if(!r)return{};var[a]=r;return f(a,$)}var{anchor:i}=n,{path:o}=i,[s]=Z.leaf(e,o);if(0===i.offset){var l=Z.previous(e,{at:o,match:eO.isText});if(!Z.above(e,{match:t=>W.isElement(t)&&Z.isVoid(e,t)&&e.markableVoid(t)})){var c=Z.above(e,{match:t=>W.isElement(t)&&Z.isBlock(e,t)});if(l&&c){var[_,d]=l,[,u]=c;es.isAncestor(u,d)&&(s=_)}}}return f(s,j)}",
            "next": "next(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{mode:n=\"lowest\",voids:r=!1}=t,{match:a,at:i=e.selection}=t;if(!!i){var o=Z.after(e,i,{voids:r});if(o){var[,s]=Z.last(e,[]),l=[o.path,s];if(es.isPath(i)&&0===i.length)throw Error(\"Cannot get the next node from the root node!\");if(null==a){if(es.isPath(i)){var[c]=Z.parent(e,i);a=e=>c.children.includes(e)}else a=()=>!0}var[_]=Z.nodes(e,{at:l,match:a,mode:n,voids:r});return _}}}",
            "node": "node(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=Z.path(e,t,n);return[er.get(e,r),r]}",
            "nodes": "*nodes(e){var t,n,r,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{at:i=e.selection,mode:o=\"all\",universal:s=!1,reverse:l=!1,voids:c=!1}=a,{match:_}=a;if(!_&&(_=()=>!0),i){if(J.isSpan(i))t=i[0],n=i[1];else{var d=Z.path(e,i,{edge:\"start\"}),u=Z.path(e,i,{edge:\"end\"});t=l?u:d,n=l?d:u}var p=er.nodes(e,{reverse:l,from:t,to:n,pass:t=>{var[n]=t;return!c&&W.isElement(n)&&Z.isVoid(e,n)}}),m=[];for(var[g,E]of p){var S=r&&0===es.compare(E,r[1]);if(\"highest\"!==o||!S){if(!_(g,E)){if(s&&!S&&eO.isText(g))return;continue}if(\"lowest\"===o&&S){r=[g,E];continue}var f=\"lowest\"===o?r:[g,E];f&&(s?m.push(f):yield f),r=[g,E]}}\"lowest\"===o&&r&&(s?m.push(r):yield r),s&&(yield*m)}}",
            "normalize": "normalize(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{force:n=!1,operation:r}=t,a=e=>l.get(e)||[],i=e=>c.get(e)||new Set,o=e=>{var t=a(e).pop(),n=t.join(\",\");return i(e).delete(n),t};if(!!Z.isNormalizing(e)){if(n){var s=Array.from(er.nodes(e),e=>{var[,t]=e;return t}),_=new Set(s.map(e=>e.join(\",\")));l.set(e,s),c.set(e,_)}0!==a(e).length&&Z.withoutNormalizing(e,()=>{for(var t of a(e))if(er.has(e,t)){var n=Z.node(e,t),[i,s]=n;W.isElement(i)&&0===i.children.length&&e.normalizeNode(n,{operation:r})}for(var l=a(e),c=l.length,_=0;0!==l.length;){if(!e.shouldNormalize({dirtyPaths:l,iteration:_,initialDirtyPathsLength:c,operation:r}))return;var d=o(e);if(er.has(e,d)){var u=Z.node(e,d);e.normalizeNode(u,{operation:r})}_++,l=a(e)}})}}",
            "parent": "parent(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=Z.path(e,t,n),a=es.parent(r);return Z.node(e,a)}",
            "path": "path(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},{depth:r,edge:a}=n;if(es.isPath(t)){if(\"start\"===a){var[,i]=er.first(e,t);t=i}else if(\"end\"===a){var[,o]=er.last(e,t);t=o}}return eg.isRange(t)&&(t=\"start\"===a?eg.start(t):\"end\"===a?eg.end(t):es.common(t.anchor.path,t.focus.path)),ed.isPoint(t)&&(t=t.path),null!=r&&(t=t.slice(0,r)),t}",
            "hasPath": "(e,t)=>er.has(e,t)",
            "pathRef": "pathRef(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},{affinity:r=\"forward\"}=n,a={current:t,affinity:r,unref(){var{current:t}=a;return Z.pathRefs(e).delete(a),a.current=null,t}};return Z.pathRefs(e).add(a),a}",
            "pathRefs": "pathRefs(e){var t=u.get(e);return!t&&(t=new Set,u.set(e,t)),t}",
            "point": "point(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},{edge:r=\"start\"}=n;if(es.isPath(t)){if(\"end\"===r){var a,[,i]=er.last(e,t);a=i}else{var[,o]=er.first(e,t);a=o}var s=er.get(e,a);if(!eO.isText(s))throw Error(\"Cannot get the \".concat(r,\" point in the node at path [\").concat(t,\"] because it has no \").concat(r,\" text node.\"));return{path:a,offset:\"end\"===r?s.text.length:0}}if(eg.isRange(t)){var[l,c]=eg.edges(t);return\"start\"===r?l:c}return t}",
            "pointRef": "pointRef(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},{affinity:r=\"forward\"}=n,a={current:t,affinity:r,unref(){var{current:t}=a;return Z.pointRefs(e).delete(a),a.current=null,t}};return Z.pointRefs(e).add(a),a}",
            "pointRefs": "pointRefs(e){var t=p.get(e);return!t&&(t=new Set,p.set(e,t)),t}",
            "positions": "*positions(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{at:n=e.selection,unit:r=\"offset\",reverse:a=!1,voids:i=!1}=t;if(n){var o=Z.range(e,n),[s,l]=eg.edges(o),c=a?l:s,_=!1,d=\"\",u=0,p=0,m=0;for(var[g,E]of Z.nodes(e,{at:n,reverse:a,voids:i})){if(W.isElement(g)){if(!i&&e.isVoid(g)){yield Z.start(e,E);continue}if(e.isInline(g))continue;if(Z.hasInlines(e,g)){var S=es.isAncestor(E,l.path)?l:Z.end(e,E),f=es.isAncestor(E,s.path)?s:Z.start(e,E);d=Z.string(e,{anchor:f,focus:S},{voids:i}),_=!0}}if(eO.isText(g)){var T=es.equals(E,c.path);for(T?(p=a?c.offset:g.text.length-c.offset,m=c.offset):(p=g.text.length,m=a?p:0),(T||_||\"offset\"===r)&&(yield{path:E,offset:m},_=!1);;){if(0===u){if(\"\"===d)break;u=function(e,t,n){if(\"character\"===t)return b(e,n);if(\"word\"===t)return v(e,n);if(\"line\"===t||\"block\"===t)return e.length;return 1}(d,r,a),d=O(d,u,a)[1]}if(m=a?m-u:m+u,(p-=u)<0){u=-p;break}u=0,yield{path:E,offset:m}}}}}}",
            "previous": "previous(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{mode:n=\"lowest\",voids:r=!1}=t,{match:a,at:i=e.selection}=t;if(!!i){var o=Z.before(e,i,{voids:r});if(o){var[,s]=Z.first(e,[]),l=[o.path,s];if(es.isPath(i)&&0===i.length)throw Error(\"Cannot get the previous node from the root node!\");if(null==a){if(es.isPath(i)){var[c]=Z.parent(e,i);a=e=>c.children.includes(e)}else a=()=>!0}var[_]=Z.nodes(e,{reverse:!0,at:l,match:a,mode:n,voids:r});return _}}}",
            "range": "(e,t,n)=>eg.isRange(t)&&!n?t:{anchor:Z.start(e,t),focus:Z.end(e,n||t)}",
            "rangeRef": "rangeRef(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},{affinity:r=\"forward\"}=n,a={current:t,affinity:r,unref(){var{current:t}=a;return Z.rangeRefs(e).delete(a),a.current=null,t}};return Z.rangeRefs(e).add(a),a}",
            "rangeRefs": "rangeRefs(e){var t=m.get(e);return!t&&(t=new Set,m.set(e,t)),t}",
            "removeMark": "removeMark(e,t){e.removeMark(t)}",
            "setNormalizing": "setNormalizing(e,t){d.set(e,t)}",
            "start": "(e,t)=>Z.point(e,t,{edge:\"start\"})",
            "string": "string(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},{voids:r=!1}=n,a=Z.range(e,t),[i,o]=eg.edges(a),s=\"\";for(var[l,c]of Z.nodes(e,{at:a,match:eO.isText,voids:r})){var _=l.text;es.equals(c,o.path)&&(_=_.slice(0,o.offset)),es.equals(c,i.path)&&(_=_.slice(i.offset)),s+=_}return s}",
            "unhangRange": "unhangRange(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},{voids:r=!1}=n,[a,i]=eg.edges(t);if(0!==a.offset||0!==i.offset||eg.isCollapsed(t)||es.hasPrevious(i.path))return t;var o=Z.above(e,{at:i,match:t=>W.isElement(t)&&Z.isBlock(e,t),voids:r}),s=o?o[1]:[],l={anchor:Z.start(e,a),focus:i},c=!0;for(var[_,d]of Z.nodes(e,{at:l,match:eO.isText,reverse:!0,voids:r})){if(c){c=!1;continue}if(\"\"!==_.text||es.isBefore(d,s)){i={path:d,offset:_.text.length};break}}return{anchor:a,focus:i}}",
            "void": "void(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return Z.above(e,K(K({},t),{},{match:t=>W.isElement(t)&&Z.isVoid(e,t)}))}",
            "withoutNormalizing": "withoutNormalizing(e,t){let n=d.isNormalizing(e);d.setNormalizing(e,!1);try{t()}finally{d.setNormalizing(e,n)}!1!==n&&d.normalize(e)}",
            "isComposing": "e=>!!w.get(e)",
            "getWindow": "getWindow(e){var t=v.get(e);if(!t)throw Error(\"Unable to find a host window element for this editor\");return t}",
            "findKey": "findKey(e,t){var n=A.get(t);return!n&&(n=new T,A.set(t,n)),n}",
            "findPath": "findPath(e,t){for(var n=[],r=t;;){var a=h.get(r);if(null==a){if(u.Editor.isEditor(r))return n;break}var i=C.get(r);if(null==i)break;n.unshift(i),r=a}throw Error(\"Unable to find the path for Slate node: \".concat(u.Scrubber.stringify(t)))}",
            "findDocumentOrShadowRoot": "t=>t.windowContext?.renderWindow.document??e(t)",
            "isFocused": "e=>!!x.get(e)",
            "isReadOnly": "e=>!!I.get(e)",
            "blur": "blur(e){var t=eC.toDOMNode(e,e),n=eC.findDocumentOrShadowRoot(e);x.set(e,!1),n.activeElement===t&&t.blur()}",
            "focus": "focus(e){!l.ReactEditor.isFocused(e)&&(l.ReactEditor.focus(e),l.ReactEditor.deselect(e))}",
            "deselect": "deselect(e){var{selection:t}=e,n=eC.findDocumentOrShadowRoot(e).getSelection();n&&n.rangeCount>0&&n.removeAllRanges(),t&&u.Transforms.deselect(e)}",
            "hasDOMNode": "hasDOMNode(e,t){var n,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},{editable:a=!1}=r,i=eC.toDOMNode(e,e);try{n=$(t)?t:t.parentElement}catch(e){if(!e.message.includes('Permission denied to access property \"nodeType\"'))throw e}return!!n&&n.closest(\"[data-slate-editor]\")===i&&(!a||!!n.isContentEditable||\"boolean\"==typeof n.isContentEditable&&n.closest('[contenteditable=\"false\"]')===i||!!n.getAttribute(\"data-slate-zero-width\"))}",
            "insertData": "insertData(e,t){e.insertData(t)}",
            "insertFragmentData": "(e,t)=>e.insertFragmentData(t)",
            "insertTextData": "(e,t)=>e.insertTextData(t)",
            "setFragmentData": "setFragmentData(e,t,n){e.setFragmentData(t,n)}",
            "toDOMNode": "toDOMNode(e,t){var n=y.get(e),r=u.Editor.isEditor(t)?O.get(e):null==n?void 0:n.get(eC.findKey(e,t));if(!r)throw Error(\"Cannot resolve a DOM node from Slate node: \".concat(u.Scrubber.stringify(t)));return r}",
            "toDOMPoint": "toDOMPoint(e,t){var[n]=u.Editor.node(e,t.path),r=eC.toDOMNode(e,n);u.Editor.void(e,{at:t})&&(t={path:t.path,offset:0});for(var a=Array.from(r.querySelectorAll(\"[data-slate-string], [data-slate-zero-width]\")),i=0,o=0;o<a.length;o++){var s=a[o],l=s.childNodes[0];if(null!=l&&null!=l.textContent){var{length:c}=l.textContent,_=s.getAttribute(\"data-slate-length\"),d=i+(null==_?c:parseInt(_,10)),p=a[o+1];if(t.offset===d&&null!=p&&p.hasAttribute(\"data-slate-mark-placeholder\")){var m,g,E=p.childNodes[0];m=[E instanceof q?E:p,null!==(g=p.textContent)&&void 0!==g&&g.startsWith(\"\\uFEFF\")?1:0];break}if(t.offset<=d){m=[l,Math.min(c,Math.max(0,t.offset-i))];break}i=d}}if(!m)throw Error(\"Cannot resolve a DOM point from Slate point: \".concat(u.Scrubber.stringify(t)));return m}",
            "toDOMRange": "toDOMRange(e,t){var{anchor:n,focus:r}=t,a=u.Range.isBackward(t),i=eC.toDOMPoint(e,n),o=u.Range.isCollapsed(t)?i:eC.toDOMPoint(e,r),s=eC.getWindow(e).document.createRange(),[l,c]=a?o:i,[_,d]=a?i:o,p=!!($(l)?l:l.parentElement).getAttribute(\"data-slate-zero-width\"),m=!!($(_)?_:_.parentElement).getAttribute(\"data-slate-zero-width\");return s.setStart(l,p?1:c),s.setEnd(_,m?1:d),s}",
            "toSlateNode": "toSlateNode(e,t){var n=$(t)?t:t.parentElement;n&&!n.hasAttribute(\"data-slate-node\")&&(n=n.closest(\"[data-slate-node]\"));var r=n?N.get(n):null;if(!r)throw Error(\"Cannot resolve a Slate node from DOM node: \".concat(n));return r}",
            "findEventRange": "findEventRange(e,t){\"nativeEvent\"in t&&(t=t.nativeEvent);var n,{clientX:r,clientY:a,target:i}=t;if(null==r||null==a)throw Error(\"Cannot resolve a Slate range from a DOM event: \".concat(t));var o=eC.toSlateNode(e,t.target),s=eC.findPath(e,o);if(u.Element.isElement(o)&&u.Editor.isVoid(e,o)){var l=i.getBoundingClientRect(),c=e.isInline(o)?r-l.left<l.left+l.width-r:a-l.top<l.top+l.height-a,_=u.Editor.point(e,s,{edge:c?\"start\":\"end\"}),d=c?u.Editor.before(e,_):u.Editor.after(e,_);if(d)return u.Editor.range(e,d)}var{document:p}=eC.getWindow(e);if(p.caretRangeFromPoint)n=p.caretRangeFromPoint(r,a);else{var m=p.caretPositionFromPoint(r,a);m&&((n=p.createRange()).setStart(m.offsetNode,m.offset),n.setEnd(m.offsetNode,m.offset))}if(!n)throw Error(\"Cannot resolve a Slate range from a DOM event: \".concat(t));return eC.toSlateRange(e,n,{exactMatch:!1,suppressThrow:!1})}",
            "toSlatePoint": "(t,n,i)=>{let{exactMatch:a,suppressThrow:s,direction:r=\"forward\"}=i;!a&&(n=l(n,r));try{return e(t,n,{exactMatch:!0,suppressThrow:s})}catch(e){if(s)return null;throw e}}",
            "toSlateRange": "(e,t,n)=>{let a,s,l,r,o,{exactMatch:u,suppressThrow:c}=n;if(function(e){let t=e&&e.anchorNode&&d(e.anchorNode);return null!=t&&e instanceof t.Selection}(t)?(a=t.anchorNode,s=t.anchorOffset,l=t.focusNode,r=t.focusOffset,o=t.isCollapsed):(a=t.startContainer,s=t.startOffset,l=t.endContainer,r=t.endOffset,o=t.collapsed),null==a||null==l||null==s||null==r){if(c)return null;throw Error(\"Cannot resolve a Slate range from DOM range\")}let f=i.ReactEditor.toSlatePoint(e,[a,s],{exactMatch:u,suppressThrow:c}),p=o?f:i.ReactEditor.toSlatePoint(e,[l,r],{exactMatch:u,suppressThrow:c});return null!=f&&null!=p?{anchor:f,focus:p}:null}",
            "hasRange": "hasRange(e,t){var{anchor:n,focus:r}=t;return u.Editor.hasPath(e,n.path)&&u.Editor.hasPath(e,r.path)}",
            "hasTarget": "(e,t)=>j(t)&&eC.hasDOMNode(e,t)",
            "hasEditableTarget": "(e,t)=>j(t)&&eC.hasDOMNode(e,t,{editable:!0})",
            "hasSelectableTarget": "(e,t)=>eC.hasEditableTarget(e,t)||eC.isTargetInsideNonReadonlyVoid(e,t)",
            "isTargetInsideNonReadonlyVoid": "isTargetInsideNonReadonlyVoid(e,t){if(I.get(e))return!1;var n=eC.hasTarget(e,t)&&eC.toSlateNode(e,t);return u.Element.isElement(n)&&u.Editor.isVoid(e,n)}",
            "androidScheduleFlush": "androidScheduleFlush(e){var t;null===(t=P.get(e))||void 0===t||t()}",
            "androidPendingDiffs": "e=>F.get(e)",
            "richValue": "e=>e.children",
            "blocks": "e=>d.richValue(e).map((e,t)=>[e,[t]])",
            "isEditorEmpty": "isEditorEmpty(e){let t=d.richValue(e);return!(t.length>1)&&(0===t.length||\"line\"===t[0].type&&f.isEmpty(t[0]))}",
            "getFirstText": "getFirstText(e){let t=d.node(e,o.FIRST_TEXT_PATH);return p.isText(t[0])?t[0]:null}",
            "getCurrentBlock": "getCurrentBlock(e){return null==e.selection?null:this.getParentBlock(e,e.selection)}",
            "getCurrentElement": "getCurrentElement(e){return null==e.selection?null:this.getParentElement(e,e.selection)}",
            "getCurrentInline": "getCurrentInline(e){return null==e.selection?null:this.getParentInline(e,e.selection)}",
            "getCurrentVoid": "getCurrentVoid(e){return null==e.selection?null:this.getParentVoid(e,e.selection)}",
            "getCurrentText": "getCurrentText(e){let t=null!=e.selection?E.toPoint(e.selection):null;return null==t?null:d.node(e,t.path)}",
            "getParentBlock": "(e,t)=>d.above(e,{at:t,match:t=>f.isElement(t)&&d.isBlock(e,t),mode:\"lowest\"})??null",
            "getParentElement": "(e,t)=>d.above(e,{at:t,match:e=>f.isElement(e),mode:\"lowest\"})??null",
            "getParentInline": "(e,t)=>d.above(e,{at:t,match:t=>d.isInline(e,t),mode:\"lowest\"})??null",
            "getParentVoid": "(e,t)=>d.above(e,{at:t,match:t=>d.isVoid(e,t),mode:\"lowest\"})??null",
            "getSelectedVoid": "getSelectedVoid(e){let t;if(null==e.selection)return null;if(E.isExpanded(e.selection)){let[n,i]=E.edges(e.selection),a=d.after(e,n,{unit:\"offset\"}),s=d.before(e,i,{unit:\"offset\"});if(null==a||null==s||!h.equals(a,s))return null;t=a}else t=e.selection.anchor;return null==t?null:d.getParentVoid(e,t)}",
            "getSelectedText": "getSelectedText(e,t){let n=null;if(t){let t=l.ReactEditor.findDocumentOrShadowRoot(e).getSelection();if(null!=t&&t.rangeCount>0){let i=t.getRangeAt(0);null!=i&&(n=l.ReactEditor.toSlateRange(e,i,{exactMatch:!0,suppressThrow:!0}))}}else n=e.selection;return null==n?\"\":this.getTextFromRange(e,n)}",
            "getTextFromRange": "getTextFromRange(e,t){let[n,i]=E.edges(t),a=d.nodes(e,{at:t,mode:\"lowest\",match:e=>p.isText(e)}),s=\"\";for(let[e,t]of a){let a=m.equals(t,n.path)?n.offset:0,l=m.equals(t,i.path)?i.offset:0;s+=e.text.substring(a,l)}return s}",
            "areStylesDisabled": "areStylesDisabled(e){if(!e.previewMarkdown)return!0;let t=d.richValue(e),n=t[0],i=n?.type===\"line\"?n.children[0]:null;if(null==i||!p.isText(i))return!1;let a=e.chatInputType,s=i.text;return 1===t.length&&1===n.children.length&&(!0===a.sedReplace&&s.startsWith(\"s/\")||a.autocomplete?.reactions===!0&&s.startsWith(\"+\"))}",
            "getSelectionOverlap": "getSelectionOverlap(e,t){if(null==e.selection)return{anchor:null,focus:null};if(m.isPath(t)){let n=d.range(e,t),[i]=d.node(e,t);if(f.isElement(i)){let i=d.before(e,t),a=d.after(e,t);t={anchor:i??n.anchor,focus:a??n.focus}}else t=n}let[n,i]=E.edges(t),a=null,s=null;return h.equals(e.selection.anchor,n)?a=\"start\":h.equals(e.selection.anchor,i)?a=\"end\":E.includes(t,e.selection.anchor)&&(a=\"inside\"),h.equals(e.selection.focus,n)?s=\"start\":h.equals(e.selection.focus,i)?s=\"end\":E.includes(t,e.selection.focus)&&(s=\"inside\"),{anchor:a,focus:s}}"
        },
        "ElementUtils": {
            "isAncestor": "e=>(0,i.isPlainObject)(e)&&er.isNodeList(e.children)",
            "isElement": "e=>(0,i.isPlainObject)(e)&&er.isNodeList(e.children)&&!Z.isEditor(e)",
            "isElementList": "e=>Array.isArray(e)&&e.every(e=>W.isElement(e))",
            "isElementProps": "e=>void 0!==e.children",
            "isElementType": "function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:\"type\";return z(e)&&e[n]===t}",
            "matches": "matches(e,t){for(var n in t)if(\"children\"!==n&&e[n]!==t[n])return!1;return!0}",
            "updateElement": "updateElement(e,t){let n=d.node(e,t[1]);return a()(!d.isEditor(t[0]),\"Element is the root node\"),a()(null!=n,\"Failed to find element\"),a()(f.isElement(n[0]),\"Node at this path is no longer an element\"),a()(n[0].type===t[0].type,\"Node at this path is a different type\"),n}",
            "markdown": "markdown(e,t,n){let i=\"line\"===e.type&&e.codeBlockState?.wasInCodeBlock===!0,a=e.children.map(e=>p.isText(e)?e.text:\" \"),s=a.join(\"\");return{entries:r.parse(s,t??null,i,n),serializedChildren:a}}",
            "isEmpty": "isEmpty(e){if(e.children.length>1)return!1;if(0===e.children.length)return!0;let t=e.children[0];return p.isText(t)&&0===t.text.length}"
        },
        "NodeUtils": {
            "ancestor": "ancestor(e,t){var n=er.get(e,t);if(eO.isText(n))throw Error(\"Cannot get the ancestor node at path [\".concat(t,\"] because it refers to a text node instead: \").concat(ef.stringify(n)));return n}",
            "ancestors": "*ancestors(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};for(var r of es.ancestors(t,n)){var a=[er.ancestor(e,r),r];yield a}}",
            "child": "child(e,t){if(eO.isText(e))throw Error(\"Cannot get the child of a text node: \".concat(ef.stringify(e)));var n=e.children[t];if(null==n)throw Error(\"Cannot get child at index `\".concat(t,\"` in node: \").concat(ef.stringify(e)));return n}",
            "children": "*children(e,t){for(var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},{reverse:r=!1}=n,a=er.ancestor(e,t),{children:i}=a,o=r?i.length-1:0;r?o>=0:o<i.length;){var s=er.child(a,o),l=t.concat(o);yield[s,l],o=r?o-1:o+1}}",
            "common": "common(e,t,n){var r=es.common(t,n);return[er.get(e,r),r]}",
            "descendant": "descendant(e,t){var n=er.get(e,t);if(Z.isEditor(n))throw Error(\"Cannot get the descendant node at path [\".concat(t,\"] because it refers to the root editor node instead: \").concat(ef.stringify(n)));return n}",
            "descendants": "*descendants(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};for(var[n,r]of er.nodes(e,t))0!==r.length&&(yield[n,r])}",
            "elements": "*elements(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};for(var[n,r]of er.nodes(e,t))W.isElement(n)&&(yield[n,r])}",
            "extractProps": "extractProps(e){if(W.isAncestor(e)){var t=f(e,ee);return t}var t=f(e,et);return t}",
            "first": "first(e,t){for(var n=t.slice(),r=er.get(e,n);r&&!eO.isText(r)&&0!==r.children.length;){;r=r.children[0],n.push(0)}return[r,n]}",
            "fragment": "fragment(e,t){if(eO.isText(e))throw Error(\"Cannot get a fragment starting from a root text node: \".concat(ef.stringify(e)));return(0,o.produce)({children:e.children},e=>{var[n,r]=eg.edges(t);for(var[,a]of er.nodes(e,{reverse:!0,pass:e=>{var[,n]=e;return!eg.includes(t,n)}})){if(!eg.includes(t,a)){var i=er.parent(e,a),o=a[a.length-1];i.children.splice(o,1)}if(es.equals(a,r.path)){var s=er.leaf(e,a);s.text=s.text.slice(0,r.offset)}if(es.equals(a,n.path)){var l=er.leaf(e,a);l.text=l.text.slice(n.offset)}}Z.isEditor(e)&&(e.selection=null)}).children}",
            "get": "get(e,t){for(var n=e,r=0;r<t.length;r++){var a=t[r];if(eO.isText(n)||!n.children[a])throw Error(\"Cannot find a descendant at path [\".concat(t,\"] in node: \").concat(ef.stringify(e)));n=n.children[a]}return n}",
            "has": "has(e,t){for(var n=e,r=0;r<t.length;r++){var a=t[r];if(eO.isText(n)||!n.children[a])return!1;n=n.children[a]}return!0}",
            "isNode": "e=>eO.isText(e)||W.isElement(e)||Z.isEditor(e)",
            "isNodeList": "isNodeList(e){if(!Array.isArray(e))return!1;var t=en.get(e);if(void 0!==t)return t;var n=e.every(e=>er.isNode(e));return en.set(e,n),n}",
            "last": "last(e,t){for(var n=t.slice(),r=er.get(e,n);r&&!eO.isText(r)&&0!==r.children.length;){;var a=r.children.length-1;r=r.children[a],n.push(a)}return[r,n]}",
            "leaf": "leaf(e,t){var n=er.get(e,t);if(!eO.isText(n))throw Error(\"Cannot get the leaf node at path [\".concat(t,\"] because it refers to a non-leaf node: \").concat(ef.stringify(n)));return n}",
            "levels": "*levels(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};for(var r of es.levels(t,n)){var a=er.get(e,r);yield[a,r]}}",
            "matches": "(e,t)=>W.isElement(e)&&W.isElementProps(t)&&W.matches(e,t)||eO.isText(e)&&eO.isTextProps(t)&&eO.matches(e,t)",
            "nodes": "*nodes(e){for(var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{pass:n,reverse:r=!1}=t,{from:a=[],to:i}=t,o=new Set,s=[],l=e;!(i&&(r?es.isBefore(s,i):es.isAfter(s,i)));){;if(!o.has(l)&&(yield[l,s]),!o.has(l)&&!eO.isText(l)&&0!==l.children.length&&(null==n||!1===n([l,s]))){o.add(l);var c=r?l.children.length-1:0;es.isAncestor(s,a)&&(c=a[s.length]),s=s.concat(c),l=er.get(e,s);continue}if(0===s.length)break;if(!r){var _=es.next(s);if(er.has(e,_)){s=_,l=er.get(e,s);continue}}if(r&&0!==s[s.length-1]){s=es.previous(s),l=er.get(e,s);continue}s=es.parent(s),l=er.get(e,s),o.add(l)}}",
            "parent": "parent(e,t){var n=es.parent(t),r=er.get(e,n);if(eO.isText(r))throw Error(\"Cannot get the parent of path [\".concat(t,\"] because it does not exist in the root.\"));return r}",
            "string": "e=>eO.isText(e)?e.text:e.children.map(er.string).join(\"\")",
            "texts": "*texts(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};for(var[n,r]of er.nodes(e,t))eO.isText(n)&&(yield[n,r])}",
            "isType": "(e,t)=>s.Element.isElement(e)&&e.type===t",
            "isInTypes": "(e,t)=>s.Element.isElement(e)&&t.has(e.type)"
        },
        "PathUtils": {
            "ancestors": "ancestors(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{reverse:n=!1}=t,r=es.levels(e,t);return r=n?r.slice(1):r.slice(0,-1)}",
            "common": "common(e,t){for(var n=[],r=0;r<e.length&&r<t.length;r++){var a=e[r];if(a!==t[r])break;n.push(a)}return n}",
            "compare": "compare(e,t){for(var n=Math.min(e.length,t.length),r=0;r<n;r++){if(e[r]<t[r])return -1;if(e[r]>t[r])return 1}return 0}",
            "endsAfter": "endsAfter(e,t){var n=e.length-1,r=e.slice(0,n),a=t.slice(0,n),i=e[n],o=t[n];return es.equals(r,a)&&i>o}",
            "endsAt": "endsAt(e,t){var n=e.length,r=e.slice(0,n),a=t.slice(0,n);return es.equals(r,a)}",
            "endsBefore": "endsBefore(e,t){var n=e.length-1,r=e.slice(0,n),a=t.slice(0,n),i=e[n],o=t[n];return es.equals(r,a)&&i<o}",
            "equals": "(e,t)=>e.length===t.length&&e.every((e,n)=>e===t[n])",
            "hasPrevious": "e=>e[e.length-1]>0",
            "isAfter": "(e,t)=>1===es.compare(e,t)",
            "isAncestor": "(e,t)=>e.length<t.length&&0===es.compare(e,t)",
            "isBefore": "(e,t)=>-1===es.compare(e,t)",
            "isChild": "(e,t)=>e.length===t.length+1&&0===es.compare(e,t)",
            "isCommon": "(e,t)=>e.length<=t.length&&0===es.compare(e,t)",
            "isDescendant": "(e,t)=>e.length>t.length&&0===es.compare(e,t)",
            "isParent": "(e,t)=>e.length+1===t.length&&0===es.compare(e,t)",
            "isPath": "e=>Array.isArray(e)&&(0===e.length||\"number\"==typeof e[0])",
            "isSibling": "isSibling(e,t){if(e.length!==t.length)return!1;var n=e.slice(0,-1),r=t.slice(0,-1);return e[e.length-1]!==t[t.length-1]&&es.equals(n,r)}",
            "levels": "levels(e){for(var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{reverse:n=!1}=t,r=[],a=0;a<=e.length;a++)r.push(e.slice(0,a));return n&&r.reverse(),r}",
            "next": "next(e){if(0===e.length)throw Error(\"Cannot get the next path of a root path [\".concat(e,\"], because it has no next index.\"));var t=e[e.length-1];return e.slice(0,-1).concat(t+1)}",
            "operationCanTransformPath": "operationCanTransformPath(e){switch(e.type){case\"insert_node\":case\"remove_node\":case\"merge_node\":case\"split_node\":case\"move_node\":return!0;default:return!1}}",
            "parent": "parent(e){if(0===e.length)throw Error(\"Cannot get the parent path of the root path [\".concat(e,\"].\"));return e.slice(0,-1)}",
            "previous": "previous(e){if(0===e.length)throw Error(\"Cannot get the previous path of a root path [\".concat(e,\"], because it has no previous index.\"));var t=e[e.length-1];if(t<=0)throw Error(\"Cannot get the previous path of a first child path [\".concat(e,\"] because it would result in a negative index.\"));return e.slice(0,-1).concat(t-1)}",
            "relative": "relative(e,t){if(!es.isAncestor(t,e)&&!es.equals(e,t))throw Error(\"Cannot get the relative path of [\".concat(e,\"] inside ancestor [\").concat(t,\"], because it is not above or equal to the path.\"));return e.slice(t.length)}",
            "transform": "transform(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!e)return null;var r=[...e],{affinity:a=\"forward\"}=n;if(0===e.length)return r;switch(t.type){case\"insert_node\":var{path:i}=t;(es.equals(i,r)||es.endsBefore(i,r)||es.isAncestor(i,r))&&(r[i.length-1]+=1);break;case\"remove_node\":var{path:o}=t;if(es.equals(o,r)||es.isAncestor(o,r))return null;es.endsBefore(o,r)&&(r[o.length-1]-=1);break;case\"merge_node\":var{path:s,position:l}=t;es.equals(s,r)||es.endsBefore(s,r)?r[s.length-1]-=1:es.isAncestor(s,r)&&(r[s.length-1]-=1,r[s.length]+=l);break;case\"split_node\":var{path:c,position:_}=t;if(es.equals(c,r)){if(\"forward\"===a)r[r.length-1]+=1;else if(\"backward\"!==a)return null}else es.endsBefore(c,r)?r[c.length-1]+=1:es.isAncestor(c,r)&&e[c.length]>=_&&(r[c.length-1]+=1,r[c.length]-=_);break;case\"move_node\":var{path:d,newPath:u}=t;if(es.equals(d,u))break;if(es.isAncestor(d,r)||es.equals(d,r)){var p=u.slice();return es.endsBefore(d,u)&&d.length<u.length&&(p[d.length-1]-=1),p.concat(r.slice(d.length))}es.isSibling(d,u)&&(es.isAncestor(u,r)||es.equals(u,r))?es.endsBefore(d,r)?r[d.length-1]-=1:r[d.length-1]+=1:es.endsBefore(u,r)||es.equals(u,r)||es.isAncestor(u,r)?(es.endsBefore(d,r)&&(r[d.length-1]-=1),r[u.length-1]+=1):es.endsBefore(d,r)&&(es.equals(u,r)&&(r[u.length-1]+=1),r[d.length-1]-=1)}return r}",
            "isFirstEditorBlock": "e=>m.equals(e,o.FIRST_BLOCK_PATH)",
            "isFirstEditorText": "e=>m.equals(e,o.FIRST_TEXT_PATH)",
            "isFirstChild": "(e,t)=>m.equals(t,m.child(e,0))",
            "child": "(e,t)=>[...e,t]"
        },
        "PointUtils": {
            "compare": "compare(e,t){var n=es.compare(e.path,t.path);if(0===n)return e.offset<t.offset?-1:e.offset>t.offset?1:0;return n}",
            "isAfter": "(e,t)=>1===ed.compare(e,t)",
            "isBefore": "(e,t)=>-1===ed.compare(e,t)",
            "equals": "(e,t)=>e.offset===t.offset&&es.equals(e.path,t.path)",
            "isPoint": "e=>(0,i.isPlainObject)(e)&&\"number\"==typeof e.offset&&es.isPath(e.path)",
            "transform": "transform(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return(0,o.produce)(e,e=>{if(null===e)return null;var{affinity:r=\"forward\"}=n,{path:a,offset:i}=e;switch(t.type){case\"insert_node\":case\"move_node\":e.path=es.transform(a,t,n);break;case\"insert_text\":es.equals(t.path,a)&&(t.offset<i||t.offset===i&&\"forward\"===r)&&(e.offset+=t.text.length);break;case\"merge_node\":es.equals(t.path,a)&&(e.offset+=t.position),e.path=es.transform(a,t,n);break;case\"remove_text\":es.equals(t.path,a)&&t.offset<=i&&(e.offset-=Math.min(i-t.offset,t.text.length));break;case\"remove_node\":if(es.equals(t.path,a)||es.isAncestor(t.path,a))return null;e.path=es.transform(a,t,n);break;case\"split_node\":if(es.equals(t.path,a)){if(t.position===i&&null==r)return null;(t.position<i||t.position===i&&\"forward\"===r)&&(e.offset-=t.position,e.path=es.transform(a,t,e_(e_({},n),{},{affinity:\"forward\"})))}else e.path=es.transform(a,t,n)}})}",
            "start": "start(e){let[,t]=e;return{path:m.child(t,0),offset:0}}",
            "end": "end(e){let[t,n]=e,i=t.children[t.children.length-1];return{path:m.child(n,t.children.length-1),offset:p.isText(i)?i.text.length:0}}",
            "isAtStart": "isAtStart(e,t){return h.equals(e,this.start(t))}",
            "isAtEnd": "isAtEnd(e,t){return h.equals(e,this.end(t))}",
            "clamp": "clamp(e,t){let[n,i]=E.edges(t);return h.isBefore(e,n)&&(e=n),h.isAfter(e,i)&&(e=i),e}"
        },
        "RangeUtils": {
            "edges": "edges(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{reverse:n=!1}=t,{anchor:r,focus:a}=e;return eg.isBackward(e)===n?[r,a]:[a,r]}",
            "end": "end(e){var[,t]=eg.edges(e);return t}",
            "equals": "(e,t)=>ed.equals(e.anchor,t.anchor)&&ed.equals(e.focus,t.focus)",
            "includes": "includes(e,t){if(eg.isRange(t)){if(eg.includes(e,t.anchor)||eg.includes(e,t.focus))return!0;var[n,r]=eg.edges(e),[a,i]=eg.edges(t);return ed.isBefore(n,a)&&ed.isAfter(r,i)}var[o,s]=eg.edges(e),l=!1,c=!1;return ed.isPoint(t)?(l=ed.compare(t,o)>=0,c=0>=ed.compare(t,s)):(l=es.compare(t,o.path)>=0,c=0>=es.compare(t,s.path)),l&&c}",
            "intersection": "intersection(e,t){var n=f(e,ep),[r,a]=eg.edges(e),[i,o]=eg.edges(t),l=ed.isBefore(r,i)?i:r,c=ed.isBefore(a,o)?a:o;return ed.isBefore(c,l)?null:function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?em(Object(n),!0).forEach(function(t){s(e,t,n[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):em(Object(n)).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})}return e}({anchor:l,focus:c},n)}",
            "isBackward": "isBackward(e){var{anchor:t,focus:n}=e;return ed.isAfter(t,n)}",
            "isCollapsed": "isCollapsed(e){var{anchor:t,focus:n}=e;return ed.equals(t,n)}",
            "isExpanded": "e=>!eg.isCollapsed(e)",
            "isForward": "e=>!eg.isBackward(e)",
            "isRange": "e=>(0,i.isPlainObject)(e)&&ed.isPoint(e.anchor)&&ed.isPoint(e.focus)",
            "points": "*points(e){yield[e.anchor,\"anchor\"],yield[e.focus,\"focus\"]}",
            "start": "start(e){var[t]=eg.edges(e);return t}",
            "transform": "transform(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return(0,o.produce)(e,e=>{if(null===e)return null;var r,a,{affinity:i=\"inward\"}=n;if(\"inward\"===i){var o=eg.isCollapsed(e);eg.isForward(e)?(r=\"forward\",a=o?r:\"backward\"):(r=\"backward\",a=o?r:\"forward\")}else\"outward\"===i?eg.isForward(e)?(r=\"backward\",a=\"forward\"):(r=\"forward\",a=\"backward\"):(r=i,a=i);var s=ed.transform(e.anchor,t,{affinity:r}),l=ed.transform(e.focus,t,{affinity:a});if(!s||!l)return null;e.anchor=s,e.focus=l})}",
            "toPoint": "e=>null==e||E.isExpanded(e)?null:e.anchor",
            "children": "children(e){let[t,n]=e,i=t.children[t.children.length-1];return{anchor:{path:m.child(n,0),offset:0},focus:{path:m.child(n,t.children.length-1),offset:p.isText(i)?i.text.length:0}}}",
            "clamp": "clamp(e,t){let[n,i]=E.edges(e),[a,s]=E.edges(t);return(h.isBefore(n,a)&&(n=a),h.isAfter(i,s)&&(i=s),E.isForward(e))?{anchor:n,focus:i}:{anchor:i,focus:n}}"
        },
        "SelectionUtils": {
            "equals": "(e,t)=>null==e&&null==t||null!=e&&null!=t&&E.equals(e,t)",
            "isValid": "isValid(e,t){if(null==t)return!1;let{anchor:n,focus:i}=t;if(!d.hasPath(e,n.path)||!d.hasPath(e,i.path))return!1;let[a]=d.node(e,n.path),[s]=d.node(e,i.path);return p.isText(a)&&p.isText(s)&&n.offset<=a.text.length&&i.offset<=s.text.length}"
        },
        "TextUtils": {
            "equals": "equals(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},{loose:r=!1}=n;function a(e){return f(e,eT)}return eb(r?f(e,eT):e,r?f(t,eT):t)}",
            "isText": "e=>(0,i.isPlainObject)(e)&&\"string\"==typeof e.text",
            "isTextList": "e=>Array.isArray(e)&&e.every(e=>eO.isText(e))",
            "isTextProps": "e=>void 0!==e.text",
            "matches": "matches(e,t){for(var n in t)if(\"text\"!==n&&(!e.hasOwnProperty(n)||e[n]!==t[n]))return!1;return!0}",
            "decorations": "decorations(e,t){var n=[ev({},e)];for(var r of t){var a=f(r,eC),[i,o]=eg.edges(r),s=[],l=0,c=i.offset,_=o.offset;for(var d of n){var{length:u}=d.text,p=l;if(l+=u,c<=p&&l<=_){Object.assign(d,a),s.push(d);continue}if(c!==_&&(c===l||_===p)||c>l||_<p||_===p&&0!==p){s.push(d);continue}var m=d,g=void 0,E=void 0;if(_<l){var S=_-p;E=ev(ev({},m),{},{text:m.text.slice(S)}),m=ev(ev({},m),{},{text:m.text.slice(0,S)})}if(c>p){var b=c-p;g=ev(ev({},m),{},{text:m.text.slice(0,b)}),m=ev(ev({},m),{},{text:m.text.slice(b)})}Object.assign(m,a),g&&s.push(g),s.push(m),E&&s.push(E)}n=s}return n}"
        }
    }
}