{
    "exports": {
        "DndProvider": "function(e){var t,n,c=e.portal,d=function(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],!(t.indexOf(n)>=0)&&(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++){if(n=o[r],!(t.indexOf(n)>=0))Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}}return a}(e,[\"portal\"]);var f=(n=2,function(e){if(Array.isArray(e))return e}(t=(0,r.useState)(null))||function(e,t){if(\"undefined\"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,a=!1,o=void 0;try{for(var i,u=e[Symbol.iterator]();!(r=(i=u.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){a=!0,o=e}finally{try{!r&&null!=u.return&&u.return()}finally{if(a)throw o}}return n}}(t,n)||function(e,t){if(e){if(\"string\"==typeof e)return s(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if(\"Object\"===n&&e.constructor&&(n=e.constructor.name),\"Map\"===n||\"Set\"===n)return Array.from(e);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return s(e,t)}}(t,n)||function(){throw TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()),p=f[0],h=f[1];return a().createElement(l.Provider,{value:null!=c?c:p},a().createElement(o.DndProvider,u({backend:i.MultiBackend},d)),c?null:a().createElement(\"div\",{ref:h}))}",
        "MultiBackend": "(e,t,n)=>new r.MultiBackendImpl(e,t,n)",
        "createTransition": "(e,t)=>({event:e,check:t})"
    }
}