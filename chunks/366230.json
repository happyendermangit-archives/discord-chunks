{
    "exports": {
        "default": {
            "URL_REGEX": {
                "exec": "function exec() { [native code] }",
                "dotAll": false,
                "flags": "gi",
                "global": true,
                "hasIndices": false,
                "ignoreCase": true,
                "multiline": false,
                "source": "(?:(?:(?:[a-z]+:)?\\/\\/)|www\\.)(?:\\S+(?::\\S*)?@)?(?:localhost|(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?:[a-z\\u00a1-\\uffff0-9-_]+\\.)+(?:(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:[/?#][^\\s\"]*)?",
                "sticky": false,
                "unicode": false,
                "compile": "function compile() { [native code] }",
                "test": "function test() { [native code] }",
                "unicodeSets": false
            },
            "isDiscordHostname": "function T(e){var t;let n=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(null==e)return!1;return E.test(e)||n&&(t=e,I.has(t.toLowerCase()))}",
            "isDiscordLocalhost": "function(e,t){return null!=e&&null!=t&&(window.location.host===e||!1)}",
            "isDiscordProtocol": "function c(e){return null!=e&&\"discord:\"===e}",
            "isDiscordUrl": "function d(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return null!=e&&T(s.parse(e).hostname,t)}",
            "isDiscordUri": "function S(e){return null!=e&&c(s.parse(e).protocol)}",
            "isDiscordCdnUrl": "function(e){return null!=e&&s.parse(e).hostname===window.GLOBAL_ENV.CDN_HOST}",
            "isDiscordUrlOrUri": "e=>d(e)||S(e)",
            "isAppRoute": "e=>{let t=e.toLowerCase();return t.startsWith(\"/channels/\")||t.startsWith(_.Routes.APPLICATION_STORE)||t.startsWith(_.Routes.APPLICATION_LIBRARY)||t.startsWith(_.Routes.MESSAGE_REQUESTS)||t.startsWith(_.Routes.ACTIVITIES)||t.startsWith(_.Routes.COLLECTIBLES_SHOP)||t.startsWith(_.Routes.ACTIVITY)}",
            "format": "e=>s.format(e)",
            "formatPathWithQuery": "(e,t)=>s.format({pathname:e,query:a().pickBy(t)})",
            "formatSearch": "e=>s.format({query:a().pickBy(e)})",
            "safeParseWithQuery": "safeParseWithQuery(e){try{return s.parse(e,!0)}catch(e){return null}}",
            "toURLSafe": "toURLSafe(e,t){try{return new URL(e,t)}catch(e){return null}}",
            "makeUrl": "function(e){let t=__DEV__?window.GLOBAL_ENV.INVITE_HOST:location.host;return`${location.protocol}//${t}${e}`}"
        }
    }
}