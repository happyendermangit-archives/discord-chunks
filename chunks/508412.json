{
    "exports": {
        "default": {
            "initializedCount": 0,
            "actions": {
                "WAIT_FOR_REMOTE_SESSION": "()=>this.handleWaitForRemoteSession()",
                "POST_CONNECTION_OPEN": "()=>this.handleSessionsChanged()",
                "SESSIONS_REPLACE": "()=>this.handleSessionsChanged()",
                "AUDIO_TOGGLE_SELF_DEAF": "e=>this.handleAudioStateToggle(e)",
                "AUDIO_TOGGLE_SELF_MUTE": "e=>this.handleAudioStateToggle(e)",
                "VOICE_STATE_UPDATES": "e=>this.handleVoiceStateUpdates(e)",
                "CONSOLE_COMMAND_UPDATE": "e=>this.handleConsoleCommandUpdate(e)",
                "PASSIVE_UPDATE_V1": "e=>this.handleVoiceStateUpdates(e)",
                "REMOTE_SESSION_DISCONNECT": "()=>this.handleRemoteSessionDisconnect()"
            },
            "stores": {
                "toJSON": "function(){return Array.from(this)}",
                "get": "function get() { [native code] }",
                "set": "function set() { [native code] }",
                "has": "function has() { [native code] }",
                "delete": "function delete() { [native code] }",
                "clear": "function clear() { [native code] }",
                "entries": "function entries() { [native code] }",
                "forEach": "function forEach() { [native code] }",
                "keys": "function keys() { [native code] }",
                "size": 0,
                "values": "function values() { [native code] }"
            },
            "rollbackCommandTimeout": {
                "start": "start(e,t){let n=!(arguments.length>2)||void 0===arguments[2]||arguments[2];(!this.isStarted()||n)&&(this.stop(),this._ref=window.setTimeout(()=>{this._ref=null,t()},e))}",
                "stop": "stop(){null!=this._ref&&(clearTimeout(this._ref),this._ref=null)}",
                "isStarted": "isStarted(){return null!=this._ref}"
            },
            "awaitRemoteTimeout": {
                "start": "start(e,t){let n=!(arguments.length>2)||void 0===arguments[2]||arguments[2];(!this.isStarted()||n)&&(this.stop(),this._ref=window.setTimeout(()=>{this._ref=null,t()},e))}",
                "stop": "stop(){null!=this._ref&&(clearTimeout(this._ref),this._ref=null)}",
                "isStarted": "isStarted(){return null!=this._ref}"
            },
            "maybeConnect": "e=>{let _=function(e){let _=u.default.getAwaitingRemoteSessionInfo();return e.find(e=>{let E=D.GAME_CONSOLE_SESSIONS.has(e.clientInfo.os),t=null!=O.default.getVoiceStateForSession(s.default.getId(),e.sessionId),o=null==_||(0,L.coercePlatformTypeToConsoleType)(_.type)===e.clientInfo.os;return E&&o&&t})}(e);if(null==_)return null;this.awaitRemoteTimeout.stop(),(0,R.connectToRemote)(_.sessionId);let E=O.default.getVoiceStateForSession(s.default.getId(),_.sessionId);null!=E&&M(E)}",
            "handleAudioStateToggle": "e=>{let{syncRemote:_,context:E}=e;if(!_||E!==c.MediaEngineContextTypes.DEFAULT)return;let t=T.default.isSelfDeaf(),o=T.default.isSelfMute(),n=s.default.getId(),r=u.default.getRemoteSessionId();if(null==r)return;let i=O.default.getVoiceStateForSession(n,r);if(null!=i)(i.selfDeaf!==t||i.selfMute!==o)&&((0,R.remoteVoiceStateUpdate)(r,{selfDeaf:t,selfMute:o}),this.rollbackCommandTimeout.start(3e3,()=>{M(i)}))}",
            "handleVoiceStateUpdates": "e=>{var _;let E=null!==(_=e.voiceStates)&&void 0!==_?_:[],t=u.default.getRemoteSessionId();if(null==t){let e=E.map(e=>{let{sessionId:_}=e;return null!=_?N.default.getSessionById(_):null}).filter(A.isNotNullish);return this.maybeConnect(e)}let o=E.find(e=>{let{sessionId:_}=e;return _===t});null!=o&&(this.rollbackCommandTimeout.stop(),M(o))}",
            "handleSessionsChanged": "()=>{let e=u.default.getRemoteSessionId();null!=e&&null==N.default.getSessionById(e)&&(0,R.disconnectRemote)(),null==e&&this.maybeConnect(Object.values(N.default.getSessions()))}",
            "handleWaitForRemoteSession": "()=>{this.awaitRemoteTimeout.start(6e4,()=>{(0,R.disconnectRemote)(),r.default.show({title:d.default.Messages.GAME_CONSOLE_TRANSFER_TIMEOUT_TITLE,body:d.default.Messages.GAME_CONSOLE_TRANSFER_TIMEOUT_BODY})})}",
            "handleConsoleCommandUpdate": "e=>{var _;let{id:E,result:t,error:o}=e;if(\"failed\"!==t&&\"n/a\"!==t||null==o)return;U.info(\"Console command Error result:\",t,o);let n=u.default.getAwaitingRemoteSessionInfo();if((null==n?void 0:n.commandId)!==E)return;let r=u.default.getDevice(n.type,null!==(_=n.deviceId)&&void 0!==_?_:\"\"),i=(0,C.default)(null!=r?r:{id:\"id\",platform:d.default.Messages.STATUS_UNKNOWN,name:d.default.Messages.STATUS_UNKNOWN},t,o);null!=i&&l.default.showSelfDismissableAlert({title:i.title,body:i.body,errorCodeMessage:i.errorCodeMessage,reconnectPlatformType:i.isAccountLinkError?n.type:void 0}),D.USER_ACTION_REQUIRED_ERROR_CODES.has(o.code)&&this.awaitRemoteTimeout.isStarted()?this.awaitRemoteTimeout.start(18e4,()=>(0,R.disconnectRemote)(),!0):\"failed\"===t&&(0,R.disconnectRemote)()}",
            "handleRemoteSessionDisconnect": "()=>{this.awaitRemoteTimeout.stop()}"
        }
    }
}