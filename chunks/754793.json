{
    "exports": {
        "assign": "function(t){for(var e=Array.prototype.slice.call(arguments,1);e.length;){var s,r,n=e.shift();if(!!n){if(\"object\"!=typeof n)throw TypeError(n+\"must be non-object\");for(var i in n){;if(s=n,r=i,Object.prototype.hasOwnProperty.call(s,r))t[i]=n[i]}}}return t}",
        "shrinkBuf": "function(t,e){return t.length===e?t:t.subarray?t.subarray(0,e):(t.length=e,t)}",
        "setTyped": "function(t){t?(e.Buf8=Uint8Array,e.Buf16=Uint16Array,e.Buf32=Int32Array,e.assign(e,n)):(e.Buf8=Array,e.Buf16=Array,e.Buf32=Array,e.assign(e,i))}",
        "Buf8": "function Uint8Array() { [native code] }",
        "Buf16": "function Uint16Array() { [native code] }",
        "Buf32": "function Int32Array() { [native code] }",
        "arraySet": "function(t,e,s,r,n){if(e.subarray&&t.subarray){t.set(e.subarray(s,s+r),n);return}for(var i=0;i<r;i++)t[n+i]=e[s+i]}",
        "flattenChunks": "function(t){var e,s,r,n,i,c;for(e=0,r=0,s=t.length;e<s;e++)r+=t[e].length;for(e=0,c=new Uint8Array(r),n=0,s=t.length;e<s;e++)i=t[e],c.set(i,n),n+=i.length;return c}"
    }
}