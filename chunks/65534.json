{
    "exports": {
        "onProfilingStartRouteTransaction": "function l(t){return t?u(t):((\"undefined\"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&i.logger.log(\"[Profiling] Transaction is undefined, skipping profiling\"),t)}",
        "wrapTransactionWithProfiling": "function u(t){let e;let n=a.WINDOW.Profiler;if(\"function\"!=typeof n)return(\"undefined\"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&i.logger.log(\"[Profiling] Profiling is not supported by this browser, Profiler interface missing on window object.\"),t;if(o)return(\"undefined\"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&i.logger.log(\"[Profiling] Profiling has been disabled for the duration of the current user session.\"),t;let l=(0,r.getCurrentHub)().getClient(),u=l&&l.getOptions();if(!u)return(\"undefined\"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&i.logger.log(\"[Profiling] Profiling disabled, no options found.\"),t;let c=u.profilesSampleRate;if(!(0,s.isValidSampleRate)(c))return(\"undefined\"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&i.logger.warn(\"[Profiling] Discarding profile because of invalid sample rate.\"),t;if(!c)return(\"undefined\"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&i.logger.log(\"[Profiling] Discarding profile because a negative sampling decision was inherited or profileSampleRate is set to 0\"),t;if(!(!0===c||Math.random()<c))return(\"undefined\"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&i.logger.log(`[Profiling] Discarding profile because it's not included in the random sample (sampling rate = ${Number(c)})`),t;try{e=new n({sampleInterval:10,maxBufferSize:Math.floor(3e3)})}catch(t){(\"undefined\"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&(i.logger.log(\"[Profiling] Failed to initialize the Profiling constructor, this is likely due to a missing 'Document-Policy': 'js-profiling' header.\"),i.logger.log(\"[Profiling] Disabling profiling for current user session.\")),o=!0}if(!e)return t;(\"undefined\"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&i.logger.log(`[Profiling] started profiling transaction: ${t.name||t.description}`);let d=(0,i.uuid4)();async function h(){if(!t||!e)return null;let n=t.startChild({description:\"profiler.stop\",op:\"profiler\"});return e.stop().then(e=>(n.finish(),f&&(a.WINDOW.clearTimeout(f),f=void 0),(\"undefined\"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&i.logger.log(`[Profiling] stopped profiling of transaction: ${t.name||t.description}`),e)?((0,s.addProfileToMap)(d,e),null):((\"undefined\"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&i.logger.log(`[Profiling] profiler returned null profile for: ${t.name||t.description}`,\"this may indicate an overlapping transaction or a call to stopProfiling with a profile title that was never started\"),null)).catch(t=>(n.finish(),(\"undefined\"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&i.logger.log(\"[Profiling] error while stopping profiler:\",t),null))}let f=a.WINDOW.setTimeout(()=>{(\"undefined\"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&i.logger.log(\"[Profiling] max profile duration elapsed, stopping profiling for:\",t.name||t.description),h()},3e4),p=t.finish.bind(t);return t.finish=function(){return t?(h().then(()=>{t.setContext(\"profile\",{profile_id:d}),p()},()=>{p()}),t):p()},t}"
    }
}