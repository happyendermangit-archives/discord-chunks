{
    "exports": {
        "frameLoop": {
            "setTimeout": "(e,_)=>{let E=o.Globals.now()+_,t=()=>{let e=this.timeoutQueue.findIndex(e=>e.cancel===t);e>=0&&this.timeoutQueue.splice(e,1)},r=n(this.timeoutQueue,e=>e.time>E),i={time:E,handler:e,cancel:t};return this.timeoutQueue.splice(r,0,i),this.startLoop(),i}",
            "advance": "()=>{let e=o.Globals.now();if(this.startQueue.size>0&&(this.startQueue.forEach(this.addAnimation),this.startQueue.clear()),this.timeoutQueue.length>0&&o.Globals.batchedUpdates(()=>{let _=n(this.timeoutQueue,_=>_.time>e);this.timeoutQueue.splice(0,_).forEach(e=>e.handler())}),e>this.lastTime){let _=Math.min(64,e-this.lastTime);this.lastTime=e,o.Globals.batchedUpdates(()=>{this.animations.length>0&&(o.Globals.willAdvance(this.animations),this.animations=this.animations.filter(e=>(this.priority=e.priority,!e.idle&&e.advance(_),!e.idle)),this.priority=0),this.frameQueue.size>0&&(this.frameQueue.forEach(_=>_(e)),this.frameQueue.clear()),this.writeQueue.size>0&&(this.writing=!0,this.writeQueue.forEach(_=>_(e)),this.writeQueue.clear(),this.writing=!1)})}}",
            "start": "e=>{this.priority>e.priority?this.startQueue.add(e):(this.addAnimation(e),this.startLoop())}",
            "onFrame": "e=>{this.frameQueue.add(e),this.startLoop()}",
            "onWrite": "e=>{this.writing?e(this.lastTime):this.writeQueue.add(e)}",
            "_requestAnimationFrame": "e=>requestAnimationFrame(e)",
            "_cancelAnimationFrame": "e=>cancelAnimationFrame(e)",
            "writing": false,
            "id": 5,
            "lastTime": 1077,
            "animations": [
                {
                    "id": 1,
                    "key": "background",
                    "_priority": 0,
                    "_children": {
                        "toJSON": "function(){return Array.from(this)}",
                        "has": "function has() { [native code] }",
                        "add": "function add() { [native code] }",
                        "delete": "function delete() { [native code] }",
                        "clear": "function clear() { [native code] }",
                        "entries": "function entries() { [native code] }",
                        "forEach": "function forEach() { [native code] }",
                        "size": 1,
                        "values": "function values() { [native code] }",
                        "keys": "function values() { [native code] }",
                        "union": "function union() { [native code] }",
                        "intersection": "function intersection() { [native code] }",
                        "difference": "function difference() { [native code] }",
                        "symmetricDifference": "function symmetricDifference() { [native code] }",
                        "isSubsetOf": "function isSubsetOf() { [native code] }",
                        "isSupersetOf": "function isSupersetOf() { [native code] }",
                        "isDisjointFrom": "function isDisjointFrom() { [native code] }"
                    },
                    "animation": {
                        "changed": true,
                        "values": [
                            {
                                "_value": 0.26066666666665694,
                                "done": false,
                                "elapsedTime": 78.19999999999709,
                                "lastPosition": 0.26066666666665694,
                                "lastVelocity": 0.003333333333333332,
                                "v0": 0,
                                "_string": "rgba(0, 0, 0, 0.18297777777777094)",
                                "_toString": "function(t){var n=0;return e[0].replace(c,function(){return String(p[n++](t))}).replace(f,h)}",
                                "constructor": "function e(e,n){var r;return(r=t.call(this,0)||this)._value=void 0,r._string=null,r._toString=void 0,r._toString=i.createInterpolator({output:[e,n]}),r}",
                                "getValue": "function(){var t=this._string;return null==t?this._string=this._toString(this._value):t}",
                                "setValue": "function(e){if(i.is.num(e)){if(!t.prototype.setValue.call(this,e))return!1;else this._string=null}else this._string=e,this._value=1;return!0}",
                                "reset": "function(e){e&&(this._toString=i.createInterpolator({output:[this.getValue(),e]})),this._value=0,t.prototype.reset.call(this)}",
                                "getPayload": "function(){return[this]}"
                            }
                        ],
                        "toValues": [
                            1
                        ],
                        "fromValues": [
                            0
                        ],
                        "to": "#000000b3",
                        "from": "#00000000",
                        "config": {
                            "tension": 170,
                            "friction": 26,
                            "damping": 1,
                            "mass": 1,
                            "velocity": 0,
                            "duration": 300,
                            "easing": "function(t){return t}",
                            "clamp": false
                        },
                        "immediate": false,
                        "onRest": [
                            "function(r){if(r)t(U(e));else{var i=F(n),a=F(e.get());t(B(e,o.isEqual(a,i)))}}",
                            "function(r){if(r)t(U(e));else{var i=F(n),a=F(e.get());t(B(e,o.isEqual(a,i)))}}"
                        ]
                    },
                    "_phase": "ACTIVE",
                    "_state": {
                        "pauseQueue": {
                            "toJSON": "function(){return Array.from(this)}",
                            "has": "function has() { [native code] }",
                            "add": "function add() { [native code] }",
                            "delete": "function delete() { [native code] }",
                            "clear": "function clear() { [native code] }",
                            "entries": "function entries() { [native code] }",
                            "forEach": "function forEach() { [native code] }",
                            "size": 0,
                            "values": "function values() { [native code] }",
                            "keys": "function values() { [native code] }",
                            "union": "function union() { [native code] }",
                            "intersection": "function intersection() { [native code] }",
                            "difference": "function difference() { [native code] }",
                            "symmetricDifference": "function symmetricDifference() { [native code] }",
                            "isSubsetOf": "function isSubsetOf() { [native code] }",
                            "isSupersetOf": "function isSupersetOf() { [native code] }",
                            "isDisjointFrom": "function isDisjointFrom() { [native code] }"
                        },
                        "resumeQueue": {
                            "toJSON": "function(){return Array.from(this)}",
                            "has": "function has() { [native code] }",
                            "add": "function add() { [native code] }",
                            "delete": "function delete() { [native code] }",
                            "clear": "function clear() { [native code] }",
                            "entries": "function entries() { [native code] }",
                            "forEach": "function forEach() { [native code] }",
                            "size": 0,
                            "values": "function values() { [native code] }",
                            "keys": "function values() { [native code] }",
                            "union": "function union() { [native code] }",
                            "intersection": "function intersection() { [native code] }",
                            "difference": "function difference() { [native code] }",
                            "symmetricDifference": "function symmetricDifference() { [native code] }",
                            "isSubsetOf": "function isSubsetOf() { [native code] }",
                            "isSupersetOf": "function isSupersetOf() { [native code] }",
                            "isDisjointFrom": "function isDisjointFrom() { [native code] }"
                        }
                    },
                    "_defaultProps": {},
                    "_lastCallId": 2,
                    "_lastToId": 2,
                    "constructor": "function e(e,n){var r;if((r=t.call(this)||this).key=void 0,r.animation=new Animation,r.queue=void 0,r._phase=Y,r._state={pauseQueue:new Set,resumeQueue:new Set},r._defaultProps={},r._lastCallId=0,r._lastToId=0,!o.is.und(e)||!o.is.und(n)){var i=o.is.obj(e)?a({},e):a(a({},n),{},{from:e});i.default=!0,r.start(i)}return r}",
                    "advance": "function(t){var e=this,n=!0,r=!1,i=this.animation,a=i.config,u=i.toValues,s=h.getPayload(i.to);if(!s){var c=o.getFluidConfig(i.to);c&&(u=o.toArray(c.get()))}return i.values.forEach(function(c,l){if(!c.done){var f=s?s[l].lastPosition:u[l],h=i.immediate,p=f;if(!h){if(p=c.lastPosition,a.tension<=0){c.done=!0;return}var d=c.elapsedTime+=t,v=i.fromValues[l],y=null!=c.v0?c.v0:c.v0=o.is.arr(a.velocity)?a.velocity[l]:a.velocity;if(o.is.und(a.duration)){if(a.decay){var m=!0===a.decay?.998:a.decay,g=Math.exp(-(1-m)*d);p=v+y/(1-m)*(1-g),h=.1>Math.abs(c.lastPosition-p),b=y*g}else{b=null==c.lastVelocity?y:c.lastVelocity;for(var b,_=a.precision||(v==f?.005:Math.min(1,.001*Math.abs(f-v))),x=a.restVelocity||_/10,w=a.clamp?0:a.bounce,O=!o.is.und(w),k=v==f?c.v0>0:v<f,S=!1,E=Math.ceil(t/1),P=0;P<E&&!(!(Math.abs(b)>x)&&(h=Math.abs(f-p)<=_));++P){;O&&(S=p==f||p>f==k)&&(b=-b*w,p=f);var C=(-(1e-6*a.tension)*(p-f)+-(.001*a.friction)*b)/a.mass;b+=1*C,p+=1*b}}}else{var A=a.progress||0;a.duration<=0?A=1:A+=(1-A)*Math.min(1,d/a.duration),b=((p=v+a.easing(A)*(f-v))-c.lastPosition)/t,h=1==A}c.lastVelocity=b,Number.isNaN(p)&&(console.warn(\"Got NaN while animating:\",e),h=!0)}s&&!s[l].done&&(h=!1),h?c.done=!0:n=!1,c.setValue(p,a.round)&&(r=!0)}}),n?this.finish():r&&this._onChange(this.get()),n}",
                    "is": "function(t){return this._phase==t}",
                    "set": "function(t){var e=this;return p.batchedUpdates(function(){if(e._focus(t),e._set(t)&&!e.is(J))return e._onChange(e.get(),!0);e._stop()}),this}",
                    "pause": "function(){tn(this,\"pause\"),!this.is(Z)&&(this._phase=Z,o.flush(this._state.pauseQueue,function(t){return t()}))}",
                    "resume": "function(){tn(this,\"resume\"),this.is(Z)&&(this._start(),o.flush(this._state.resumeQueue,function(t){return t()}))}",
                    "finish": "function(t){var e=this;if(this.resume(),this.is(J)){var n=this.animation;!n.config.decay&&o.is.und(t)&&(t=n.to),!o.is.und(t)&&this._set(t),p.batchedUpdates(function(){!n.changed&&(n.changed=!0,n.onStart&&n.onStart(e)),e._stop()})}return this}",
                    "update": "function(t){return tn(this,\"update\"),(this.queue||(this.queue=[])).push(t),this}",
                    "start": "function(t,e){return n.apply(this,arguments)}",
                    "stop": "function(t){var e=this;return!this.is(tt)&&($(this._state,this._lastCallId),this._focus(this.get()),p.batchedUpdates(function(){return e._stop(t)})),this}",
                    "reset": "function(){this._update({reset:!0})}",
                    "dispose": "function(){!this.is(tt)&&(this.animation&&(this.animation.onRest=[]),this.stop(),this._phase=tt)}",
                    "onParentChange": "function(e){t.prototype.onParentChange.call(this,e),\"change\"==e.type?!this.is(J)&&(this._reset(),!this.is(Z)&&this._start()):\"priority\"==e.type&&(this.priority=e.priority+1)}",
                    "_prepareNode": "function(t){var e=t.to,n=t.from,r=t.reverse,i=this.key||\"\";e=!o.is.obj(e)||o.getFluidConfig(e)?e:e[i];var a={to:e,from:n=!o.is.obj(n)||o.getFluidConfig(n)?n:n[i]};if(this.is(Y)){if(r){var u=[n,e];e=u[0],n=u[1]}n=o.getFluidValue(n);var s=this._updateNode(o.is.und(n)?o.getFluidValue(e):n);s&&!o.is.und(n)&&s.setValue(n)}return a}",
                    "_updateNode": "function(t){var e=h.getAnimated(this);if(!o.is.und(t)){var n=this._getNodeType(t);(!e||e.constructor!==n)&&h.setAnimated(this,e=n.create(t))}return e}",
                    "_getNodeType": "function(t){var e=h.getAnimated(t);return e?e.constructor:o.is.arr(t)?h.AnimatedArray:o.isAnimatedString(t)?h.AnimatedString:h.AnimatedValue}",
                    "_update": "function(t,e){var n=this,r=this._defaultProps,i=function(e){var n=R(t,e);!o.is.und(n)&&(r[e]=n),r[e]&&(t[e]=r[e])};i(\"cancel\"),i(\"pause\");var a=this._prepareNode(t);return I(++this._lastCallId,{key:this.key,props:t,state:this._state,actions:{pause:this.pause.bind(this),resume:this.resume.bind(this),start:this._merge.bind(this,a)}}).then(function(r){if(t.loop&&r.finished&&!(e&&r.noop)){var i=to(t);if(i)return n._update(i,!0)}return r})}",
                    "_merge": "function(t,e,n){if(e.cancel)return this.stop(!0),n(U(this));var r=this.key,i=this.animation,u=this._defaultProps,s=!o.is.und(t.to),c=!o.is.und(t.from);if(s||c){if(!(e.callId>this._lastToId))return n(U(this));this._lastToId=e.callId}var l=function(t){return o.is.und(e[t])?u[t]:e[t]},f=tr(l(\"onDelayEnd\"),r);if(f&&f(e,this),e.default)T(e,[\"pause\",\"cancel\"],u);var d=i.to,v=i.from,y=t.to,m=void 0===y?d:y,g=t.from,b=void 0===g?v:g;if(c&&!s&&(m=b),e.reverse){var _=[b,m];m=_[0],b=_[1]}var x=!o.isEqual(b,v);x&&(i.from=b);var O=!o.isEqual(m,d);O&&this._focus(m);var S=o.getFluidConfig(m),E=o.getFluidConfig(b);E&&(b=E.get());var P=o.is.arr(e.to)||o.is.fun(e.to),j=i.config,R=j.decay,M=j.velocity;e.config&&!P&&!function(t,e,n){for(var r in n&&(k(n=a({},n),e),e=a(a({},n),e)),k(t,e),Object.assign(t,e),w)null==t[r]&&(t[r]=w[r]);var i=t.mass,u=t.frequency,s=t.damping;!o.is.und(u)&&(u<.01&&(u=.01),s<0&&(s=0),t.tension=Math.pow(2*Math.PI/u,2)*i,t.friction=4*Math.PI*s*i/u)}(j,C(e.config,r),e.config!==u.config?C(u.config,r):void 0);var L=h.getAnimated(this);if(!L||o.is.und(m))return n(B(this,!0));var V=o.is.und(e.reset)?c&&!e.default:!o.is.und(b)&&A(e.reset,r),I=V?b:this.get(),N=F(m),W=o.is.num(N)||o.is.arr(N)||o.isAnimatedString(N),D=!P&&(!W||A(u.immediate||e.immediate,r));if(O){if(D)L=this._updateNode(N);else{var $=this._getNodeType(m);if($!==L.constructor)throw Error(\"Cannot animate between \"+L.constructor.name+\" and \"+$.name+', as the \"to\" prop suggests')}}var G=L.constructor,H=!!S,X=!1;if(!H){var K=V||this.is(Y)&&x;(O||K)&&(H=!(X=o.isEqual(F(I),N))),(!o.isEqual(j.decay,R)||!o.isEqual(j.velocity,M))&&(H=!0)}if(X&&this.is(J)&&(i.changed&&!V?H=!0:!H&&this._stop()),!P){(H||o.getFluidConfig(d))&&(i.values=L.getPayload(),i.toValues=S?null:G==h.AnimatedString?[1]:o.toArray(N)),i.immediate=D,i.onStart=tr(l(\"onStart\"),r),i.onChange=tr(l(\"onChange\"),r);var Z=i.onRest,tt=V&&!e.onRest?Z[0]||o.noop:ti(tr(l(\"onRest\"),r),this);if(H){i.onRest=[tt,ti(n,this)];var te=V?0:1;te<Z.length&&p.batchedUpdates(function(){for(;te<Z.length;te++)Z[te]()})}else(V||e.onRest)&&(i.onRest[0]=tt)}var tn=tr(l(\"onProps\"),r);if(tn&&tn(e,this),V&&L.setValue(I),P)n(q(e.to,e,this._state,this));else if(H)V&&(this._phase=Q),this._reset(),this._start();else if(this.is(J)&&!O)i.onRest.push(ti(n,this));else{let t=z(this,I),e=tr(l(\"onNoopRest\"),r);null!=e&&e(t),n(t)}}",
                    "_focus": "function(t){var e=this.animation;if(t!==e.to){var n=o.getFluidConfig(e.to);n&&n.removeChild(this),e.to=t;var r=0;(n=o.getFluidConfig(t))&&(n.addChild(this),H(t)&&(r=(t.priority||0)+1)),this.priority=r}}",
                    "_set": "function(t){var e=o.getFluidConfig(t);e&&(t=e.get());var n=h.getAnimated(this),r=n&&n.getValue();return n?n.setValue(t):this._updateNode(t),!o.isEqual(t,r)}",
                    "_onChange": "function(e,n){void 0===n&&(n=!1);var r=this.animation;!r.changed&&!n&&(r.changed=!0,r.onStart&&r.onStart(this)),r.onChange&&r.onChange(e,this),t.prototype._onChange.call(this,e,n)}",
                    "_reset": "function(){var e=this.animation;h.getAnimated(this).reset(e.to),!this.is(J)&&(e.changed=!1),!e.immediate&&(e.fromValues=e.values.map(function(t){return t.lastPosition})),t.prototype._reset.call(this)}",
                    "_start": "function(){!this.is(J)&&(this._phase=J,t.prototype._start.call(this),p.skipAnimation?this.finish():p.frameLoop.start(this))}",
                    "_stop": "function(t){if(this.resume(),this.is(J)){this._phase=Q,this._onChange(this.get(),!0);var e=this.animation;o.each(e.values,function(t){t.done=!0});var n=e.onRest;n.length&&(e.onRest=[e.toValues?o.noop:n[0]],!e.changed&&(n[0]=o.noop),o.each(n,function(e){return e(t)}))}}",
                    "get": "function(){var t=h.getAnimated(this);return t&&t.getValue()}",
                    "to": "function(){for(var t=arguments.length,e=Array(t),n=0;n<t;n++)e[n]=arguments[n];return p.to(this,e)}",
                    "interpolate": "function(){y.deprecateInterpolate();for(var t=arguments.length,e=Array(t),n=0;n<t;n++)e[n]=arguments[n];return p.to(this,e)}",
                    "addChild": "function(t){!this._children.size&&this._attach(),this._children.add(t)}",
                    "removeChild": "function(t){this._children.delete(t),!this._children.size&&this._detach()}",
                    "_attach": "function(){}",
                    "_detach": "function(){}",
                    "_onPriorityChange": "function(t){!this.idle&&p.frameLoop.start(this),this._emit({type:\"priority\",parent:this,priority:t})}",
                    "_emit": "function(t){o.each(Array.from(this._children),function(e){e.onParentChange(t)})}",
                    "idle": false,
                    "goal": "#000000b3",
                    "velocity": 0.003333333333333332
                },
                {
                    "id": 3,
                    "key": "background",
                    "_priority": 0,
                    "_children": {
                        "toJSON": "function(){return Array.from(this)}",
                        "has": "function has() { [native code] }",
                        "add": "function add() { [native code] }",
                        "delete": "function delete() { [native code] }",
                        "clear": "function clear() { [native code] }",
                        "entries": "function entries() { [native code] }",
                        "forEach": "function forEach() { [native code] }",
                        "size": 1,
                        "values": "function values() { [native code] }",
                        "keys": "function values() { [native code] }",
                        "union": "function union() { [native code] }",
                        "intersection": "function intersection() { [native code] }",
                        "difference": "function difference() { [native code] }",
                        "symmetricDifference": "function symmetricDifference() { [native code] }",
                        "isSubsetOf": "function isSubsetOf() { [native code] }",
                        "isSupersetOf": "function isSupersetOf() { [native code] }",
                        "isDisjointFrom": "function isDisjointFrom() { [native code] }"
                    },
                    "animation": {
                        "changed": true,
                        "values": [
                            {
                                "_value": 0.26066666666665694,
                                "done": false,
                                "elapsedTime": 78.19999999999709,
                                "lastPosition": 0.26066666666665694,
                                "lastVelocity": 0.003333333333333332,
                                "v0": 0,
                                "_string": "rgba(0, 0, 0, 0.18297777777777094)",
                                "_toString": "function(t){var n=0;return e[0].replace(c,function(){return String(p[n++](t))}).replace(f,h)}",
                                "constructor": "function e(e,n){var r;return(r=t.call(this,0)||this)._value=void 0,r._string=null,r._toString=void 0,r._toString=i.createInterpolator({output:[e,n]}),r}",
                                "getValue": "function(){var t=this._string;return null==t?this._string=this._toString(this._value):t}",
                                "setValue": "function(e){if(i.is.num(e)){if(!t.prototype.setValue.call(this,e))return!1;else this._string=null}else this._string=e,this._value=1;return!0}",
                                "reset": "function(e){e&&(this._toString=i.createInterpolator({output:[this.getValue(),e]})),this._value=0,t.prototype.reset.call(this)}",
                                "getPayload": "function(){return[this]}"
                            }
                        ],
                        "toValues": [
                            1
                        ],
                        "fromValues": [
                            0
                        ],
                        "to": "#000000b3",
                        "from": "#00000000",
                        "config": {
                            "tension": 170,
                            "friction": 26,
                            "damping": 1,
                            "mass": 1,
                            "velocity": 0,
                            "duration": 300,
                            "easing": "function(t){return t}",
                            "clamp": false
                        },
                        "immediate": false,
                        "onRest": [
                            "function(r){if(r)t(U(e));else{var i=F(n),a=F(e.get());t(B(e,o.isEqual(a,i)))}}",
                            "function(r){if(r)t(U(e));else{var i=F(n),a=F(e.get());t(B(e,o.isEqual(a,i)))}}"
                        ]
                    },
                    "_phase": "ACTIVE",
                    "_state": {
                        "pauseQueue": {
                            "toJSON": "function(){return Array.from(this)}",
                            "has": "function has() { [native code] }",
                            "add": "function add() { [native code] }",
                            "delete": "function delete() { [native code] }",
                            "clear": "function clear() { [native code] }",
                            "entries": "function entries() { [native code] }",
                            "forEach": "function forEach() { [native code] }",
                            "size": 0,
                            "values": "function values() { [native code] }",
                            "keys": "function values() { [native code] }",
                            "union": "function union() { [native code] }",
                            "intersection": "function intersection() { [native code] }",
                            "difference": "function difference() { [native code] }",
                            "symmetricDifference": "function symmetricDifference() { [native code] }",
                            "isSubsetOf": "function isSubsetOf() { [native code] }",
                            "isSupersetOf": "function isSupersetOf() { [native code] }",
                            "isDisjointFrom": "function isDisjointFrom() { [native code] }"
                        },
                        "resumeQueue": {
                            "toJSON": "function(){return Array.from(this)}",
                            "has": "function has() { [native code] }",
                            "add": "function add() { [native code] }",
                            "delete": "function delete() { [native code] }",
                            "clear": "function clear() { [native code] }",
                            "entries": "function entries() { [native code] }",
                            "forEach": "function forEach() { [native code] }",
                            "size": 0,
                            "values": "function values() { [native code] }",
                            "keys": "function values() { [native code] }",
                            "union": "function union() { [native code] }",
                            "intersection": "function intersection() { [native code] }",
                            "difference": "function difference() { [native code] }",
                            "symmetricDifference": "function symmetricDifference() { [native code] }",
                            "isSubsetOf": "function isSubsetOf() { [native code] }",
                            "isSupersetOf": "function isSupersetOf() { [native code] }",
                            "isDisjointFrom": "function isDisjointFrom() { [native code] }"
                        }
                    },
                    "_defaultProps": {},
                    "_lastCallId": 2,
                    "_lastToId": 2,
                    "constructor": "function e(e,n){var r;if((r=t.call(this)||this).key=void 0,r.animation=new Animation,r.queue=void 0,r._phase=Y,r._state={pauseQueue:new Set,resumeQueue:new Set},r._defaultProps={},r._lastCallId=0,r._lastToId=0,!o.is.und(e)||!o.is.und(n)){var i=o.is.obj(e)?a({},e):a(a({},n),{},{from:e});i.default=!0,r.start(i)}return r}",
                    "advance": "function(t){var e=this,n=!0,r=!1,i=this.animation,a=i.config,u=i.toValues,s=h.getPayload(i.to);if(!s){var c=o.getFluidConfig(i.to);c&&(u=o.toArray(c.get()))}return i.values.forEach(function(c,l){if(!c.done){var f=s?s[l].lastPosition:u[l],h=i.immediate,p=f;if(!h){if(p=c.lastPosition,a.tension<=0){c.done=!0;return}var d=c.elapsedTime+=t,v=i.fromValues[l],y=null!=c.v0?c.v0:c.v0=o.is.arr(a.velocity)?a.velocity[l]:a.velocity;if(o.is.und(a.duration)){if(a.decay){var m=!0===a.decay?.998:a.decay,g=Math.exp(-(1-m)*d);p=v+y/(1-m)*(1-g),h=.1>Math.abs(c.lastPosition-p),b=y*g}else{b=null==c.lastVelocity?y:c.lastVelocity;for(var b,_=a.precision||(v==f?.005:Math.min(1,.001*Math.abs(f-v))),x=a.restVelocity||_/10,w=a.clamp?0:a.bounce,O=!o.is.und(w),k=v==f?c.v0>0:v<f,S=!1,E=Math.ceil(t/1),P=0;P<E&&!(!(Math.abs(b)>x)&&(h=Math.abs(f-p)<=_));++P){;O&&(S=p==f||p>f==k)&&(b=-b*w,p=f);var C=(-(1e-6*a.tension)*(p-f)+-(.001*a.friction)*b)/a.mass;b+=1*C,p+=1*b}}}else{var A=a.progress||0;a.duration<=0?A=1:A+=(1-A)*Math.min(1,d/a.duration),b=((p=v+a.easing(A)*(f-v))-c.lastPosition)/t,h=1==A}c.lastVelocity=b,Number.isNaN(p)&&(console.warn(\"Got NaN while animating:\",e),h=!0)}s&&!s[l].done&&(h=!1),h?c.done=!0:n=!1,c.setValue(p,a.round)&&(r=!0)}}),n?this.finish():r&&this._onChange(this.get()),n}",
                    "is": "function(t){return this._phase==t}",
                    "set": "function(t){var e=this;return p.batchedUpdates(function(){if(e._focus(t),e._set(t)&&!e.is(J))return e._onChange(e.get(),!0);e._stop()}),this}",
                    "pause": "function(){tn(this,\"pause\"),!this.is(Z)&&(this._phase=Z,o.flush(this._state.pauseQueue,function(t){return t()}))}",
                    "resume": "function(){tn(this,\"resume\"),this.is(Z)&&(this._start(),o.flush(this._state.resumeQueue,function(t){return t()}))}",
                    "finish": "function(t){var e=this;if(this.resume(),this.is(J)){var n=this.animation;!n.config.decay&&o.is.und(t)&&(t=n.to),!o.is.und(t)&&this._set(t),p.batchedUpdates(function(){!n.changed&&(n.changed=!0,n.onStart&&n.onStart(e)),e._stop()})}return this}",
                    "update": "function(t){return tn(this,\"update\"),(this.queue||(this.queue=[])).push(t),this}",
                    "start": "function(t,e){return n.apply(this,arguments)}",
                    "stop": "function(t){var e=this;return!this.is(tt)&&($(this._state,this._lastCallId),this._focus(this.get()),p.batchedUpdates(function(){return e._stop(t)})),this}",
                    "reset": "function(){this._update({reset:!0})}",
                    "dispose": "function(){!this.is(tt)&&(this.animation&&(this.animation.onRest=[]),this.stop(),this._phase=tt)}",
                    "onParentChange": "function(e){t.prototype.onParentChange.call(this,e),\"change\"==e.type?!this.is(J)&&(this._reset(),!this.is(Z)&&this._start()):\"priority\"==e.type&&(this.priority=e.priority+1)}",
                    "_prepareNode": "function(t){var e=t.to,n=t.from,r=t.reverse,i=this.key||\"\";e=!o.is.obj(e)||o.getFluidConfig(e)?e:e[i];var a={to:e,from:n=!o.is.obj(n)||o.getFluidConfig(n)?n:n[i]};if(this.is(Y)){if(r){var u=[n,e];e=u[0],n=u[1]}n=o.getFluidValue(n);var s=this._updateNode(o.is.und(n)?o.getFluidValue(e):n);s&&!o.is.und(n)&&s.setValue(n)}return a}",
                    "_updateNode": "function(t){var e=h.getAnimated(this);if(!o.is.und(t)){var n=this._getNodeType(t);(!e||e.constructor!==n)&&h.setAnimated(this,e=n.create(t))}return e}",
                    "_getNodeType": "function(t){var e=h.getAnimated(t);return e?e.constructor:o.is.arr(t)?h.AnimatedArray:o.isAnimatedString(t)?h.AnimatedString:h.AnimatedValue}",
                    "_update": "function(t,e){var n=this,r=this._defaultProps,i=function(e){var n=R(t,e);!o.is.und(n)&&(r[e]=n),r[e]&&(t[e]=r[e])};i(\"cancel\"),i(\"pause\");var a=this._prepareNode(t);return I(++this._lastCallId,{key:this.key,props:t,state:this._state,actions:{pause:this.pause.bind(this),resume:this.resume.bind(this),start:this._merge.bind(this,a)}}).then(function(r){if(t.loop&&r.finished&&!(e&&r.noop)){var i=to(t);if(i)return n._update(i,!0)}return r})}",
                    "_merge": "function(t,e,n){if(e.cancel)return this.stop(!0),n(U(this));var r=this.key,i=this.animation,u=this._defaultProps,s=!o.is.und(t.to),c=!o.is.und(t.from);if(s||c){if(!(e.callId>this._lastToId))return n(U(this));this._lastToId=e.callId}var l=function(t){return o.is.und(e[t])?u[t]:e[t]},f=tr(l(\"onDelayEnd\"),r);if(f&&f(e,this),e.default)T(e,[\"pause\",\"cancel\"],u);var d=i.to,v=i.from,y=t.to,m=void 0===y?d:y,g=t.from,b=void 0===g?v:g;if(c&&!s&&(m=b),e.reverse){var _=[b,m];m=_[0],b=_[1]}var x=!o.isEqual(b,v);x&&(i.from=b);var O=!o.isEqual(m,d);O&&this._focus(m);var S=o.getFluidConfig(m),E=o.getFluidConfig(b);E&&(b=E.get());var P=o.is.arr(e.to)||o.is.fun(e.to),j=i.config,R=j.decay,M=j.velocity;e.config&&!P&&!function(t,e,n){for(var r in n&&(k(n=a({},n),e),e=a(a({},n),e)),k(t,e),Object.assign(t,e),w)null==t[r]&&(t[r]=w[r]);var i=t.mass,u=t.frequency,s=t.damping;!o.is.und(u)&&(u<.01&&(u=.01),s<0&&(s=0),t.tension=Math.pow(2*Math.PI/u,2)*i,t.friction=4*Math.PI*s*i/u)}(j,C(e.config,r),e.config!==u.config?C(u.config,r):void 0);var L=h.getAnimated(this);if(!L||o.is.und(m))return n(B(this,!0));var V=o.is.und(e.reset)?c&&!e.default:!o.is.und(b)&&A(e.reset,r),I=V?b:this.get(),N=F(m),W=o.is.num(N)||o.is.arr(N)||o.isAnimatedString(N),D=!P&&(!W||A(u.immediate||e.immediate,r));if(O){if(D)L=this._updateNode(N);else{var $=this._getNodeType(m);if($!==L.constructor)throw Error(\"Cannot animate between \"+L.constructor.name+\" and \"+$.name+', as the \"to\" prop suggests')}}var G=L.constructor,H=!!S,X=!1;if(!H){var K=V||this.is(Y)&&x;(O||K)&&(H=!(X=o.isEqual(F(I),N))),(!o.isEqual(j.decay,R)||!o.isEqual(j.velocity,M))&&(H=!0)}if(X&&this.is(J)&&(i.changed&&!V?H=!0:!H&&this._stop()),!P){(H||o.getFluidConfig(d))&&(i.values=L.getPayload(),i.toValues=S?null:G==h.AnimatedString?[1]:o.toArray(N)),i.immediate=D,i.onStart=tr(l(\"onStart\"),r),i.onChange=tr(l(\"onChange\"),r);var Z=i.onRest,tt=V&&!e.onRest?Z[0]||o.noop:ti(tr(l(\"onRest\"),r),this);if(H){i.onRest=[tt,ti(n,this)];var te=V?0:1;te<Z.length&&p.batchedUpdates(function(){for(;te<Z.length;te++)Z[te]()})}else(V||e.onRest)&&(i.onRest[0]=tt)}var tn=tr(l(\"onProps\"),r);if(tn&&tn(e,this),V&&L.setValue(I),P)n(q(e.to,e,this._state,this));else if(H)V&&(this._phase=Q),this._reset(),this._start();else if(this.is(J)&&!O)i.onRest.push(ti(n,this));else{let t=z(this,I),e=tr(l(\"onNoopRest\"),r);null!=e&&e(t),n(t)}}",
                    "_focus": "function(t){var e=this.animation;if(t!==e.to){var n=o.getFluidConfig(e.to);n&&n.removeChild(this),e.to=t;var r=0;(n=o.getFluidConfig(t))&&(n.addChild(this),H(t)&&(r=(t.priority||0)+1)),this.priority=r}}",
                    "_set": "function(t){var e=o.getFluidConfig(t);e&&(t=e.get());var n=h.getAnimated(this),r=n&&n.getValue();return n?n.setValue(t):this._updateNode(t),!o.isEqual(t,r)}",
                    "_onChange": "function(e,n){void 0===n&&(n=!1);var r=this.animation;!r.changed&&!n&&(r.changed=!0,r.onStart&&r.onStart(this)),r.onChange&&r.onChange(e,this),t.prototype._onChange.call(this,e,n)}",
                    "_reset": "function(){var e=this.animation;h.getAnimated(this).reset(e.to),!this.is(J)&&(e.changed=!1),!e.immediate&&(e.fromValues=e.values.map(function(t){return t.lastPosition})),t.prototype._reset.call(this)}",
                    "_start": "function(){!this.is(J)&&(this._phase=J,t.prototype._start.call(this),p.skipAnimation?this.finish():p.frameLoop.start(this))}",
                    "_stop": "function(t){if(this.resume(),this.is(J)){this._phase=Q,this._onChange(this.get(),!0);var e=this.animation;o.each(e.values,function(t){t.done=!0});var n=e.onRest;n.length&&(e.onRest=[e.toValues?o.noop:n[0]],!e.changed&&(n[0]=o.noop),o.each(n,function(e){return e(t)}))}}",
                    "get": "function(){var t=h.getAnimated(this);return t&&t.getValue()}",
                    "to": "function(){for(var t=arguments.length,e=Array(t),n=0;n<t;n++)e[n]=arguments[n];return p.to(this,e)}",
                    "interpolate": "function(){y.deprecateInterpolate();for(var t=arguments.length,e=Array(t),n=0;n<t;n++)e[n]=arguments[n];return p.to(this,e)}",
                    "addChild": "function(t){!this._children.size&&this._attach(),this._children.add(t)}",
                    "removeChild": "function(t){this._children.delete(t),!this._children.size&&this._detach()}",
                    "_attach": "function(){}",
                    "_detach": "function(){}",
                    "_onPriorityChange": "function(t){!this.idle&&p.frameLoop.start(this),this._emit({type:\"priority\",parent:this,priority:t})}",
                    "_emit": "function(t){o.each(Array.from(this._children),function(e){e.onParentChange(t)})}",
                    "idle": false,
                    "goal": "#000000b3",
                    "velocity": 0.003333333333333332
                },
                {
                    "id": 5,
                    "key": "transform",
                    "_priority": 0,
                    "_children": {
                        "toJSON": "function(){return Array.from(this)}",
                        "has": "function has() { [native code] }",
                        "add": "function add() { [native code] }",
                        "delete": "function delete() { [native code] }",
                        "clear": "function clear() { [native code] }",
                        "entries": "function entries() { [native code] }",
                        "forEach": "function forEach() { [native code] }",
                        "size": 1,
                        "values": "function values() { [native code] }",
                        "keys": "function values() { [native code] }",
                        "union": "function union() { [native code] }",
                        "intersection": "function intersection() { [native code] }",
                        "difference": "function difference() { [native code] }",
                        "symmetricDifference": "function symmetricDifference() { [native code] }",
                        "isSubsetOf": "function isSubsetOf() { [native code] }",
                        "isSupersetOf": "function isSupersetOf() { [native code] }",
                        "isDisjointFrom": "function isDisjointFrom() { [native code] }"
                    },
                    "animation": {
                        "changed": true,
                        "values": [
                            {
                                "_value": 0.26066666666665694,
                                "done": false,
                                "elapsedTime": 78.19999999999709,
                                "lastPosition": 0.26066666666665694,
                                "lastVelocity": 0.003333333333333332,
                                "v0": 0,
                                "_string": "translate3d(0, -73.9333333333343%, 0)",
                                "_toString": "function(t){var n=0;return e[0].replace(c,function(){return String(p[n++](t))}).replace(f,h)}",
                                "constructor": "function e(e,n){var r;return(r=t.call(this,0)||this)._value=void 0,r._string=null,r._toString=void 0,r._toString=i.createInterpolator({output:[e,n]}),r}",
                                "getValue": "function(){var t=this._string;return null==t?this._string=this._toString(this._value):t}",
                                "setValue": "function(e){if(i.is.num(e)){if(!t.prototype.setValue.call(this,e))return!1;else this._string=null}else this._string=e,this._value=1;return!0}",
                                "reset": "function(e){e&&(this._toString=i.createInterpolator({output:[this.getValue(),e]})),this._value=0,t.prototype.reset.call(this)}",
                                "getPayload": "function(){return[this]}"
                            }
                        ],
                        "toValues": [
                            1
                        ],
                        "fromValues": [
                            0
                        ],
                        "to": "translate3d(0, -0px, 0)",
                        "from": "translate3d(0, -100%, 0)",
                        "config": {
                            "tension": 280,
                            "friction": 24,
                            "damping": 1,
                            "mass": 1,
                            "velocity": 0,
                            "duration": 300,
                            "easing": "function(t){return t}",
                            "clamp": false
                        },
                        "immediate": false,
                        "onRest": [
                            "function(r){if(r)t(U(e));else{var i=F(n),a=F(e.get());t(B(e,o.isEqual(a,i)))}}",
                            "function(r){if(r)t(U(e));else{var i=F(n),a=F(e.get());t(B(e,o.isEqual(a,i)))}}"
                        ]
                    },
                    "_phase": "ACTIVE",
                    "_state": {
                        "pauseQueue": {
                            "toJSON": "function(){return Array.from(this)}",
                            "has": "function has() { [native code] }",
                            "add": "function add() { [native code] }",
                            "delete": "function delete() { [native code] }",
                            "clear": "function clear() { [native code] }",
                            "entries": "function entries() { [native code] }",
                            "forEach": "function forEach() { [native code] }",
                            "size": 0,
                            "values": "function values() { [native code] }",
                            "keys": "function values() { [native code] }",
                            "union": "function union() { [native code] }",
                            "intersection": "function intersection() { [native code] }",
                            "difference": "function difference() { [native code] }",
                            "symmetricDifference": "function symmetricDifference() { [native code] }",
                            "isSubsetOf": "function isSubsetOf() { [native code] }",
                            "isSupersetOf": "function isSupersetOf() { [native code] }",
                            "isDisjointFrom": "function isDisjointFrom() { [native code] }"
                        },
                        "resumeQueue": {
                            "toJSON": "function(){return Array.from(this)}",
                            "has": "function has() { [native code] }",
                            "add": "function add() { [native code] }",
                            "delete": "function delete() { [native code] }",
                            "clear": "function clear() { [native code] }",
                            "entries": "function entries() { [native code] }",
                            "forEach": "function forEach() { [native code] }",
                            "size": 0,
                            "values": "function values() { [native code] }",
                            "keys": "function values() { [native code] }",
                            "union": "function union() { [native code] }",
                            "intersection": "function intersection() { [native code] }",
                            "difference": "function difference() { [native code] }",
                            "symmetricDifference": "function symmetricDifference() { [native code] }",
                            "isSubsetOf": "function isSubsetOf() { [native code] }",
                            "isSupersetOf": "function isSupersetOf() { [native code] }",
                            "isDisjointFrom": "function isDisjointFrom() { [native code] }"
                        }
                    },
                    "_defaultProps": {},
                    "_lastCallId": 2,
                    "_lastToId": 2,
                    "constructor": "function e(e,n){var r;if((r=t.call(this)||this).key=void 0,r.animation=new Animation,r.queue=void 0,r._phase=Y,r._state={pauseQueue:new Set,resumeQueue:new Set},r._defaultProps={},r._lastCallId=0,r._lastToId=0,!o.is.und(e)||!o.is.und(n)){var i=o.is.obj(e)?a({},e):a(a({},n),{},{from:e});i.default=!0,r.start(i)}return r}",
                    "advance": "function(t){var e=this,n=!0,r=!1,i=this.animation,a=i.config,u=i.toValues,s=h.getPayload(i.to);if(!s){var c=o.getFluidConfig(i.to);c&&(u=o.toArray(c.get()))}return i.values.forEach(function(c,l){if(!c.done){var f=s?s[l].lastPosition:u[l],h=i.immediate,p=f;if(!h){if(p=c.lastPosition,a.tension<=0){c.done=!0;return}var d=c.elapsedTime+=t,v=i.fromValues[l],y=null!=c.v0?c.v0:c.v0=o.is.arr(a.velocity)?a.velocity[l]:a.velocity;if(o.is.und(a.duration)){if(a.decay){var m=!0===a.decay?.998:a.decay,g=Math.exp(-(1-m)*d);p=v+y/(1-m)*(1-g),h=.1>Math.abs(c.lastPosition-p),b=y*g}else{b=null==c.lastVelocity?y:c.lastVelocity;for(var b,_=a.precision||(v==f?.005:Math.min(1,.001*Math.abs(f-v))),x=a.restVelocity||_/10,w=a.clamp?0:a.bounce,O=!o.is.und(w),k=v==f?c.v0>0:v<f,S=!1,E=Math.ceil(t/1),P=0;P<E&&!(!(Math.abs(b)>x)&&(h=Math.abs(f-p)<=_));++P){;O&&(S=p==f||p>f==k)&&(b=-b*w,p=f);var C=(-(1e-6*a.tension)*(p-f)+-(.001*a.friction)*b)/a.mass;b+=1*C,p+=1*b}}}else{var A=a.progress||0;a.duration<=0?A=1:A+=(1-A)*Math.min(1,d/a.duration),b=((p=v+a.easing(A)*(f-v))-c.lastPosition)/t,h=1==A}c.lastVelocity=b,Number.isNaN(p)&&(console.warn(\"Got NaN while animating:\",e),h=!0)}s&&!s[l].done&&(h=!1),h?c.done=!0:n=!1,c.setValue(p,a.round)&&(r=!0)}}),n?this.finish():r&&this._onChange(this.get()),n}",
                    "is": "function(t){return this._phase==t}",
                    "set": "function(t){var e=this;return p.batchedUpdates(function(){if(e._focus(t),e._set(t)&&!e.is(J))return e._onChange(e.get(),!0);e._stop()}),this}",
                    "pause": "function(){tn(this,\"pause\"),!this.is(Z)&&(this._phase=Z,o.flush(this._state.pauseQueue,function(t){return t()}))}",
                    "resume": "function(){tn(this,\"resume\"),this.is(Z)&&(this._start(),o.flush(this._state.resumeQueue,function(t){return t()}))}",
                    "finish": "function(t){var e=this;if(this.resume(),this.is(J)){var n=this.animation;!n.config.decay&&o.is.und(t)&&(t=n.to),!o.is.und(t)&&this._set(t),p.batchedUpdates(function(){!n.changed&&(n.changed=!0,n.onStart&&n.onStart(e)),e._stop()})}return this}",
                    "update": "function(t){return tn(this,\"update\"),(this.queue||(this.queue=[])).push(t),this}",
                    "start": "function(t,e){return n.apply(this,arguments)}",
                    "stop": "function(t){var e=this;return!this.is(tt)&&($(this._state,this._lastCallId),this._focus(this.get()),p.batchedUpdates(function(){return e._stop(t)})),this}",
                    "reset": "function(){this._update({reset:!0})}",
                    "dispose": "function(){!this.is(tt)&&(this.animation&&(this.animation.onRest=[]),this.stop(),this._phase=tt)}",
                    "onParentChange": "function(e){t.prototype.onParentChange.call(this,e),\"change\"==e.type?!this.is(J)&&(this._reset(),!this.is(Z)&&this._start()):\"priority\"==e.type&&(this.priority=e.priority+1)}",
                    "_prepareNode": "function(t){var e=t.to,n=t.from,r=t.reverse,i=this.key||\"\";e=!o.is.obj(e)||o.getFluidConfig(e)?e:e[i];var a={to:e,from:n=!o.is.obj(n)||o.getFluidConfig(n)?n:n[i]};if(this.is(Y)){if(r){var u=[n,e];e=u[0],n=u[1]}n=o.getFluidValue(n);var s=this._updateNode(o.is.und(n)?o.getFluidValue(e):n);s&&!o.is.und(n)&&s.setValue(n)}return a}",
                    "_updateNode": "function(t){var e=h.getAnimated(this);if(!o.is.und(t)){var n=this._getNodeType(t);(!e||e.constructor!==n)&&h.setAnimated(this,e=n.create(t))}return e}",
                    "_getNodeType": "function(t){var e=h.getAnimated(t);return e?e.constructor:o.is.arr(t)?h.AnimatedArray:o.isAnimatedString(t)?h.AnimatedString:h.AnimatedValue}",
                    "_update": "function(t,e){var n=this,r=this._defaultProps,i=function(e){var n=R(t,e);!o.is.und(n)&&(r[e]=n),r[e]&&(t[e]=r[e])};i(\"cancel\"),i(\"pause\");var a=this._prepareNode(t);return I(++this._lastCallId,{key:this.key,props:t,state:this._state,actions:{pause:this.pause.bind(this),resume:this.resume.bind(this),start:this._merge.bind(this,a)}}).then(function(r){if(t.loop&&r.finished&&!(e&&r.noop)){var i=to(t);if(i)return n._update(i,!0)}return r})}",
                    "_merge": "function(t,e,n){if(e.cancel)return this.stop(!0),n(U(this));var r=this.key,i=this.animation,u=this._defaultProps,s=!o.is.und(t.to),c=!o.is.und(t.from);if(s||c){if(!(e.callId>this._lastToId))return n(U(this));this._lastToId=e.callId}var l=function(t){return o.is.und(e[t])?u[t]:e[t]},f=tr(l(\"onDelayEnd\"),r);if(f&&f(e,this),e.default)T(e,[\"pause\",\"cancel\"],u);var d=i.to,v=i.from,y=t.to,m=void 0===y?d:y,g=t.from,b=void 0===g?v:g;if(c&&!s&&(m=b),e.reverse){var _=[b,m];m=_[0],b=_[1]}var x=!o.isEqual(b,v);x&&(i.from=b);var O=!o.isEqual(m,d);O&&this._focus(m);var S=o.getFluidConfig(m),E=o.getFluidConfig(b);E&&(b=E.get());var P=o.is.arr(e.to)||o.is.fun(e.to),j=i.config,R=j.decay,M=j.velocity;e.config&&!P&&!function(t,e,n){for(var r in n&&(k(n=a({},n),e),e=a(a({},n),e)),k(t,e),Object.assign(t,e),w)null==t[r]&&(t[r]=w[r]);var i=t.mass,u=t.frequency,s=t.damping;!o.is.und(u)&&(u<.01&&(u=.01),s<0&&(s=0),t.tension=Math.pow(2*Math.PI/u,2)*i,t.friction=4*Math.PI*s*i/u)}(j,C(e.config,r),e.config!==u.config?C(u.config,r):void 0);var L=h.getAnimated(this);if(!L||o.is.und(m))return n(B(this,!0));var V=o.is.und(e.reset)?c&&!e.default:!o.is.und(b)&&A(e.reset,r),I=V?b:this.get(),N=F(m),W=o.is.num(N)||o.is.arr(N)||o.isAnimatedString(N),D=!P&&(!W||A(u.immediate||e.immediate,r));if(O){if(D)L=this._updateNode(N);else{var $=this._getNodeType(m);if($!==L.constructor)throw Error(\"Cannot animate between \"+L.constructor.name+\" and \"+$.name+', as the \"to\" prop suggests')}}var G=L.constructor,H=!!S,X=!1;if(!H){var K=V||this.is(Y)&&x;(O||K)&&(H=!(X=o.isEqual(F(I),N))),(!o.isEqual(j.decay,R)||!o.isEqual(j.velocity,M))&&(H=!0)}if(X&&this.is(J)&&(i.changed&&!V?H=!0:!H&&this._stop()),!P){(H||o.getFluidConfig(d))&&(i.values=L.getPayload(),i.toValues=S?null:G==h.AnimatedString?[1]:o.toArray(N)),i.immediate=D,i.onStart=tr(l(\"onStart\"),r),i.onChange=tr(l(\"onChange\"),r);var Z=i.onRest,tt=V&&!e.onRest?Z[0]||o.noop:ti(tr(l(\"onRest\"),r),this);if(H){i.onRest=[tt,ti(n,this)];var te=V?0:1;te<Z.length&&p.batchedUpdates(function(){for(;te<Z.length;te++)Z[te]()})}else(V||e.onRest)&&(i.onRest[0]=tt)}var tn=tr(l(\"onProps\"),r);if(tn&&tn(e,this),V&&L.setValue(I),P)n(q(e.to,e,this._state,this));else if(H)V&&(this._phase=Q),this._reset(),this._start();else if(this.is(J)&&!O)i.onRest.push(ti(n,this));else{let t=z(this,I),e=tr(l(\"onNoopRest\"),r);null!=e&&e(t),n(t)}}",
                    "_focus": "function(t){var e=this.animation;if(t!==e.to){var n=o.getFluidConfig(e.to);n&&n.removeChild(this),e.to=t;var r=0;(n=o.getFluidConfig(t))&&(n.addChild(this),H(t)&&(r=(t.priority||0)+1)),this.priority=r}}",
                    "_set": "function(t){var e=o.getFluidConfig(t);e&&(t=e.get());var n=h.getAnimated(this),r=n&&n.getValue();return n?n.setValue(t):this._updateNode(t),!o.isEqual(t,r)}",
                    "_onChange": "function(e,n){void 0===n&&(n=!1);var r=this.animation;!r.changed&&!n&&(r.changed=!0,r.onStart&&r.onStart(this)),r.onChange&&r.onChange(e,this),t.prototype._onChange.call(this,e,n)}",
                    "_reset": "function(){var e=this.animation;h.getAnimated(this).reset(e.to),!this.is(J)&&(e.changed=!1),!e.immediate&&(e.fromValues=e.values.map(function(t){return t.lastPosition})),t.prototype._reset.call(this)}",
                    "_start": "function(){!this.is(J)&&(this._phase=J,t.prototype._start.call(this),p.skipAnimation?this.finish():p.frameLoop.start(this))}",
                    "_stop": "function(t){if(this.resume(),this.is(J)){this._phase=Q,this._onChange(this.get(),!0);var e=this.animation;o.each(e.values,function(t){t.done=!0});var n=e.onRest;n.length&&(e.onRest=[e.toValues?o.noop:n[0]],!e.changed&&(n[0]=o.noop),o.each(n,function(e){return e(t)}))}}",
                    "get": "function(){var t=h.getAnimated(this);return t&&t.getValue()}",
                    "to": "function(){for(var t=arguments.length,e=Array(t),n=0;n<t;n++)e[n]=arguments[n];return p.to(this,e)}",
                    "interpolate": "function(){y.deprecateInterpolate();for(var t=arguments.length,e=Array(t),n=0;n<t;n++)e[n]=arguments[n];return p.to(this,e)}",
                    "addChild": "function(t){!this._children.size&&this._attach(),this._children.add(t)}",
                    "removeChild": "function(t){this._children.delete(t),!this._children.size&&this._detach()}",
                    "_attach": "function(){}",
                    "_detach": "function(){}",
                    "_onPriorityChange": "function(t){!this.idle&&p.frameLoop.start(this),this._emit({type:\"priority\",parent:this,priority:t})}",
                    "_emit": "function(t){o.each(Array.from(this._children),function(e){e.onParentChange(t)})}",
                    "idle": false,
                    "goal": "translate3d(0, -0px, 0)",
                    "velocity": 0.003333333333333332
                },
                {
                    "id": 6,
                    "key": "opacity",
                    "_priority": 0,
                    "_children": {
                        "toJSON": "function(){return Array.from(this)}",
                        "has": "function has() { [native code] }",
                        "add": "function add() { [native code] }",
                        "delete": "function delete() { [native code] }",
                        "clear": "function clear() { [native code] }",
                        "entries": "function entries() { [native code] }",
                        "forEach": "function forEach() { [native code] }",
                        "size": 1,
                        "values": "function values() { [native code] }",
                        "keys": "function values() { [native code] }",
                        "union": "function union() { [native code] }",
                        "intersection": "function intersection() { [native code] }",
                        "difference": "function difference() { [native code] }",
                        "symmetricDifference": "function symmetricDifference() { [native code] }",
                        "isSubsetOf": "function isSubsetOf() { [native code] }",
                        "isSupersetOf": "function isSupersetOf() { [native code] }",
                        "isDisjointFrom": "function isDisjointFrom() { [native code] }"
                    },
                    "animation": {
                        "changed": true,
                        "values": [
                            {
                                "_value": 0.26066666666665694,
                                "done": false,
                                "elapsedTime": 78.19999999999709,
                                "lastPosition": 0.26066666666665694,
                                "lastVelocity": 0.003333333333333332,
                                "v0": 0,
                                "constructor": "function e(e){var n;return(n=t.call(this)||this)._value=e,n.done=!0,n.elapsedTime=void 0,n.lastPosition=void 0,n.lastVelocity=void 0,n.v0=void 0,i.is.num(n._value)&&(n.lastPosition=n._value),n}",
                                "getPayload": "function(){return[this]}",
                                "getValue": "function(){return this._value}",
                                "setValue": "function(t,e){return i.is.num(t)&&(this.lastPosition=t,e&&(t=Math.round(t/e)*e,this.done&&(this.lastPosition=t))),this._value!==t&&(this._value=t,!0)}",
                                "reset": "function(){var t=this.done;this.done=!1,i.is.num(this._value)&&(this.elapsedTime=0,this.lastPosition=this._value,t&&(this.lastVelocity=null),this.v0=null)}"
                            }
                        ],
                        "toValues": [
                            1
                        ],
                        "fromValues": [
                            0
                        ],
                        "to": 1,
                        "from": 0,
                        "config": {
                            "tension": 280,
                            "friction": 24,
                            "damping": 1,
                            "mass": 1,
                            "velocity": 0,
                            "duration": 300,
                            "easing": "function(t){return t}",
                            "clamp": false
                        },
                        "immediate": false,
                        "onRest": [
                            "function(r){if(r)t(U(e));else{var i=F(n),a=F(e.get());t(B(e,o.isEqual(a,i)))}}",
                            "function(r){if(r)t(U(e));else{var i=F(n),a=F(e.get());t(B(e,o.isEqual(a,i)))}}"
                        ]
                    },
                    "_phase": "ACTIVE",
                    "_state": {
                        "pauseQueue": {
                            "toJSON": "function(){return Array.from(this)}",
                            "has": "function has() { [native code] }",
                            "add": "function add() { [native code] }",
                            "delete": "function delete() { [native code] }",
                            "clear": "function clear() { [native code] }",
                            "entries": "function entries() { [native code] }",
                            "forEach": "function forEach() { [native code] }",
                            "size": 0,
                            "values": "function values() { [native code] }",
                            "keys": "function values() { [native code] }",
                            "union": "function union() { [native code] }",
                            "intersection": "function intersection() { [native code] }",
                            "difference": "function difference() { [native code] }",
                            "symmetricDifference": "function symmetricDifference() { [native code] }",
                            "isSubsetOf": "function isSubsetOf() { [native code] }",
                            "isSupersetOf": "function isSupersetOf() { [native code] }",
                            "isDisjointFrom": "function isDisjointFrom() { [native code] }"
                        },
                        "resumeQueue": {
                            "toJSON": "function(){return Array.from(this)}",
                            "has": "function has() { [native code] }",
                            "add": "function add() { [native code] }",
                            "delete": "function delete() { [native code] }",
                            "clear": "function clear() { [native code] }",
                            "entries": "function entries() { [native code] }",
                            "forEach": "function forEach() { [native code] }",
                            "size": 0,
                            "values": "function values() { [native code] }",
                            "keys": "function values() { [native code] }",
                            "union": "function union() { [native code] }",
                            "intersection": "function intersection() { [native code] }",
                            "difference": "function difference() { [native code] }",
                            "symmetricDifference": "function symmetricDifference() { [native code] }",
                            "isSubsetOf": "function isSubsetOf() { [native code] }",
                            "isSupersetOf": "function isSupersetOf() { [native code] }",
                            "isDisjointFrom": "function isDisjointFrom() { [native code] }"
                        }
                    },
                    "_defaultProps": {},
                    "_lastCallId": 2,
                    "_lastToId": 2,
                    "constructor": "function e(e,n){var r;if((r=t.call(this)||this).key=void 0,r.animation=new Animation,r.queue=void 0,r._phase=Y,r._state={pauseQueue:new Set,resumeQueue:new Set},r._defaultProps={},r._lastCallId=0,r._lastToId=0,!o.is.und(e)||!o.is.und(n)){var i=o.is.obj(e)?a({},e):a(a({},n),{},{from:e});i.default=!0,r.start(i)}return r}",
                    "advance": "function(t){var e=this,n=!0,r=!1,i=this.animation,a=i.config,u=i.toValues,s=h.getPayload(i.to);if(!s){var c=o.getFluidConfig(i.to);c&&(u=o.toArray(c.get()))}return i.values.forEach(function(c,l){if(!c.done){var f=s?s[l].lastPosition:u[l],h=i.immediate,p=f;if(!h){if(p=c.lastPosition,a.tension<=0){c.done=!0;return}var d=c.elapsedTime+=t,v=i.fromValues[l],y=null!=c.v0?c.v0:c.v0=o.is.arr(a.velocity)?a.velocity[l]:a.velocity;if(o.is.und(a.duration)){if(a.decay){var m=!0===a.decay?.998:a.decay,g=Math.exp(-(1-m)*d);p=v+y/(1-m)*(1-g),h=.1>Math.abs(c.lastPosition-p),b=y*g}else{b=null==c.lastVelocity?y:c.lastVelocity;for(var b,_=a.precision||(v==f?.005:Math.min(1,.001*Math.abs(f-v))),x=a.restVelocity||_/10,w=a.clamp?0:a.bounce,O=!o.is.und(w),k=v==f?c.v0>0:v<f,S=!1,E=Math.ceil(t/1),P=0;P<E&&!(!(Math.abs(b)>x)&&(h=Math.abs(f-p)<=_));++P){;O&&(S=p==f||p>f==k)&&(b=-b*w,p=f);var C=(-(1e-6*a.tension)*(p-f)+-(.001*a.friction)*b)/a.mass;b+=1*C,p+=1*b}}}else{var A=a.progress||0;a.duration<=0?A=1:A+=(1-A)*Math.min(1,d/a.duration),b=((p=v+a.easing(A)*(f-v))-c.lastPosition)/t,h=1==A}c.lastVelocity=b,Number.isNaN(p)&&(console.warn(\"Got NaN while animating:\",e),h=!0)}s&&!s[l].done&&(h=!1),h?c.done=!0:n=!1,c.setValue(p,a.round)&&(r=!0)}}),n?this.finish():r&&this._onChange(this.get()),n}",
                    "is": "function(t){return this._phase==t}",
                    "set": "function(t){var e=this;return p.batchedUpdates(function(){if(e._focus(t),e._set(t)&&!e.is(J))return e._onChange(e.get(),!0);e._stop()}),this}",
                    "pause": "function(){tn(this,\"pause\"),!this.is(Z)&&(this._phase=Z,o.flush(this._state.pauseQueue,function(t){return t()}))}",
                    "resume": "function(){tn(this,\"resume\"),this.is(Z)&&(this._start(),o.flush(this._state.resumeQueue,function(t){return t()}))}",
                    "finish": "function(t){var e=this;if(this.resume(),this.is(J)){var n=this.animation;!n.config.decay&&o.is.und(t)&&(t=n.to),!o.is.und(t)&&this._set(t),p.batchedUpdates(function(){!n.changed&&(n.changed=!0,n.onStart&&n.onStart(e)),e._stop()})}return this}",
                    "update": "function(t){return tn(this,\"update\"),(this.queue||(this.queue=[])).push(t),this}",
                    "start": "function(t,e){return n.apply(this,arguments)}",
                    "stop": "function(t){var e=this;return!this.is(tt)&&($(this._state,this._lastCallId),this._focus(this.get()),p.batchedUpdates(function(){return e._stop(t)})),this}",
                    "reset": "function(){this._update({reset:!0})}",
                    "dispose": "function(){!this.is(tt)&&(this.animation&&(this.animation.onRest=[]),this.stop(),this._phase=tt)}",
                    "onParentChange": "function(e){t.prototype.onParentChange.call(this,e),\"change\"==e.type?!this.is(J)&&(this._reset(),!this.is(Z)&&this._start()):\"priority\"==e.type&&(this.priority=e.priority+1)}",
                    "_prepareNode": "function(t){var e=t.to,n=t.from,r=t.reverse,i=this.key||\"\";e=!o.is.obj(e)||o.getFluidConfig(e)?e:e[i];var a={to:e,from:n=!o.is.obj(n)||o.getFluidConfig(n)?n:n[i]};if(this.is(Y)){if(r){var u=[n,e];e=u[0],n=u[1]}n=o.getFluidValue(n);var s=this._updateNode(o.is.und(n)?o.getFluidValue(e):n);s&&!o.is.und(n)&&s.setValue(n)}return a}",
                    "_updateNode": "function(t){var e=h.getAnimated(this);if(!o.is.und(t)){var n=this._getNodeType(t);(!e||e.constructor!==n)&&h.setAnimated(this,e=n.create(t))}return e}",
                    "_getNodeType": "function(t){var e=h.getAnimated(t);return e?e.constructor:o.is.arr(t)?h.AnimatedArray:o.isAnimatedString(t)?h.AnimatedString:h.AnimatedValue}",
                    "_update": "function(t,e){var n=this,r=this._defaultProps,i=function(e){var n=R(t,e);!o.is.und(n)&&(r[e]=n),r[e]&&(t[e]=r[e])};i(\"cancel\"),i(\"pause\");var a=this._prepareNode(t);return I(++this._lastCallId,{key:this.key,props:t,state:this._state,actions:{pause:this.pause.bind(this),resume:this.resume.bind(this),start:this._merge.bind(this,a)}}).then(function(r){if(t.loop&&r.finished&&!(e&&r.noop)){var i=to(t);if(i)return n._update(i,!0)}return r})}",
                    "_merge": "function(t,e,n){if(e.cancel)return this.stop(!0),n(U(this));var r=this.key,i=this.animation,u=this._defaultProps,s=!o.is.und(t.to),c=!o.is.und(t.from);if(s||c){if(!(e.callId>this._lastToId))return n(U(this));this._lastToId=e.callId}var l=function(t){return o.is.und(e[t])?u[t]:e[t]},f=tr(l(\"onDelayEnd\"),r);if(f&&f(e,this),e.default)T(e,[\"pause\",\"cancel\"],u);var d=i.to,v=i.from,y=t.to,m=void 0===y?d:y,g=t.from,b=void 0===g?v:g;if(c&&!s&&(m=b),e.reverse){var _=[b,m];m=_[0],b=_[1]}var x=!o.isEqual(b,v);x&&(i.from=b);var O=!o.isEqual(m,d);O&&this._focus(m);var S=o.getFluidConfig(m),E=o.getFluidConfig(b);E&&(b=E.get());var P=o.is.arr(e.to)||o.is.fun(e.to),j=i.config,R=j.decay,M=j.velocity;e.config&&!P&&!function(t,e,n){for(var r in n&&(k(n=a({},n),e),e=a(a({},n),e)),k(t,e),Object.assign(t,e),w)null==t[r]&&(t[r]=w[r]);var i=t.mass,u=t.frequency,s=t.damping;!o.is.und(u)&&(u<.01&&(u=.01),s<0&&(s=0),t.tension=Math.pow(2*Math.PI/u,2)*i,t.friction=4*Math.PI*s*i/u)}(j,C(e.config,r),e.config!==u.config?C(u.config,r):void 0);var L=h.getAnimated(this);if(!L||o.is.und(m))return n(B(this,!0));var V=o.is.und(e.reset)?c&&!e.default:!o.is.und(b)&&A(e.reset,r),I=V?b:this.get(),N=F(m),W=o.is.num(N)||o.is.arr(N)||o.isAnimatedString(N),D=!P&&(!W||A(u.immediate||e.immediate,r));if(O){if(D)L=this._updateNode(N);else{var $=this._getNodeType(m);if($!==L.constructor)throw Error(\"Cannot animate between \"+L.constructor.name+\" and \"+$.name+', as the \"to\" prop suggests')}}var G=L.constructor,H=!!S,X=!1;if(!H){var K=V||this.is(Y)&&x;(O||K)&&(H=!(X=o.isEqual(F(I),N))),(!o.isEqual(j.decay,R)||!o.isEqual(j.velocity,M))&&(H=!0)}if(X&&this.is(J)&&(i.changed&&!V?H=!0:!H&&this._stop()),!P){(H||o.getFluidConfig(d))&&(i.values=L.getPayload(),i.toValues=S?null:G==h.AnimatedString?[1]:o.toArray(N)),i.immediate=D,i.onStart=tr(l(\"onStart\"),r),i.onChange=tr(l(\"onChange\"),r);var Z=i.onRest,tt=V&&!e.onRest?Z[0]||o.noop:ti(tr(l(\"onRest\"),r),this);if(H){i.onRest=[tt,ti(n,this)];var te=V?0:1;te<Z.length&&p.batchedUpdates(function(){for(;te<Z.length;te++)Z[te]()})}else(V||e.onRest)&&(i.onRest[0]=tt)}var tn=tr(l(\"onProps\"),r);if(tn&&tn(e,this),V&&L.setValue(I),P)n(q(e.to,e,this._state,this));else if(H)V&&(this._phase=Q),this._reset(),this._start();else if(this.is(J)&&!O)i.onRest.push(ti(n,this));else{let t=z(this,I),e=tr(l(\"onNoopRest\"),r);null!=e&&e(t),n(t)}}",
                    "_focus": "function(t){var e=this.animation;if(t!==e.to){var n=o.getFluidConfig(e.to);n&&n.removeChild(this),e.to=t;var r=0;(n=o.getFluidConfig(t))&&(n.addChild(this),H(t)&&(r=(t.priority||0)+1)),this.priority=r}}",
                    "_set": "function(t){var e=o.getFluidConfig(t);e&&(t=e.get());var n=h.getAnimated(this),r=n&&n.getValue();return n?n.setValue(t):this._updateNode(t),!o.isEqual(t,r)}",
                    "_onChange": "function(e,n){void 0===n&&(n=!1);var r=this.animation;!r.changed&&!n&&(r.changed=!0,r.onStart&&r.onStart(this)),r.onChange&&r.onChange(e,this),t.prototype._onChange.call(this,e,n)}",
                    "_reset": "function(){var e=this.animation;h.getAnimated(this).reset(e.to),!this.is(J)&&(e.changed=!1),!e.immediate&&(e.fromValues=e.values.map(function(t){return t.lastPosition})),t.prototype._reset.call(this)}",
                    "_start": "function(){!this.is(J)&&(this._phase=J,t.prototype._start.call(this),p.skipAnimation?this.finish():p.frameLoop.start(this))}",
                    "_stop": "function(t){if(this.resume(),this.is(J)){this._phase=Q,this._onChange(this.get(),!0);var e=this.animation;o.each(e.values,function(t){t.done=!0});var n=e.onRest;n.length&&(e.onRest=[e.toValues?o.noop:n[0]],!e.changed&&(n[0]=o.noop),o.each(n,function(e){return e(t)}))}}",
                    "get": "function(){var t=h.getAnimated(this);return t&&t.getValue()}",
                    "to": "function(){for(var t=arguments.length,e=Array(t),n=0;n<t;n++)e[n]=arguments[n];return p.to(this,e)}",
                    "interpolate": "function(){y.deprecateInterpolate();for(var t=arguments.length,e=Array(t),n=0;n<t;n++)e[n]=arguments[n];return p.to(this,e)}",
                    "addChild": "function(t){!this._children.size&&this._attach(),this._children.add(t)}",
                    "removeChild": "function(t){this._children.delete(t),!this._children.size&&this._detach()}",
                    "_attach": "function(){}",
                    "_detach": "function(){}",
                    "_onPriorityChange": "function(t){!this.idle&&p.frameLoop.start(this),this._emit({type:\"priority\",parent:this,priority:t})}",
                    "_emit": "function(t){o.each(Array.from(this._children),function(e){e.onParentChange(t)})}",
                    "idle": false,
                    "goal": 1,
                    "velocity": 0.003333333333333332
                }
            ],
            "priority": 0,
            "startQueue": {
                "toJSON": "function(){return Array.from(this)}",
                "has": "function has() { [native code] }",
                "add": "function add() { [native code] }",
                "delete": "function delete() { [native code] }",
                "clear": "function clear() { [native code] }",
                "entries": "function entries() { [native code] }",
                "forEach": "function forEach() { [native code] }",
                "size": 0,
                "values": "function values() { [native code] }",
                "keys": "function values() { [native code] }",
                "union": "function union() { [native code] }",
                "intersection": "function intersection() { [native code] }",
                "difference": "function difference() { [native code] }",
                "symmetricDifference": "function symmetricDifference() { [native code] }",
                "isSubsetOf": "function isSubsetOf() { [native code] }",
                "isSupersetOf": "function isSupersetOf() { [native code] }",
                "isDisjointFrom": "function isDisjointFrom() { [native code] }"
            },
            "frameQueue": {
                "toJSON": "function(){return Array.from(this)}",
                "has": "function has() { [native code] }",
                "add": "function add() { [native code] }",
                "delete": "function delete() { [native code] }",
                "clear": "function clear() { [native code] }",
                "entries": "function entries() { [native code] }",
                "forEach": "function forEach() { [native code] }",
                "size": 0,
                "values": "function values() { [native code] }",
                "keys": "function values() { [native code] }",
                "union": "function union() { [native code] }",
                "intersection": "function intersection() { [native code] }",
                "difference": "function difference() { [native code] }",
                "symmetricDifference": "function symmetricDifference() { [native code] }",
                "isSubsetOf": "function isSubsetOf() { [native code] }",
                "isSupersetOf": "function isSupersetOf() { [native code] }",
                "isDisjointFrom": "function isDisjointFrom() { [native code] }"
            },
            "writeQueue": {
                "toJSON": "function(){return Array.from(this)}",
                "has": "function has() { [native code] }",
                "add": "function add() { [native code] }",
                "delete": "function delete() { [native code] }",
                "clear": "function clear() { [native code] }",
                "entries": "function entries() { [native code] }",
                "forEach": "function forEach() { [native code] }",
                "size": 0,
                "values": "function values() { [native code] }",
                "keys": "function values() { [native code] }",
                "union": "function union() { [native code] }",
                "intersection": "function intersection() { [native code] }",
                "difference": "function difference() { [native code] }",
                "symmetricDifference": "function symmetricDifference() { [native code] }",
                "isSubsetOf": "function isSubsetOf() { [native code] }",
                "isSupersetOf": "function isSupersetOf() { [native code] }",
                "isDisjointFrom": "function isDisjointFrom() { [native code] }"
            },
            "timeoutQueue": [],
            "addAnimation": "e=>{let _=this.animations.indexOf(e);_<0&&(_=this.animations.findIndex(_=>_.priority>e.priority),this.animations.splice(0!=~_?_:this.animations.length,0,e))}",
            "loop": "()=>{if(0!==this.lastTime)try{this.advance()}catch(e){console.error(e)}finally{this.animations.length>0||this.startQueue.size>0||this.frameQueue.size>0||this.writeQueue.size>0||this.timeoutQueue.length>0?this.id=this._requestAnimationFrame(this.loop):(this.lastTime=0,this.id=0)}}",
            "startLoop": "()=>{!(this.lastTime>0)&&(this.lastTime=o.Globals.now(),this.id=this._requestAnimationFrame(this.loop))}",
            "setRAF": "setRAF(e,_){0!==this.id&&(this._cancelAnimationFrame(this.id),this.id=0),this._requestAnimationFrame=e,this._cancelAnimationFrame=_,this.loop()}"
        }
    }
}