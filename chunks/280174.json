{
    "exports": {
        "TimeUnits": {
            "NONE": "NONE",
            "SECONDS": "SECONDS",
            "MINUTES": "MINUTES",
            "HOURS": "HOURS",
            "DAYS": "DAYS",
            "WEEKS": "WEEKS",
            "MONTHS": "MONTHS",
            "YEARS": "YEARS"
        },
        "getTimeAndUnit": "function T(e,t){let n=null!=e?S(e,e=>t.includes(e)):\"NONE\",l=null!=n?h[n]:null;return{unit:n,time:null!=e&&null!=l?Math.floor(l(e)):null}}",
        "default": "class extends d.PureComponent{componentDidMount(){this.timer.start(1e4,this.update)}componentDidUpdate(e){let{start:t,end:n,time:l}=this.props;(e.start!==t||e.end!==n||e.time!==l)&&this.update()}componentWillUnmount(){this.timer.stop()}getDiff(){let{start:e,end:t,time:n}=this.props;if(null!=n)return n/1e3/60;let l=Date.now(),i=0;return null!=e?i=l-e:null!=t&&(i=l-t),Math.abs(i)/1e3/60}getTimeUnit(e,t,n){let l=S(e,e=>(function(e,t,n){let l=C[n];if(null!=l){let n=l[t];if(null!=n)return null!=n[e]}return!1})(e,n,t));if(null==l)throw Error(\"Could not get the time unit in PlayTime with time: \".concat(e,\" for type: \").concat(n,\" in location: \").concat(t));return l}getType(){let{start:e,end:t,time:n}=this.props;if(null!=e)return\"START\";if(null!=t)return\"END\";if(null!=n)return\"TIME\";return null}transformTime(e,t){return h[e](t)}render(){let{location:t,messageProps:n,isApplicationStreaming:l,...i}=this.props,{time:a}=this.state,s=this.getType();if(null==s)return null;let r=this.getTimeUnit(a,t,s),o=C[t][s];if(null==o)return null;let d=o[r],c=Math.floor(this.transformTime(r,a));return(0,u.jsx)(e,{...i,children:null==d?void 0:d(c,n,l)})}constructor(...e){super(...e),this.timer=new m.Interval,this.state={time:this.getDiff()},this.update=()=>{this.setState({time:this.getDiff()})}}}"
    }
}