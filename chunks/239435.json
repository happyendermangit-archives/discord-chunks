{
    "exports": {
        "VoiceInThreadsExperiment": {
            "useExperiment": "function(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{autoTrackExposure:!0},o=n.disable??!1,a=!1!==n.autoTrackExposure,s=E(e.kind,e.id,t),I=null==n.trackExposureOptions?void 0:(0,r.default)(n.trackExposureOptions??{}),c=s?.triggerDebuggingEnabled??!1,[[d,A,N],O]=(0,i.useState)(()=>{let t=null==s||o?_.ExperimentBuckets.NOT_ELIGIBLE:s.bucket;return[l(e,t,u,s),t,null==s?-1:s.revision]}),R=(0,r.default)(t);return(0,i.useEffect)(()=>{if(!o&&(!!a||!!c))T(R,I,!1===a)},[o,a,R,I,A,N,c]),(0,i.useEffect)(()=>S(R,(e,t,n)=>{O(i=>i[0]===e&&i[1]===t&&i[2]===n?i:[e,t,n])},{disable:o}),[o,R]),d}",
            "subscribe": "function S(t,n){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=null!=i.disable&&i.disable,o=E(e.kind,e.id,t),a=null==o||r?_.ExperimentBuckets.NOT_ELIGIBLE:o.bucket,I=null==o?-1:o.revision;function T(){let i=E(e.kind,e.id,t),o=null==i||r?_.ExperimentBuckets.NOT_ELIGIBLE:i.bucket,s=null==i?-1:i.revision;(o!==a||I!==s)&&(n(l(e,o,u,i),o,s),a=o,I=s)}return n(l(e,a,u,o),a,I),s.default.addReactChangeListener(T),()=>{s.default.removeReactChangeListener(T)}}",
            "trackExposure": "function c(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{excluded:!1,exposureType:_.ExposureTypes.MANUAL},i=E(e.kind,I.id,t);null!=i&&d(t,n,i)}",
            "getCurrentConfig": "function(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{autoTrackExposure:!0},i=E(e.kind,e.id,t);if(null==i||n.disable)return l(e,_.ExperimentBuckets.NOT_ELIGIBLE,u,i);if(!1!==n.autoTrackExposure||i.triggerDebuggingEnabled){let e=!1===n.autoTrackExposure;T(t,n.trackExposureOptions,e,i)}return l(e,i.bucket,u,i)}",
            "definition": {
                "id": "2022-07_voice_in_threads",
                "label": "Voice in Threads",
                "kind": "guild",
                "defaultConfig": {
                    "enabled": false
                },
                "treatments": [
                    {
                        "id": 1,
                        "label": "On",
                        "config": {
                            "enabled": true
                        }
                    }
                ]
            },
            "isAAMode": "function(t){let n=E(e.kind,e.id,t);return!!n?.aaMode}"
        },
        "canUnarchiveThread": "function M(e){let t=N(e,p.default),n=function(e){return b(e,p.default)}(e);return O(e,t,n)}",
        "computeCanStartPublicThread": "function C(e,t){let n=e.isForumLikeChannel()?E.Permissions.SEND_MESSAGES:s.default.combine(E.Permissions.CREATE_PUBLIC_THREADS,E.Permissions.READ_MESSAGE_HISTORY);return g(p.default.can(n,e),e,t)}",
        "computeIsReadOnlyThread": "function P(e){let t=p.default.can(E.Permissions.MANAGE_THREADS,e);return e.isArchivedLockedThread()&&!t}",
        "getIsActiveChannelOrUnarchivableThread": "function L(e){return null!=e&&(!e.isThread()||e.isActiveThread()||e.isArchivedThread()&&e.threadMetadata?.locked!==!0&&p.default.can(E.Permissions.SEND_MESSAGES_IN_THREADS,e))}",
        "useCanJoinThreadVoice": "function D(e){let t=(0,o.default)(),n=(0,l.useStateFromStores)([p.default],()=>p.default.can(E.Permissions.CONNECT,e)),i=v(e),a=_.useExperiment({guildId:e.guild_id,location:\"e791ea_1\"},{autoTrackExposure:!1}).enabled;return!t&&e.isVocalThread()&&a&&n&&i}",
        "useCanManageThread": "function A(e){let t=(0,l.useStateFromStores)([f.default],()=>f.default.getChannel(e?.parent_id)),n=(0,l.useStateFromStores)([p.default],()=>null!=t&&p.default.can(E.Permissions.MANAGE_THREADS,t),[t]),i=(0,l.useStateFromStores)([c.default],()=>c.default.getId());return!!(null!=e&&null!=t&&e.isThread())&&(!!n||!e.isLockedThread()&&(e.ownerId===i||!1))}",
        "useCanStartPrivateThread": "function y(e){let t=(0,l.useStateFromStores)([p.default],()=>p.default.can(s.default.combine(E.Permissions.CREATE_PRIVATE_THREADS),e),[e]);return e.type===E.ChannelTypes.GUILD_TEXT&&g(t,e)}",
        "useCanStartPublicThread": "function I(e,t){return g((0,l.useStateFromStores)([p.default],()=>{let t=e.isForumLikeChannel()?E.Permissions.SEND_MESSAGES:s.default.combine(E.Permissions.CREATE_PUBLIC_THREADS,E.Permissions.READ_MESSAGE_HISTORY);return p.default.can(t,e)},[e]),e,t)}",
        "useCanStartThread": "function S(e){let t=I(e),n=y(e);return t||n}",
        "useCanUnarchiveThread": "function R(e){let t=(0,l.useStateFromStores)([p.default],()=>N(e,p.default)),n=k(e);return O(e,t,n)}",
        "useCanViewThreadForMessage": "function x(e){let t=(0,l.useStateFromStores)([f.default],()=>f.default.getChannel(m.default.castMessageIdAsChannelId(e.id)),[e]);return function(e,t,n){return!!t.hasFlag(E.MessageFlags.HAS_THREAD)&&null!=n&&!!e||!1}((0,l.useStateFromStores)([p.default],()=>p.default.can(E.Permissions.VIEW_CHANNEL,t),[t]),e,t)}",
        "useHasActiveThreads": "function T(e){return(0,l.useStateFromStoresObject)([h.default,p.default],()=>{let t=h.default.getActiveJoinedThreadsForParent(e.guild_id,e.id),n=h.default.getActiveJoinedRelevantThreadsForParent(e.guild_id,e.id),i=h.default.getActiveUnjoinedThreadsForParent(e.guild_id,e.id),s=a()(n).some(e=>p.default.can(E.Permissions.VIEW_CHANNEL,e.channel)),l=a()(t).some(e=>!(e.channel.id in n)&&p.default.can(E.Permissions.VIEW_CHANNEL,e.channel)),r=a()(i).some(e=>p.default.can(E.Permissions.VIEW_CHANNEL,e));return{hasActiveThreads:s||l||r,hasMoreActiveThreads:r||l}})}",
        "useIsActiveChannelOrUnarchivableThread": "function v(e){let t=(0,l.useStateFromStores)([p.default],()=>null!=e&&p.default.can(E.Permissions.SEND_MESSAGES_IN_THREADS,e));return null!=e&&(!e.isThread()||e.isActiveThread()||e.isArchivedThread()&&e.threadMetadata?.locked!==!0&&t)}",
        "useIsNonModInLockedThread": "function U(e){let t=k(e);return e.isLockedThread()&&!t}",
        "useIsThreadModerator": "function k(e){return(0,l.useStateFromStores)([p.default],()=>b(e,p.default))}"
    }
}