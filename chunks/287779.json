{
    "exports": {
        "default": "class c extends s.default{constructor(e,t,n,i){super(e,t,n,i),this.sdp=null,this.negotiating=!1,this.negotiationNeeded=!1,this.users=new Map,this.userIdsBySsrc=new Map,this.assignedStreams=new Map,this.unassignedStreams={audio:[],video:[]},this.inactiveTransceivers={audio:[],video:[]},this.outboundStreams=[],this.trackUserIds={},this.audioCodec=null,this.audioPayloadType=null,this.videoCodec=null,this.videoPayloadType=null,this.rtxPayloadType=null,this.extensions=[],this.codecs=[],this.getUserIdBySsrc=e=>this.userIdsBySsrc.get(e),this.handlePeerConnectionStateChange=()=>{let e=this.peerConnectionState;switch(this.logger.info(\"peerConnectionState =>\",e),e){case\"connected\":this.setConnected();break;case\"connecting\":\"connected\"===this.iceConnectionState?this.setConnectionState(l.ConnectionStates.DTLS_CONNECTING):this.setConnectionState(l.ConnectionStates.ICE_CHECKING);break;case\"failed\":this.setConnectionState(l.ConnectionStates.NO_ROUTE);break;case\"disconnected\":case\"closed\":this.setConnectionState(l.ConnectionStates.DISCONNECTED)}},this.handleIceConnectionStateChange=()=>{let e=this.iceConnectionState;switch(this.logger.info(\"iceConnectionState =>\",e),e){case\"connected\":this.setConnected();break;case\"checking\":this.setConnectionState(l.ConnectionStates.ICE_CHECKING);break;case\"failed\":this.setConnectionState(l.ConnectionStates.NO_ROUTE);break;case\"disconnected\":case\"closed\":this.setConnectionState(l.ConnectionStates.DISCONNECTED)}},this.handleSignalingStateChange=()=>{let e=this.signalingState;this.logger.info(`signalingState => ${e}`)},this.handleIceGatheringStateChange=()=>{this.logger.info(\"iceGatheringState =>\",this.iceGatheringState)},this.handleTrack=e=>{let t=e.streams[0].id,n=e.track;if(!/^default/.test(n.id)){let[e,i]=t.split(\"-\");this.trackUserIds[n.id]=e;let r=this.users.get(e);if(r?.videoSSRC?.toString?.()!==i&&r?.audioSSRC?.toString?.()!==i){this.logger.info(`Got stale ssrc ${i} for ${n.kind} track, user ID ${e}`);return}this.createOutput(e,n),n.onunmute=()=>this.createOutput(e,n),n.onmute=()=>{this.users.get(e)?.videoSSRC==null&&this.destroyOutput(e,n)}}},this.logger=new o.default(`UnifiedConnection(${e})`),this.videoSupported=u.BROWSER_SUPPORTS_VIDEO;let r=this.pc=new RTCPeerConnection({bundlePolicy:\"max-bundle\",sdpSemantics:\"unified-plan\"});u.BROWSER_SUPPORTS_CONNECTION_STATE?(r.onconnectionstatechange=this.handlePeerConnectionStateChange,r.oniceconnectionstatechange=this.handlePeerConnectionStateChange):r.oniceconnectionstatechange=this.handleIceConnectionStateChange,r.onsignalingstatechange=this.handleSignalingStateChange,r.onicegatheringstatechange=this.handleIceGatheringStateChange,r.ontrack=this.handleTrack,r.addTransceiver(\"audio\",{direction:\"recvonly\",sendEncodings:[{maxBitrate:this.voiceBitrate}]}),this.audioTransceiver=r.getTransceivers()[0],this.videoSupported&&(this.addTransceivers(\"video\",\"recvonly\",1,this.input.getVideoStream()),this.videoTransceiver=r.getTransceivers()[1]),this.addTransceivers(\"audio\",\"recvonly\",10),this.videoSupported&&this.addTransceivers(\"video\",\"recvonly\",10),this.setStream(this.input.stream),this.logger.info(\"Renegotiating: Initial negotiation\"),this.handleNegotiationNeeded(!0)}destroy(){super.destroy(),\"closed\"!==this.signalingState&&this.pc.close()}setCodecs(e,t,n){let i;(this.audioCodec!==e||this.videoCodec!==t)&&(i=this.codecs.find(t=>t.name===e),this.audioCodec=e,this.audioPayloadType=i?.payloadType??0,i=this.codecs.find(e=>e.name===t),this.videoCodec=t,this.videoPayloadType=i?.payloadType??0,this.rtxPayloadType=i?.rtxPayloadType??0,this.logger.info(\"Renegotiating: Codecs changed\"),this.handleNegotiationNeeded())}setStream(e){let t=\"closed\"===this.iceConnectionState;null!=e&&!t&&(T(this.audioTransceiver,e.getAudioTracks()[0]),this.videoSupported&&T(this.videoTransceiver,e.getVideoTracks()[0])),this.logger.info(\"Renegotiating: Streams changed\"),this.handleNegotiationNeeded()}createUser(e,t,n){if(0===t){this.logger.warn(`Attempting to create user ${e} with 0 audio SSRC`);return}this.logger.info(`Creating user: ${e} with audio SSRC: ${t} and video SSRCs: ${n?.join(\",\")??0}`);let i=!1,r=this.users.get(e);if(null==r&&(r={}),r.audioSSRC!==t){r.audioSSRC=t,i=!0,this.unassignedStreams.audio.push({cname:e,ssrc:t});let n=this.inactiveTransceivers.audio.length,o=this.unassignedStreams.audio.length;this.addTransceivers(\"audio\",\"recvonly\",10+o-n)}if(this.videoSupported&&void 0!==n&&(!I||void 0===r.videoSSRC)){let t=null!=n&&n.length>0?n[0]:0;if(t>0){if(r.videoSSRC!==t){r.videoSSRC=t,i=!0,this.unassignedStreams.video.push({cname:e,ssrc:t});let n=this.inactiveTransceivers.video.length,o=this.unassignedStreams.video.length;this.addTransceivers(\"video\",\"recvonly\",10+o-n)}}else null!=r.videoSSRC&&(r.videoSSRC=void 0,i=!0)}if(i){this.users.set(e,r),t>0&&this.userIdsBySsrc.set(t,e);let i=null!=n&&n.length>0?n[0]:0;i>0&&this.userIdsBySsrc.set(i,e),this.logger.info(\"Renegotiating: User joined\"),this.handleNegotiationNeeded()}}destroyUser(e){let t=this.users.get(e);if(null!=t){let{audioSSRC:n,videoSSRC:i}=t;this.users.delete(e),null!=n&&this.userIdsBySsrc.delete(n),null!=i&&this.userIdsBySsrc.delete(i),this.logger.info(\"Renegotiating: User left\"),this.handleNegotiationNeeded()}}setBitRate(e){this.voiceBitrate!==e&&(super.setBitRate(e),this.setAudioEncoderParameters([{parameter:s.EncoderParameter.AUDIO_BITRATE,value:e}]))}setSDP(e){if(!(0,E.validateSdp)(e))throw Error(`Incorrect SDP received from rtc-worker: ${e}`);this.sdp=e,this.setRemoteAnswer()}get peerConnectionState(){return this.pc.connectionState}get iceGatheringState(){return this.pc.iceGatheringState}get iceConnectionState(){return this.pc.iceConnectionState}get signalingState(){return this.pc.signalingState}get connected(){return\"connected\"===this.pc.iceConnectionState}setTransceiverEncodingParameters(e,t){if(null==e||0===t.length)return;let n=e.sender,i=n.getParameters();if(null==i.encodings)return;let r=!1;for(let e of i.encodings)for(let{propertyName:n,value:i}of t)e[n]!==i&&(this.logger.info(`UnifiedConnection.setTransceiverEncodingParameters: ${n}: from '${e[n]}' to '${i}'`),r=!0,e[n]=i);if(!r)return;let o=e=>{this.logger.error(`UnifiedConnection.setTransceiverEncodingProperty: setParameters failed: \"${e}\" (${JSON.stringify(t)})\"`)};n.setParameters(i).then(()=>{},e=>o(e)).catch(e=>o(e))}setAudioEncoderParameters(e){let t={[s.EncoderParameter.AUDIO_BITRATE]:\"maxBitrate\"},n=[];for(let{parameter:i,value:r}of e){let e=t[i];if(null==e){this.logger.info(`UnifiedConnection.setEncoderParameter: Unable to set parameter \"${i}\"`);return}n.push({propertyName:e,value:r})}this.setTransceiverEncodingParameters(this.audioTransceiver,n)}setVideoEncoderParameters(e){let t={[s.EncoderParameter.VIDEO_BITRATE]:\"maxBitrate\",[s.EncoderParameter.VIDEO_RESOLUTION_SCALE]:\"scaleResolutionDownBy\",[s.EncoderParameter.VIDEO_FRAMERATE]:\"maxFramerate\"},n=[];for(let{parameter:i,value:r}of e){let e=t[i];if(null==e){this.logger.info(`UnifiedConnection.setEncoderParameter: Unable to set parameter \"${i}\"`);return}n.push({propertyName:e,value:r})}this.setTransceiverEncodingParameters(this.videoTransceiver,n)}getRawStats(){return this.pc.getStats()}makeOfferAnswerOptions(){return{iceRestart:!1}}parseLocalDescription(){let e=this.pc.localDescription;if(null==e)throw Error(\"localDescription is null\");let t=e.sdp,{outboundStreams:n,codecs:i,audioSSRC:r,videoSSRC:o,rtxSSRC:s}=(0,E.extractSDP)(t);return this.outboundStreams=n,this.codecs=i,this.extensions=(0,E.getExtensions)(t),this.audioSSRC=r,this.videoReady=o>0&&s>0,(this.videoStreamParameters[0].ssrc!==o||this.videoStreamParameters[0].rtxSsrc!==s||this.videoReady)&&(this.videoStreamParameters[0].ssrc=0===o?this.videoStreamParameters[0].ssrc:o,this.videoStreamParameters[0].rtxSsrc=0===s?this.videoStreamParameters[0].rtxSsrc:s,this.videoStreamParameters[0].active=this.videoReady,this.emit(a.BaseConnectionEvent.Video,this.ids.userId,this.input.getVideoStreamId(),this.audioSSRC,o,s,this.videoStreamParameters)),t}addTransceivers(e,t,n,i){let r=this.pc,o=r.getTransceivers().length;for(let a=o;a<o+n;a++)\"video\"===e&&null!=i?r.addTransceiver(e,{direction:t,streams:[i]}):r.addTransceiver(e,{direction:t}),this.inactiveTransceivers[e].push(a.toString())}buildSSRCsFromOutboundStreams(){return this.outboundStreams.map(e=>{let{mid:t,type:n,direction:i}=e;t=String(t);let r=this.assignedStreams.get(t);if(null!=r){let e=this.users.get(r.cname),i=\"audio\"===n?e?.audioSSRC:e?.videoSSRC;r.ssrc!==i&&(r=void 0,this.assignedStreams.delete(t))}let o=this.unassignedStreams[n],a=this.inactiveTransceivers[n],s=a.indexOf(t);return null==r&&o.length>0&&-1!==s&&(r=o.pop(),a.splice(s,1),this.assignedStreams.set(t,r)),null==r&&(r={ssrc:-1,cname:\"\"}),{ssrc:r.ssrc,cname:r.cname,type:n,direction:(0,E.getDirection)(i),mid:t}})}generateSDPAnswer(){let e=this.audioCodec,t=this.audioPayloadType,n=this.videoCodec,i=this.videoPayloadType,r=this.videoSupported&&this.videoTransceiver?.sender?.track!=null,o=this.rtxPayloadType,a=this.sdp;if(null==e||null==t||null==n||null==i||null==o||null==a)throw Error(`Invalid payload: audioCodec: ${e}, audioPayloadType: ${null==t?\"null\":t}, videoCodec: ${n}, videoCodecPayloadType: ${null==i?\"null\":i}, rtxPayloadType: ${null==o?\"null\":o}, sdp: ${null==a?\"null\":a}`);let s=this.buildSSRCsFromOutboundStreams();return(0,E.generateUnifiedSessionDescription)({type:\"answer\",baseSDP:a,audioCodec:e,audioPayloadType:t,audioBitRate:this.voiceBitrate,videoCodec:n,videoPayloadType:i,videoBitRate:2500,sendingVideo:r,rtxPayloadType:o,ssrcs:s,extensions:this.extensions})}async setRemoteAnswer(){let e=this.pc,t=this.generateSDPAnswer();await e.setRemoteDescription(t),(this.unassignedStreams.audio.length>0||this.unassignedStreams.video.length>0)&&(this.negotiationNeeded=!0,this.logger.info(\"Renegotiating: Streams left unassigned after negotiation - renegotiate\")),this.negotiating=!1,this.negotiationNeeded&&this.handleNegotiationNeeded()}setConnected(){this.input.reset(),this.setConnectionState(l.ConnectionStates.CONNECTED),this.on(a.BaseConnectionEvent.Stats,this.handleStats),this.input.on(_.InputEvent.VoiceActivity,this.handleVoiceActivity)}async handleNegotiationNeeded(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(!e&&(this.negotiating||null==this.sdp)){this.negotiationNeeded=!0;return}this.negotiating=!0,this.negotiationNeeded=!1;let t=this.pc,n=await t.createOffer(this.makeOfferAnswerOptions());await t.setLocalDescription(n);let i=this.parseLocalDescription();null==this.sdp?this.emit(a.BaseConnectionEvent.Connected,\"webrtc\",(0,E.truncateSDP)(i)):this.setRemoteAnswer()}}"
    }
}