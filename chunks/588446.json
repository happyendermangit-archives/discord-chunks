{
    "exports": {
        "Directions": {
            "SENDRECV": "sendrecv",
            "SENDONLY": "sendonly",
            "RECVONLY": "recvonly",
            "INACTIVE": "inactive"
        },
        "getDirection": "function S(e){switch(e){case\"recvonly\":return\"sendonly\";case\"sendonly\":return\"recvonly\";case\"sendrecv\":return\"sendrecv\";default:return\"inactive\"}}",
        "generateSessionDescription": "function I(e){let{type:t,baseSDP:n,direction:i,audioCodec:r,audioPayloadType:s,audioBitRate:a,videoCodec:o,videoPayloadType:u,videoBitRate:d,rtxPayloadType:f,ssrcs:E,extensions:p}=e,_=[];if(h.info(\"generateSessionDescription: \".concat(JSON.stringify(E))),\"Firefox\"===c.name){let e=\"answer\"===t?\"passive\":\"active\";E.forEach(t=>{let[i,l,c,E,h]=t;if(\"video\"!==c||0!==u&&0!==f)_.push(g({mid:h,type:c,setup:e,direction:E,baseSDP:n,codec:\"audio\"===c?r:o,payload:\"audio\"===c?s:u,bitrate:\"audio\"===c?a:d,ssrcs:m(l,i,\"audio\"===c?\"a\":\"v\"),extensions:p}))})}else{let e=\"answer\"===t?\"passive\":\"actpass\",c=l(E).filter(e=>{let[t,n,i,r,s]=e;return\"inactive\"!==r&&\"audio\"===i}).map(e=>{let[t,n]=e;return m(n,t,\"a\")}).value();if(_.push(g({mid:\"audio\",type:\"audio\",setup:e,direction:i,baseSDP:n,codec:r,payload:s,bitrate:a,ssrcs:l.flatten(c),extensions:p})),u>0){let t=l(E).filter(e=>{let[t,n,i,r,s]=e;return\"inactive\"!==r&&\"video\"===i}).map(e=>{let[t,n]=e;return m(n,t,\"v\")}).value();_.push(g({mid:\"video\",type:\"video\",setup:e,direction:i,baseSDP:n,codec:o,payload:u,bitrate:d,ssrcs:l.flatten(t),extensions:p,rtxPayload:f}))}}let S=T(_);return new RTCSessionDescription({type:t,sdp:S})}",
        "generateUnifiedSessionDescription": "function C(e){let{type:t,baseSDP:n,audioCodec:i,audioPayloadType:r,audioBitRate:s,videoCodec:a,videoPayloadType:o,videoBitRate:l,sendingVideo:u,rtxPayloadType:c,ssrcs:d,extensions:f}=e,E=[],p=\"answer\"===t?\"passive\":\"actpass\";d.forEach(e=>{let t,{ssrc:d,cname:h,type:_,direction:S,mid:T}=e;\"\"!==h?t=m(h,d,\"audio\"===_?\"a\":\"v\"):(t=[],\"sendonly\"===S?S=\"inactive\":\"sendrecv\"===S&&(S=\"recvonly\"));E.push(g({mid:T,type:_,setup:p,direction:S,baseSDP:n,codec:\"audio\"===_?i:a,payload:\"audio\"===_?r:o,bitrate:\"audio\"===_?s:l,ssrcs:t,extensions:f,rtxPayload:\"audio\"===_?null:c,sendingVideo:u}))});let h=T(E);return new RTCSessionDescription({type:t,sdp:h})}",
        "extractSDP": "function A(e){let t=d.parse(e).media.reduce((e,t)=>{let n,{type:i,rtp:r,ssrcs:s,fmtp:a,direction:o,mid:u}=t;switch(e.outboundStreams.push({type:i,direction:o,mid:u}),i){case\"audio\":[E.Codecs.OPUS].forEach((t,n)=>{let s=v(r,a,i,t,n);null!=s&&e.codecs.push(s)}),\"sendrecv\"===o&&null!=(n=l.find(s,{attribute:\"cname\"}))&&(e.audioSSRC=n.id);break;case\"video\":[E.Codecs.H264,E.Codecs.VP8,E.Codecs.VP9].forEach((t,n)=>{let s=v(r,a,i,t,n);null!=s&&e.codecs.push(s)}),\"sendrecv\"===o&&(null!=(n=l.find(s,{attribute:\"cname\"}))&&(e.videoSSRC=n.id),null!=(n=l.findLast(s,{attribute:\"cname\"}))&&(n.id===e.videoSSRC&&h.warn(\"Unable to find a unique rtx SSRC!\"),e.rtxSSRC=n.id))}return e},{outboundStreams:[],codecs:[],audioSSRC:0,videoSSRC:0,rtxSSRC:0});return t.codecs=l.uniqWith(t.codecs,l.isEqual),t}",
        "truncateSDP": "function R(e){var t;let{codecs:n}=A(e),i=n.find(e=>e.name===E.Codecs.VP8),r=RegExp(\"^a=ice|a=extmap|a=fingerprint|opus|VP8|\".concat(null!==(t=null==i?void 0:i.rtxPayloadType)&&void 0!==t?t:0,\" rtx\"),\"i\");return{sdp:l(e).split(/\\r\\n/).filter(e=>r.test(e)).uniq().join(\"\\n\"),codecs:n}}",
        "validateSdp": "function N(e){if(!e.includes(\"a=fingerprint\"))return h.error(\"Remote SDP does not include fingerprint!\"),!1;if(!e.includes(\"a=ice-ufrag\"))return h.error(\"Remote SDP does not include ICE user name!\"),!1;if(!e.includes(\"a=ice-pwd\"))return h.error(\"Remote SDP does not include ICE password!\"),!1;if(!e.includes(\"a=candidate\"))return h.error(\"Remote SDP does not include ICE candidate!\"),!1;if(!e.includes(\"c=\"))return h.error(\"Remote SDP does not include c-line!\"),!1;let t=e.split(\"\\n\").filter(e=>e.startsWith(\"c=\")).join().trim();return!(t.split(\" \").length<3)||(h.error(\"Incorrect c-line: \".concat(t)),!1)}",
        "getExtensions": "function O(e){return l(e).split(/\\r\\n/).filter(e=>e.startsWith(\"a=extmap:\")).uniq().map(e=>{let t=e.split(\" \"),n=t[0].split(\"/\");return{value:parseInt(n[0].substr(9),10),uri:t[1]}}).value()}"
    }
}