{
    "exports": {
        "uploadDebugLogFiles": "async function m(t,e){await y(t),await (0,r.uploadRtcLogFiles)(3670016,e)}",
        "getBlindIds": "async function L(t,e,n){let o=new a.BlindID(n),l=await o.blind(t),r=await o.blind(e);return{blindChannelId:l,blindUserId:r}}",
        "uploadCallscopeLogs": "async function b(t,e,n,o){var a;if(!__OVERLAY__){if((null===l.default||void 0===l.default?void 0:null===(a=l.default.fileManager)||void 0===a?void 0:a.getCallscopeLogFiles)==null){h.error(\"uploadCallscopeLogs: Upload RTC logs failed because native is out of date (getCallscopeLogFiles).\");return}if(!(\"crypto\"in window)){h.error(\"uploadCallscopeLogs: Upload RTC logs failed because crypto is not supported.\");return}try{let{blindChannelId:a,blindUserId:r}=await L(t,e,n),i=\"channel blind(\".concat(t,\"): \").concat(a,\", user blind(\").concat(e,\"): \").concat(r);h.info(\"uploadCallscopeLogs: Uploading callscope logs for context: \".concat(o,\", \").concat(i));let c=await l.default.fileManager.getCallscopeLogFiles(a);await w(r,c)}catch(t){h.error(\"uploadCallscopeLogs: Error uploading logs \".concat(null==t?void 0:t.text),t)}}}",
        "uploadCallscopeLogFiles": "async function w(t,e){try{if(0===e.length){h.error(\"uploadCallscopeLogFiles: No files found.\");return}for(let n of e.map(t=>c.transformNativeFile(t,\"application/octet-stream\"))){h.log(\"uploadCallscopeLogFiles: Uploading \".concat(n.name));let e=E.getChannelId(n.name);try{let a=await o.default.post({url:f.Endpoints.CALLSCOPE_LOGS(e,t,E.getTrimmedFilename(n.name)),headers:{\"Content-Type\":\"application/octet-stream\"},body:n}),l=a.status>=200&&a.status<=299;!l&&h.error(\"uploadCallscopeLogFiles: Failed to upload \".concat(n.name,\" with status \").concat(a.status,\", \").concat(a.text))}catch(t){h.error(\"uploadCallscopeLogFiles: Error uploading file \".concat(n.name,\" \").concat(null==t?void 0:t.text),t)}}}catch(t){h.error(\"uploadCallscopeLogFiles: Error uploading logs \".concat(null==t?void 0:t.text),t)}}"
    }
}