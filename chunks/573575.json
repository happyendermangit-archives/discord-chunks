{
    "exports": {
        "useLegacyPlatformType": "function h(e){let[t,a]=n.useState(!1);function l(e){let{key:t}=e;t===T.KeyboardKeysUpdated.SHIFT&&a(!0)}function s(e){let{key:t}=e;t===T.KeyboardKeysUpdated.SHIFT&&a(!1)}return(n.useEffect(()=>(window.addEventListener(\"keydown\",l),window.addEventListener(\"keyup\",s),()=>{window.removeEventListener(\"keydown\",l),window.removeEventListener(\"keyup\",s)}),[]),t&&e===f.PlatformTypes.TWITTER)?f.PlatformTypes.TWITTER_LEGACY:e}",
        "usePlatformAllowed": "function N(e){let{forUserProfile:t}=e,a=(0,r.useStateFromStores)([u.default],()=>u.default.getCurrentUser()),n=o.PlayStationVoiceExperiment.useExperiment({location:\"f2f7ef_1\"},{autoTrackExposure:!1}).allowPlayStationStaging;return e=>e.type===f.PlatformTypes.PLAYSTATION_STAGING?n:!!(void 0!==a&&E[e.type]?.includes(a.id))||!!t||e.enabled}",
        "usePlatforms": "function I(){let e=(0,r.useStateFromStores)([i.default],()=>i.default.getAccounts()),t=N({forUserProfile:!1}),a=n.useMemo(()=>{let t=new Set;return e.forEach(e=>t.add(e.type)),t},[e]);return s().sortBy(c.default.filter(t),[e=>!(_.has(e.type)&&Date.now()<(_.get(e.type)??0)+m),e=>a.has(e.type),e=>e.hasMetadata,e=>!f.ACTIVITY_PLATFORM_TYPES.has(e.type),e=>e.name])}"
    }
}