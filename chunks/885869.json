{
    "exports": {
        "default": {
            "addGame": "addGame(e){s.default.dispatch({type:\"RUNNING_GAME_ADD_OVERRIDE\",pid:e})}",
            "toggleOverlay": "toggleOverlay(e,t){let n=c.default.getGameByName(e.name);if(null!=n){let e=f.default.getActiveLibraryApplication(n.id);if(null!=e){let t=m.toggleFlag(e.getFlags(),y.LibraryApplicationFlags.OVERLAY_DISABLED);I.updateFlags(e.id,e.branchId,t);return}}s.default.dispatch({type:\"RUNNING_GAME_TOGGLE_OVERLAY\",game:e,newEnabledValue:t})}",
            "toggleDetection": "toggleDetection(e){s.default.dispatch({type:\"RUNNING_GAME_TOGGLE_DETECTION\",game:e})}",
            "editName": "editName(e,t){s.default.dispatch({type:\"RUNNING_GAME_EDIT_NAME\",game:e,newName:t})}",
            "identifyGame": "(e,t)=>(0,o.default)().then(t=>new Promise((n,i)=>{if(null==t){i(Error(\"Game utils module not loaded\"));return}t.identifyGame(e,(t,a)=>{if(0!==t){i(Error(`Error ${t} when fetching info on ${e}`));return}if(null==a.icon||\"\"===a.icon||null==a.name||\"\"===a.name){i(Error(`Did not find data on ${e}`));return}s.default.dispatch({type:\"GAME_ICON_UPDATE\",gameName:a.name,icon:`data:image/png;base64,${a.icon}`}),n(a)})}))",
            "getDetectableGames": "getDetectableGames(){!c.default.fetching&&null==c.default.lastFetched&&s.default.wait(()=>{s.default.dispatch({type:\"GAMES_DATABASE_FETCH\"}),a.default.get({url:y.Endpoints.APPLICATIONS_DETECTABLE,headers:{\"If-None-Match\":c.default.detectableGamesEtag},retries:1,oldFormErrors:!0}).then(e=>{let{body:t,headers:{etag:n}}=e;s.default.dispatch({type:\"GAMES_DATABASE_UPDATE\",games:t,etag:n})},e=>{let{status:t}=e;304===t?s.default.dispatch({type:\"GAMES_DATABASE_UPDATE\",games:[],etag:c.default.detectableGamesEtag}):s.default.dispatch({type:\"GAMES_DATABASE_FETCH_FAIL\"})})})}",
            "reportUnverifiedGame": "reportUnverifiedGame(e){let{name:t,iconHash:n,publisher:i,distributor:l,sku:r,executableName:u}=e,d=(0,o.cleanExecutablePath)(u);if(null!=d){var c,f;a.default.post({url:y.Endpoints.UNVERIFIED_APPLICATIONS,body:{name:t,os:(0,E.getPlatformName)(),icon:n,distributor_application:(c=l,f=r,null==c||\"\"===c?null:{distributor:c,sku:f}),executable:d,publisher:i,report_version:3},retries:1,oldFormErrors:!0}).then(e=>{let{body:{name:t,hash:n,missing_data:i}}=e;s.default.dispatch({type:\"UNVERIFIED_GAME_UPDATE\",name:t,hash:n,missingData:i})})}}",
            "uploadIcon": "uploadIcon(e,t,n){a.default.post({url:y.Endpoints.UNVERIFIED_APPLICATIONS_ICONS,body:{application_name:e,application_hash:t,icon:n},retries:1,oldFormErrors:!0})}",
            "deleteEntry": "deleteEntry(e){s.default.dispatch({type:\"RUNNING_GAME_DELETE_ENTRY\",game:e})}",
            "launch": "function T(e,t,n){let o=arguments.length>3&&void 0!==arguments[3]&&arguments[3],c=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[];if(o)return null==n?Promise.reject(Error(\"Invalid channel ID\")):((0,l.startEmbeddedActivity)(n,e,c),Promise.resolve());if(d.default.isConnected(e))return Promise.resolve();let m=null;if(null==t){let n=f.default.getActiveLibraryApplication(e);t=null!=n?n.branchId:e}if(p.default.isLaunchable(e,t)){var E;let n=p.default.getState(e,t),s=f.default.getActiveLaunchOptionId(e,t);if(null==n)throw Error(\"Missing dispatch game when launching\");let l=f.default.getLibraryApplication(e,t);if(null==l)throw Error(\"Missing library application when launching\");m=(E=e,a.default.post({url:y.Endpoints.OAUTH2_AUTHORIZE,query:{client_id:E,response_type:\"token\",scope:[y.OAuth2Scopes.IDENTIFY].join(\" \")},retries:3,body:{authorize:!0},oldFormErrors:!0}).then(e=>{let t=e.body.location.split(/#|\\?/),n=i.parse(t[t.length-1]);if(\"invalid_request\"===n.error)return null;if(null!=n.error)throw Error(`OAuth2 Error: ${n.error}: ${n.error_description??\"unknown error\"}`);return n.access_token},e=>{if(404===e.status)return null;throw e})).then(e=>h.default.launchDispatchApplication(n,e,u.default.locale,l.getBranchName(),s))}else{let t=r.default.getApplication(e);m=null!=t?h.default.launch(t):h.default.launchGame(e)}let _=Error(\"game not found\");return null!=m?(s.default.dispatch({type:\"LIBRARY_APPLICATION_ACTIVE_BRANCH_UPDATE\",applicationId:e,branchId:t}),s.default.dispatch({type:\"GAME_LAUNCH_START\",applicationId:e}),m.then(t=>{s.default.dispatch({type:\"GAME_LAUNCH_SUCCESS\",applicationId:e,pids:t})}).catch(t=>{C.default.show(y.NoticeTypes.LAUNCH_GAME_FAILURE,g.default.Messages.GAME_LAUNCH_FAILED_LAUNCH_TARGET_NOT_FOUND),s.default.dispatch({type:\"GAME_LAUNCH_FAIL\",applicationId:e,error:_})})):(s.default.dispatch({type:\"GAME_LAUNCH_FAIL\",applicationId:e,error:_}),Promise.reject(_))}",
            "join": "async join(e){let{userId:t,sessionId:n,applicationId:i,channelId:a,messageId:l,intent:r=S.ActivityIntent.PLAY,embedded:o=!1}=e;if(__OVERLAY__)return s.default.dispatch({type:\"OVERLAY_JOIN_GAME\",userId:t,sessionId:n,applicationId:i,channelId:a,messageId:l}),Promise.resolve(!0);s.default.dispatch({type:\"ACTIVITY_JOIN_LOADING\",applicationId:i});try{let e=await _.default.getJoinSecret(t,n,i,a,l);return x({applicationId:i,secret:e,channelId:a,intent:r,embedded:o}),!0}catch(e){return s.default.dispatch({type:\"ACTIVITY_JOIN_FAILED\",applicationId:i}),!1}}",
            "joinWithSecret": "function x(e){let{applicationId:t,secret:n,channelId:i,intent:a=S.ActivityIntent.PLAY,embedded:l=!1,analyticsLocations:r=[]}=e;T(t,null,i,l,r).then(()=>h.default.waitConnected(t)).then(()=>Promise.race([h.default.waitSubscribed(t,y.RPCEvents.ACTIVITY_JOIN)])).then(()=>{s.default.dispatch({type:\"ACTIVITY_JOIN\",applicationId:t,secret:n,intent:a,embedded:l})}).catch(()=>s.default.dispatch({type:\"ACTIVITY_JOIN_FAILED\",applicationId:t}))}"
        }
    }
}