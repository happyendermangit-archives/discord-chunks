{
    "exports": {
        "codeToKey": "function A(e){let[,t,n]=e;switch(n){case l.KeyboardEnvs.LINUX:return I[\"\"+t];case l.KeyboardEnvs.MACOS:return T[\"\"+t];case l.KeyboardEnvs.WINDOWS:return c[\"\"+t];case l.KeyboardEnvs.BROWSER:return r()(t);default:return d[\"\"+t]}}",
        "getEnv": "function S(){if((0,E.isLinux)())return l.KeyboardEnvs.LINUX;if((0,E.isMac)())return l.KeyboardEnvs.MACOS;if((0,E.isWindows)())return l.KeyboardEnvs.WINDOWS;else return l.KeyboardEnvs.BROWSER}",
        "keyToCode": "function N(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:S(),n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:l.KeyboardDeviceTypes.KEYBOARD_KEY;switch(n){case l.KeyboardDeviceTypes.KEYBOARD_KEY:case l.KeyboardDeviceTypes.KEYBOARD_MODIFIER_KEY:switch(t){case l.KeyboardEnvs.LINUX:return l.LinuxKeyToCode[e];case l.KeyboardEnvs.MACOS:return l.MacosKeyToCode[e];case l.KeyboardEnvs.WINDOWS:return l.WindowsKeyToCode[e];case l.KeyboardEnvs.BROWSER:return r()(e.replace(/^(right|left) (shift|meta|ctrl|alt)$/,\"$2\").replace(\"meta\",\"command\"));default:return u[e]}case l.KeyboardDeviceTypes.MOUSE_BUTTON:return parseInt(e.replace(\"MOUSE\",\"\"),10);case l.KeyboardDeviceTypes.GAMEPAD_BUTTON:return parseInt(e.replace(\"GAMEPAD\",\"\"),10);default:throw Error(`Unrecognized DeviceType ${n}.`)}}",
        "toBrowserEvents": "function L(e){let t={keyCode:0,metaKey:!1,shiftKey:!1,altKey:!1,ctrlKey:!1};return null==e?[]:e.reduce((e,n)=>{let i=A(n),r={...t};if(null==i)return e.push({...r,combo:n}),e;if(h.test(i))return t[i+\"Key\"]=!0,e.map(e=>(e[i+\"Key\"]=!0,e));{let t=N(i,l.KeyboardEnvs.BROWSER);return null!=t&&(r.keyCode=t),e.push(r),e}},[])}",
        "toCombo": "function D(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:S(),n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:l.KeyboardDeviceTypes.KEYBOARD_KEY;return e.replace(/numpad plus/i,\"\").replace(/NUMPAD \\+/i,\"numpad plus\").replace(/mod/i,s.default.modKey).split(\"+\").map(e=>e.trim().replace(\"plus\",\"+\")).reduce((e,i)=>{let r=N(C(i),t,n);return null!=r&&e.push([n,r,t]),e},[])}",
        "toString": "function m(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],i=e.map(e=>{let[t,n,i]=e;if(t===l.KeyboardDeviceTypes.KEYBOARD_KEY||t===l.KeyboardDeviceTypes.KEYBOARD_MODIFIER_KEY)return A(null!=i?[t,n,i]:[t,n])??`UNK${n}`;if(t===l.KeyboardDeviceTypes.MOUSE_BUTTON)return`mouse${n}`;if(t===l.KeyboardDeviceTypes.GAMEPAD_BUTTON)return`gamepad${n}`;else return`dev${t},${n}`}).filter(_.isNotNullish);return t?(-1!==n.g.navigator.appVersion.indexOf(\"Mac OS X\")?i.map(R):i).join(\" + \").toUpperCase():i.join(\"+\")}"
    }
}