{
    "exports": {
        "default": {
            "isInitialized": false,
            "handleEnd": "e=>{let{handoffToken:t,fingerprint:n}=e,s=o.default.key;null!=s&&o.default.isHandoffAvailable()?this.handleHandoff({handoffKey:s,handoffToken:t,fingerprint:n,handoffSource:void 0}):(r.default.setFingerprint(null),(0,l.handoffUnavailable)())}",
            "_initialize": "_initialize(){a.default.subscribe(\"BROWSER_HANDOFF_END\",this.handleEnd),a.default.subscribe(\"BROWSER_HANDOFF_FROM_APP\",this.handleHandoff)}",
            "_terminate": "_terminate(){a.default.unsubscribe(\"BROWSER_HANDOFF_END\",this.handleEnd),a.default.unsubscribe(\"BROWSER_HANDOFF_FROM_APP\",this.handleHandoff)}",
            "handleHandoff": "handleHandoff(e){let{handoffKey:t,handoffToken:n,fingerprint:a,handoffSource:o}=e;null!=n?s.default.post({url:c.Endpoints.HANDOFF_EXCHANGE,body:{key:t,handoff_token:n}}).then(e=>{let{body:t}=e;(0,l.handoffSetUser)(t.user),r.default.loginToken(t.token,!1),f(!0,o)},e=>{if(null!=a&&f(!1,o),r.default.setFingerprint(a),(0,l.handoffEnd)(),o===i.LoginHandoffSource.ROLE_SUBSCRIPTION){var t;u.default.track(c.AnalyticEvents.MOBILE_WEB_HANDOFF_FAILURE,{reason:null!==(t=e.message)&&void 0!==t?t:e.text,handoff_source:o})}}):null!=a?(r.default.setFingerprint(a),f(!1,o),(0,l.handoffEnd)()):(r.default.setFingerprint(a),(0,l.handoffUnavailable)())}"
        }
    }
}