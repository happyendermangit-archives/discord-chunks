{
    "exports": {
        "getAPIEndpoint": "function u(e){return`${location.protocol}//${location.host}${e}`}",
        "getBuildOverride": "function I(){let e=s.default.safeParseWithQuery(u(\"/__development/build_overrides\"));return null==e?Promise.resolve(null):(e.search=null,l&&(e.query.version=l),o.default.get({url:r.format(e),oldFormErrors:!0}).then(e=>e.body||null,()=>null))}",
        "getBuildOverrideExperiments": "function d(){try{let e=i.parse(window.document.cookie)[_.BUILD_OVERRIDE_COOKIE_NAME];if(null==e)return{};return JSON.parse(atob(e.substring(e.indexOf(\".\")+1))).$meta.experiments??{}}catch(e){return{}}}",
        "getBuildOverrideMeta": "function T(e){if(O(e))return Promise.resolve(function(e){let t=e.match(N);if(null==t||2!==t.length)return null;let n=(0,a.getNativePlatform)();return{targetBuildOverride:{[`discord_${n}`]:{type:\"branch\",id:t[1]}},validForUserIds:[],expiresAt:\"Mon, 1 Jan 2038 00:00:00 GMT\"}}(e));let t=s.default.safeParseWithQuery(e);return null==t?Promise.resolve(null):(t.search=null,t.query.meta=\"true\",l&&(t.query.version=l),t.host=window.location.host,o.default.get({url:r.format(t),oldFormErrors:!0}).then(e=>e.body||null,()=>null))}",
        "isBuildOverrideLink": "function A(e){return null!=e&&S.test(e)}",
        "probablyHasBuildOverride": "function c(){return -1!==window.document.cookie.indexOf(`${_.BUILD_OVERRIDE_COOKIE_NAME}=`)}",
        "validateURL": "function h(e){if(O(e))return{payload:null,url:e};let t=s.default.safeParseWithQuery(e);if(null==t||!R.has(t.hostname)||!(\"s\"in t.query)||!C.has(t.pathname))return null;for(let e in t.query)\"s\"!==e&&delete t.query[e];return{payload:t.query.s,url:r.format(t)}}"
    }
}