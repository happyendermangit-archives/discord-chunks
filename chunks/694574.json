{
    "exports": {
        "default": {
            "PASSTHROUGH": "PASSTHROUGH",
            "ALLOW": "ALLOW",
            "DENY": "DENY",
            "NONE": "0",
            "DEFAULT": "31858024238657",
            "ALL": "562949953421311",
            "VIEW_GUILD_SETTINGS": "8798106288300",
            "computePermissionsForRoles": "function e(t){let n,{forceRoles:i,context:r,overwrites:o,roles:a,checkElevated:s=!0,excludeGuildPermissions:_}=t,E=L;if(r instanceof I.ChannelRecordBase){if(r.isScheduledForDeletion())return R;if(I.THREAD_CHANNEL_TYPES.has(r.type)){let t=c.default.getChannel(r.parent_id);return null==t?R:G(r,e({forceRoles:i,context:t,overwrites:o,roles:a,checkElevated:s,excludeGuildPermissions:_}),!1)}E=r.computeLurkerPermissionsAllowList()??E;o=null!=o?{...r.permissionOverwrites,...o}:r.permissionOverwrites;let t=r.getGuildId();n=null!=t?S.default.getGuild(t):null}else o=o??{},n=r;if(null==n)return R;let l={userId:O.EMPTY_STRING_SNOWFLAKE_ID,nick:\"\",guildId:n.id,guildMemberAvatar:null,roles:N.default.keys(i),colorString:null,hoistRoleId:null,premiumSince:null,isPending:!1,joinedAt:new Date().toISOString(),communicationDisabledUntil:null};return U({userId:O.EMPTY_STRING_SNOWFLAKE_ID,member:l,guild:n,overwrites:o,roles:a,checkElevated:s,excludeGuildPermissions:_,lurkerPermissionsMask:E})}",
            "computePermissions": "function g(e){let t,{user:n,context:i,overwrites:r,roles:o,checkElevated:a=!0,excludeGuildPermissions:s=!1}=e;if(null==n)return R;let _=\"string\"==typeof n?n:n.id,l=L;if(i instanceof I.ChannelRecordBase){if(i.isScheduledForDeletion())return R;if(I.THREAD_CHANNEL_TYPES.has(i.type)){let e=c.default.getChannel(i.parent_id);if(null==e||e.isScheduledForDeletion())return R;let t=_===A.default.getCurrentUser()?.id&&u.default.hasJoined(i.id);return G(i,g({user:n,context:e,overwrites:r,roles:o,checkElevated:a,excludeGuildPermissions:s}),t)}l=i.computeLurkerPermissionsAllowList()??l;r=null!=r?{...i.permissionOverwrites,...r}:i.permissionOverwrites;let e=i.getGuildId();t=null!=e?S.default.getGuild(e):null}else r=r??{},t=i;if(null==t)return R;if(!(_===A.default.getCurrentUser()?.id&&E.default.isViewingRoles(t.id))&&t.isOwner(_))return P(C,t,_,a);let T=d.default.getMember(t.id,_);return U({userId:_,member:T,guild:t,overwrites:r,roles:o,checkElevated:a,excludeGuildPermissions:s,lurkerPermissionsMask:l})}",
            "applyThreadPermissions": "function G(e,t,n){return e.type!==O.ChannelTypes.PRIVATE_THREAD||n||o.default.has(t,O.Permissions.MANAGE_THREADS)?o.default.has(t,O.Permissions.SEND_MESSAGES_IN_THREADS)?e.isLockedThread()&&!o.default.has(t,O.Permissions.MANAGE_THREADS)?o.default.remove(t,O.Permissions.SEND_MESSAGES):o.default.combine(t,O.Permissions.SEND_MESSAGES):o.default.remove(t,O.Permissions.SEND_MESSAGES):R}",
            "getGuildVisualOwnerId": "function(e){return r().some(e.roles,e=>e.hoist&&o.default.has(e.permissions,O.Permissions.ADMINISTRATOR))?void 0:e.ownerId??void 0}",
            "isRoleHigher": "function(e,t,n,i){if(null!=t&&e.isOwner(t))return!0;if(null==n)return!1;let o=r()(e.roles).sortBy(e=>e.position).map(e=>e.id).value();return o.indexOf(n.id)>(null!=i?o.indexOf(i.id):-1)}",
            "getHighestRole": "function(e,t){let n=d.default.getMember(e.id,t);if(null!=n)return r()(e.roles).filter(e=>-1!==n.roles.indexOf(e.id)).sortBy(e=>-e.position).first()}",
            "getHighestHoistedRole": "function(e,t){return null==t.hoistRoleId?null:e.getRole(t.hoistRoleId)}",
            "can": "function v(e){let{permission:t,user:n,context:i,overwrites:r,roles:a,excludeGuildPermissions:s}=e;return o.default.has(g({user:n,context:i,overwrites:r,roles:a,checkElevated:!0,excludeGuildPermissions:s}),t)}",
            "canEveryoneRole": "canEveryoneRole(e,t){let n;let i={};if(t instanceof I.ChannelRecordBase){if(t.type===O.ChannelTypes.PRIVATE_THREAD||I.THREAD_CHANNEL_TYPES.has(t.type)&&null==(t=c.default.getChannel(t.parent_id)))return!1;i=t.permissionOverwrites;let e=t.getGuildId();n=null!=e?S.default.getGuild(e):null}else n=t;if(null==n)return!1;let r=n.roles[n.getEveryoneRoleId()].permissions,a=i[n.id];return null!=a&&(r=o.default.remove(r,a.deny),r=o.default.add(r,a.allow)),o.default.has(r,e)}",
            "canEveryone": "canEveryone(e,t){let n;let i={};if(t instanceof I.ChannelRecordBase){if(t.type===O.ChannelTypes.PRIVATE_THREAD||I.THREAD_CHANNEL_TYPES.has(t.type)&&null==(t=c.default.getChannel(t.parent_id)))return!1;i=t.permissionOverwrites;let e=t.getGuildId();n=null!=e?S.default.getGuild(e):null}else n=t;if(null==n)return!1;let a=n.roles[n.getEveryoneRoleId()];return!(!o.default.has(a.permissions,e)||r().some(i,t=>o.default.has(t.deny,e)))&&!0}",
            "canManageACategory": "function(e,t,n){return!!v({permission:O.Permissions.MANAGE_CHANNELS,user:e,context:t})||n.some(t=>{let{channel:n}=t;return\"null\"!==n.id&&v({permission:O.Permissions.MANAGE_CHANNELS,user:e,context:n})})}",
            "areChannelsLocked": "function(e,t){if(I.THREAD_CHANNEL_TYPES.has(e.type))return!0;let{guild_id:n}=e;if(null==t||null==n||n!==t.guild_id)return!1;let i={...e.permissionOverwrites},r={...t.permissionOverwrites};return null==i[n]&&(i[n]=y(n)),null==r[n]&&(r[n]=y(n)),Object.keys(i).length===Object.keys(r).length&&!Object.keys(i).some(e=>{let t=i[e],n=r[e];return!(null!=n&&o.default.equals(n.deny,t.deny)&&o.default.equals(n.allow,t.allow))&&!0})}",
            "makeEveryoneOverwrite": "function y(e){return{id:e,type:a.PermissionOverwriteType.ROLE,allow:R,deny:R}}"
        }
    }
}