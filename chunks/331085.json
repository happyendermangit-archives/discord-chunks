{
    "exports": {
        "default": "function x(e){let{authTokenCallback:t}=e,{state:n,rsaKeyPair:s,cancel:a,handleFailure:r}=function(e){let[t,n]=o.useState(0),[s,a]=o.useState(!1),[r,l]=o.useState({step:0}),[i,d]=o.useState(null),c=(0,E.default)(),f=o.useMemo(()=>new u.default(1500,3e4),[]),h=o.useRef();h.current=o.useCallback(()=>{l({step:0}),c?n(e=>e+1):(O.info(\"document is not visible, will defer reconnection when document becomes visible.\"),a(!0))},[c]);let _=o.useCallback(()=>{(function(e){let{current:t}=e;if(void 0===t)throw Error(\"tried to unwrap an undefined value.\");return t})(h)()},[h]),g=o.useCallback(()=>{O.error(\"Could not complete QR code login, trying to restart with a new QR code.\"),l({step:0}),!f.pending&&f.fail(_)},[_,f]);return o.useEffect(()=>{c&&s&&0===r.step&&(O.info(\"reconnecting, now that document is visible\"),a(!1),n(e=>e+1))},[r,c,s,a]),o.useEffect(()=>{let t=Date.now(),n=()=>\"\".concat(Date.now()-t,\"ms\"),s=\"wss:\".concat(window.GLOBAL_ENV.REMOTE_AUTH_ENDPOINT,\"/?v=2\"),a=new WebSocket(s);O.info(\"[0ms] connecting to \".concat(s));let r=e=>O.info(\"[\".concat(n(),\"] \").concat(e)),i=null,o=null,u=null,c=null,E=!0;function h(){if(null!=i)return i;throw Error(\"No key pair set\")}let I=()=>{E?(E=!1,a.send(JSON.stringify({op:\"heartbeat\"}))):(r(\"heartbeat timeout, reconnecting.\"),a.close(),g())};return a.onmessage=async t=>{let{data:n}=t,s=JSON.parse(n);switch(s.op){case\"nonce_proof\":{let e=s.encrypted_nonce,t=await (0,p.decryptNonce)(h(),e);r(\"computed nonce proof\"),a.send(JSON.stringify({op:\"nonce_proof\",nonce:t}));return}case\"pending_remote_init\":{f.succeed(),m.ComponentDispatch.dispatch(T.ComponentActions.WAVE_EMPHASIZE);let e=await (0,p.publicKeyFingerprint)(h());if(e!==s.fingerprint)throw Error(\"bad fingerprint \".concat(e,\" !== \").concat(s.fingerprint));r(\"handshake complete awaiting remote auth.\"),l({step:1,fingerprint:e});return}case\"pending_login\":{let e=s.ticket;null==e&&g(),l({step:4,ticket:e});return}case\"pending_ticket\":{m.ComponentDispatch.dispatch(T.ComponentActions.WAVE_EMPHASIZE),r(\"remote auth handshake started, awaiting ticket/cancel.\");let e=s.encrypted_user_payload,t=await (0,p.decodeEncodedUserRecord)(h(),e);l({step:3,user:t});return}case\"pending_finish\":{m.ComponentDispatch.dispatch(T.ComponentActions.WAVE_EMPHASIZE),r(\"remote auth handshake started, awaiting finish/cancel.\");let e=s.encrypted_user_payload,t=await (0,p.decodeEncodedUserRecord)(h(),e);l({step:2,user:t});return}case\"finish\":{m.ComponentDispatch.dispatch(T.ComponentActions.WAVE_EMPHASIZE),r(\"remote auth handshake finished.\");let t=s.encrypted_token;l({step:5});let n=await (0,p.decryptEncodedCiphertext)(h(),t);e(n);return}case\"cancel\":r(\"remote auth handshake cancelled.\"),_();return;case\"hello\":{r(\"got hello, auth timeout=\".concat(s.timeout_ms,\"ms\"));let e=s.heartbeat_interval;c=setTimeout(()=>{c=null,I(),u=setInterval(I,e)},Math.floor(e*Math.random()));return}case\"heartbeat_ack\":E=!0}},a.onopen=async()=>{i=await (0,p.generateRsaKeyPair)(),o=await (0,p.serializePublicKey)(i);let e=await (0,p.publicKeyFingerprint)(i);r(\"connected, handshaking with fingerprint: \".concat(e)),a.send(JSON.stringify({op:\"init\",encoded_public_key:o})),d(i)},a.onclose=e=>{r(\"disconnected, code: \".concat(e.code,\" \").concat(e.reason)),g()},a.onerror=e=>{r(\"disconnected, error: \".concat(JSON.stringify(e))),g()},()=>{r(\"cleaning up\"),a.onopen=()=>null,a.onmessage=()=>null,a.onclose=()=>null,a.onerror=()=>null,a.close(1e3),f.cancel(),null!=c&&clearTimeout(c),null!=u&&clearInterval(u)}},[_,e,t,f,g]),{state:r,rsaKeyPair:i,cancel:_,handleFailure:g}}(t),l=function(e){switch(e){case 0:case 1:return 0;case 3:case 2:case 4:case 5:return 1}}(n.step);return o.useEffect(()=>{4===n.step&&null!=n.ticket&&d.default.post({url:T.Endpoints.REMOTE_AUTH_LOGIN,body:{ticket:n.ticket},oldFormErrors:!0}).then(async e=>{if(null!=s)try{let n=await (0,p.decryptEncodedCiphertext)(s,e.body.encrypted_token);t(n)}catch(e){r()}else r()}).catch(()=>{r()})},[n,t,s,r]),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(\"div\",{className:S.verticalSeparator}),(0,i.jsx)(c.Sequencer,{fillParent:!0,className:S.qrLogin,step:l,steps:[0,1],children:(0,i.jsx)(\"div\",{className:S.qrLoginInner,children:(0,i.jsx)(M,{state:n,cancel:a})})})]})}"
    }
}