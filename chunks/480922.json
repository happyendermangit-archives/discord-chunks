{
    "exports": {
        "default": {
            "initializedCount": 0,
            "actions": {
                "CHANNEL_SELECT": "function E(e){let{channelId:t}=e;if(null==t||!(0,s.isEligibleForInappropriateConversationWarning)({location:\"channel_select\"}))return!1;let n=r.default.getChannel(t);if(null==n||!n.isDM())return!1;let i=(0,a.getInappropriateConversationTakeoverForChannel)(t);return null!=i&&((0,_.showTakeoverModal)({warningId:i.id,warningType:i.type,senderId:n.getRecipientId(),channelId:t}),!0)}",
                "CHANNEL_UPDATES": "function l(e){let{channels:t}=e;if(!(0,s.isEligibleForInappropriateConversationWarning)({location:\"channel_updates\"}))return!1;let n=o.default.getCurrentlySelectedChannelId();if(null==n)return!1;let i=t.find(e=>e.id===n);if(null==i)return!1;let r=(0,a.getInappropriateConversationTakeoverForChannel)(i.id);return!!(null!=r&&i.isDM())&&((0,_.showTakeoverModal)({warningId:r.id,warningType:r.type,senderId:i.getRecipientId(),channelId:i.id}),!0)}"
            },
            "stores": {
                "toJSON": "function(){return Array.from(this)}",
                "get": "function get() { [native code] }",
                "set": "function set() { [native code] }",
                "has": "function has() { [native code] }",
                "delete": "function delete() { [native code] }",
                "clear": "function clear() { [native code] }",
                "entries": "function entries() { [native code] }",
                "forEach": "function forEach() { [native code] }",
                "keys": "function keys() { [native code] }",
                "size": 0,
                "values": "function values() { [native code] }"
            }
        }
    }
}