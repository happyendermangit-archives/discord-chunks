{
    "exports": {
        "default": {
            "waitSubscribed": "(e,t)=>new Promise((n,i)=>D(()=>a.default.isSubscribed(e,t),n,i))",
            "waitConnected": "waitConnected(e){return new Promise(D.bind(this,()=>_.default.isConnected(e)))}",
            "isLaunchable": "e=>L(C(e)).then(e=>null!=e).catch(()=>!1)",
            "launch": "e=>L(C(e)).then(m)",
            "launchDispatchApplication": "launchDispatchApplication(e,t,n,r,a){let{launchOptions:_,defaultLaunchOptionId:E,installPath:I,applicationId:T,branchId:c,buildId:S,shouldPatch:A}=e;if(null==_||null==E||null==I)throw Error(`Couldn't construct launchable for ${e.applicationId}`);null==a&&(a=E);let N=_[a];if(null==N)throw Error(`Couldn't construct launchable for ${e.applicationId}. No launch option.`);return(0,i.fetchBranches)([c]).then(e=>{let t=e[0];if(null==t)return Promise.reject(Error(\"branch is null\"));let{liveBuildId:n}=t;if(A&&n!==S)return Promise.reject(Error(\"live build id changed\"))}).then(()=>u.default.runLaunchSetup(T,c)).then(()=>{let e=(0,o.default)(I),i={DISCORD_INSTANCE_ID:l.default.getId().toString(),DISCORD_ACCESS_TOKEN:t??\"\",DISCORD_CURRENT_LOCALE:n,DISCORD_CURRENT_BRANCH:r,DISCORD_STORAGE_PATH:d.DefaultCloudSyncConfiguration.ROOT_STORAGE_PATH(e,s.default.getId())};return u.default.launch(T,c,N.name,i)})}",
            "removeShortcuts": "e=>(0,I.isWindows)()?R().then(t=>t.removeShortcuts?.(e)??!1):Promise.resolve(!1)",
            "createShortcuts": "createShortcuts(e,t,n,i,r){if(null==r||!(0,I.isWindows)())return Promise.resolve(!1);let o=`discord:///library/${i}/launch`,a=`${r}\\\\icon.ico`;return R().then(i=>i.createShortcuts?.(e,t,n,o,a)??!1)}",
            "isGameLaunchable": "e=>L({id:e}).then(e=>null!=e).catch(()=>!1)",
            "launchGame": "launchGame(e){if(_.default.isConnected(e))return Promise.resolve();return L({id:e}).then(m)}",
            "isProtocolRegistered": "e=>R().then(t=>t.isProtocolSchemeRegistered?.(e)??!1)",
            "setRecentGames": "setRecentGames(e){R().then(t=>t.setRecentGames?.(e)).catch(()=>{})}"
        }
    }
}