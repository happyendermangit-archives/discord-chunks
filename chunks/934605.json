{
    "exports": {
        "default": "class u extends i.Component{static #e=this.defaultProps={active:!0,children:i.createElement(\"span\"),root:null,rootMargin:\"0px 0px 0px 0px\",threshold:[0,Number.MIN_VALUE]};constructor(e){super(e),this.isVisible=!1;let{root:t,rootMargin:s,threshold:i}=e;t?n.has(t)?this.elementId=n.get(t)||\"\":n.set(t,(0,r.v4)()):this.elementId=l;let u=this.getVisibilityObserverId();!o.has(u)&&o.set(u,new a.default({root:t,rootMargin:s,threshold:i}))}componentDidMount(){if(this.props.active){let e=this.getVisibilityObserver();e.observe(this),this.isVisible=e.isVisible(this),this.props.onChange(this.isVisible)}}componentDidUpdate(e){let t=this.getVisibilityObserver(),s=t.isVisible(this);this.props.active&&s!==this.isVisible&&this.props.onChange(s),!e.active&&this.props.active?t.observe(this):e.active&&!this.props.active&&t.unobserve(this),this.isVisible=s}componentWillUnmount(){this.getVisibilityObserver().unobserve(this)}getVisibilityObserverId(){let{rootMargin:e,threshold:t}=this.props;return`${this.elementId} ${e} ${t}`}getVisibilityObserver(){let e=this.getVisibilityObserverId(),t=o.get(e);if(!t)throw Error(`Visibility sensor with id ${e} not found.`);return t}render(){return i.Children.only(this.props.children)}}"
    }
}