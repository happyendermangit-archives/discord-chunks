{
    "exports": {
        "shouldImmediatelyRequestVoicePermissions": "function l(e,_){var E;let t=null===(E=I.default.getChannel(_))||void 0===E?void 0:E.isListenModeCapable();if(!t)return!0;let o=n.default.isSpeaker(e,_);return o}",
        "default": {
            "initializedCount": 0,
            "actions": {
                "VOICE_STATE_UPDATES": "handleVoiceStateUpdates(e){let{voiceStates:_}=e;_.forEach(e=>{let{userId:_,channelId:E}=e;if(null==E)return;let t=a.default.getId()===_;if(!t||null==T.default.getRTCConnectionId()||A===E)return;let o=l(_,E);if(o){A=E,R();return}let n=function(e){let _=(0,r.getAudienceRequestToSpeakState)(e),E=_===r.RequestToSpeakStates.REQUESTED_TO_SPEAK_AND_AWAITING_USER_ACK;return E}(new i.default(e));n&&(A=E,R())})}",
                "VOICE_CHANNEL_SELECT": "handleVoiceChannelSelect(e){let{channelId:_}=e;null==_&&(A=null)}"
            },
            "stores": {
                "toJSON": "function(){return Array.from(this)}",
                "get": "function get() { [native code] }",
                "set": "function set() { [native code] }",
                "has": "function has() { [native code] }",
                "delete": "function delete() { [native code] }",
                "clear": "function clear() { [native code] }",
                "entries": "function entries() { [native code] }",
                "forEach": "function forEach() { [native code] }",
                "keys": "function keys() { [native code] }",
                "size": 0,
                "values": "function values() { [native code] }"
            },
            "handleVoiceChannelSelect": "handleVoiceChannelSelect(e){let{channelId:_}=e;null==_&&(A=null)}",
            "handleVoiceStateUpdates": "handleVoiceStateUpdates(e){let{voiceStates:_}=e;_.forEach(e=>{let{userId:_,channelId:E}=e;if(null==E)return;let t=a.default.getId()===_;if(!t||null==T.default.getRTCConnectionId()||A===E)return;let o=l(_,E);if(o){A=E,R();return}let n=function(e){let _=(0,r.getAudienceRequestToSpeakState)(e),E=_===r.RequestToSpeakStates.REQUESTED_TO_SPEAK_AND_AWAITING_USER_ACK;return E}(new i.default(e));n&&(A=E,R())})}"
        }
    }
}