{
    "exports": {
        "default": "class D extends a.default{constructor(){super(),this.Video=R.default,this.Camera=O.default,this._audioContext=null,this.outputVolume=C.DEFAULT_VOLUME,this.sourceId=C.DEFAULT_DEVICE_ID,this.sinkId=C.DEFAULT_DEVICE_ID,this.enabled=!1,this.connections=new Set,this.interacted=!1,this.loopback=null,this.voiceActivityInput=null,this.pendingDesktopInputs={},this.enablePromise=null,this.handleActiveSinksChange=(e,t)=>{this.connections.forEach(n=>n.setHasActiveVideoOutputSink(e,t))},this.handleNewListener=e=>{switch(e){case l.MediaEngineEvent.DeviceChange:null!=navigator.mediaDevices&&null==navigator.mediaDevices.ondevicechange&&(navigator.mediaDevices.ondevicechange=()=>{this.handleDeviceChange()},this.handleDeviceChange());break;case l.MediaEngineEvent.VoiceActivity:null==this.voiceActivityInput&&(this.voiceActivityInput=new T.default(this.getAudioContext()),this.voiceActivityInput.setSource(this.sourceId),this.voiceActivityInput.on(\"voiceactivity\",this.handleVoiceActivity),this.enabled&&this.voiceActivityInput.enable())}},this.handleRemoveListener=e=>{switch(e){case l.MediaEngineEvent.DeviceChange:navigator.mediaDevices?.ondevicechange!=null&&0===this.listenerCount(l.MediaEngineEvent.DeviceChange)&&(navigator.mediaDevices.ondevicechange=null);break;case l.MediaEngineEvent.VoiceActivity:null!=this.voiceActivityInput&&0===this.listenerCount(l.MediaEngineEvent.VoiceActivity)&&(this.voiceActivityInput.destroy(),this.voiceActivityInput=null)}},this.handleDeviceChange=()=>(0,S.getDevices)().then(e=>{let[t,n,i]=e;return this.emit(l.MediaEngineEvent.DeviceChange,t,n,i)}),this.handleVoiceActivity=e=>{this.emit(l.MediaEngineEvent.VoiceActivity,e,0)},this.handleDesktopSourceEnd=()=>{this.emit(l.MediaEngineEvent.DesktopSourceEnd)},this.handleAudioPermission=e=>{this.emit(l.MediaEngineEvent.AudioPermission,e)},this.handleVideoPermission=e=>{this.emit(l.MediaEngineEvent.VideoPermission,e)},this.on(\"newListener\",this.handleNewListener),this.on(\"removeListener\",this.handleRemoveListener),(0,I.setActiveSinksChangeCallback)(this.handleActiveSinksChange),(0,u.default)(this)}destroy(){null!=this.voiceActivityInput&&(this.voiceActivityInput.destroy(),this.voiceActivityInput=null),this.eachConnection(e=>e.destroy()),this.emit(l.MediaEngineEvent.Destroy),this.removeAllListeners()}interact(){!this.interacted&&(document.createElement(\"audio\").play(),this.interacted=!0),this.eachConnection(e=>e.interact())}static supported(){return!__OVERLAY__&&(h.BROWSER_SUPPORTS_VOICE&&null!=window.AudioContext&&null!=window.RTCPeerConnection?(n(\"250678\"),!0):(L.info(\"WebRTC is not supported on\",r().name,r().version),!1))}supported(){return!0}supports(e){switch(e){case C.Features.AUDIO_INPUT_DEVICE:return S.CAN_SET_DEVICES;case C.Features.AUDIO_OUTPUT_DEVICE:return S.CAN_SET_OUTPUT_DEVICES;case C.Features.VIDEO:return h.BROWSER_SUPPORTS_VIDEO;case C.Features.DESKTOP_CAPTURE:return navigator.mediaDevices?.getDisplayMedia!=null;case C.Features.VOICE_PROCESSING:return\"Chrome\"===r().name;case C.Features.NATIVE_PING:case C.Features.DIAGNOSTICS:return h.BROWSER_SUPPORTS_DIAGNOSTICS;case C.Features.DESKTOP_CAPTURE_APPLICATIONS:case C.Features.LOOPBACK:case C.Features.NOISE_SUPPRESSION:case C.Features.AUTOMATIC_GAIN_CONTROL:return\"Safari\"!==r().name;case C.Features.NOISE_CANCELLATION:return _()();case C.Features.QOS:case C.Features.ATTENUATION:case C.Features.AUTOMATIC_VAD:case C.Features.LEGACY_AUDIO_SUBSYSTEM:case C.Features.EXPERIMENTAL_AUDIO_SUBSYSTEM:case C.Features.DEBUG_LOGGING:case C.Features.VOICE_PANNING:case C.Features.AUTO_ENABLE:case C.Features.DESKTOP_CAPTURE_FORMAT:case C.Features.VIDEO_HOOK:case C.Features.OPEN_H264:case C.Features.AEC_DUMP:case C.Features.DISABLE_VIDEO:case C.Features.CONNECTION_REPLAY:case C.Features.SIMULCAST:case C.Features.SCREEN_CAPTURE_KIT:default:return!1}}getAudioContext(){return null==this._audioContext&&(this._audioContext=new AudioContext),this._audioContext}connect(e,t,n){let{ssrc:i,address:r,port:o,modes:a,streamUserId:s,streamParameters:_}=n,u=(0,c.makeConnection)(e,t,this.getAudioContext(),_);return u.streamUserId=s,u.setOutputVolume(this.outputVolume),u.setSinkId(this.sinkId),u.once(E.BaseConnectionEvent.Destroy,e=>this.connections.delete(e)),u.on(E.BaseConnectionEvent.Silence,e=>this.emit(l.MediaEngineEvent.Silence,e)),u.on(E.BaseConnectionEvent.DesktopSourceEnd,this.handleDesktopSourceEnd),u.on(E.BaseConnectionEvent.AudioPermission,this.handleAudioPermission),u.on(E.BaseConnectionEvent.VideoPermission,this.handleVideoPermission),this.interacted&&u.interact(),e===C.MediaEngineContextTypes.DEFAULT&&(u.setAudioSource(this.sourceId),this.enabled&&u.input.enableAudioInput()),this.connections.add(u),this.emit(l.MediaEngineEvent.Connection,u),u}findConnection(e){return Array.from(this.connections).find(t=>null==e||t.context===e)}eachConnection(e,t){this.connections.forEach(n=>{(null==t||n.context===t)&&e(n)})}enable(){return null==this.enablePromise&&(this.enablePromise=this._enable().finally(()=>{this.enablePromise=null})),this.enablePromise}async _enable(){if(this.enabled)return;await this.getAudioContext().audioWorklet.addModule(A);let e=new T.default(this.getAudioContext());e.on(\"permission\",this.handleAudioPermission);try{await e.enable(),\"Firefox\"===r().name&&await this.handleDeviceChange(),this.enabled=!0,this.eachConnection(e=>e.input.enableAudioInput(),C.MediaEngineContextTypes.DEFAULT),this.voiceActivityInput?.enable()}finally{e.destroy()}}setInputVolume(e){}setOutputVolume(e){this.outputVolume=e,this.connections.forEach(t=>t.setOutputVolume(e))}getAudioInputDevices(){return(0,S.getAudioInputDevices)()}setAudioInputDevice(e){this.sourceId=e,this.eachConnection(t=>t.setAudioSource(e),C.MediaEngineContextTypes.DEFAULT),this.voiceActivityInput?.setSource(e),this.loopback?.setAudioSource(e)}getAudioOutputDevices(){return(0,S.getAudioOutputDevices)()}setAudioOutputDevice(e){this.sinkId=e,this.connections.forEach(t=>t.setSinkId(e)),this.loopback?.setAudioSink(e)}getVideoInputDevices(){return(0,S.getVideoInputDevices)()}setVideoInputDevice(e){this.eachConnection(t=>t.setVideoSource(e),C.MediaEngineContextTypes.DEFAULT)}getSupportedVideoCodecs(e){e([])}getCodecCapabilities(e){e(\"\")}async getDesktopSource(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=await d.default.get(e,t);return this.pendingDesktopInputs[n.id]=n,n.id}getDesktopSources(){return Promise.reject(Error(\"NO_STREAM\"))}getScreenPreviews(e,t){return Promise.reject(Error(\"UNSUPPORTED\"))}getWindowPreviews(e,t){return Promise.reject(Error(\"UNSUPPORTED\"))}setClipBufferLength(e){}saveClip(e,t){return Promise.reject(Error(\"UNSUPPORTED\"))}saveClipForUser(e,t,n){return Promise.reject(Error(\"UNSUPPORTED\"))}updateClipMetadata(e,t){return Promise.reject(Error(\"UNSUPPORTED\"))}exportClip(e,t){return Promise.reject(Error(\"UNSUPPORTED\"))}setGoLiveSource(e,t){if(null==e)this.eachConnection(e=>e.setDesktopInput(null),t);else if(null!=e.desktopDescription&&null!=this.findConnection(t)){let n=this.pendingDesktopInputs[e.desktopDescription.id];delete this.pendingDesktopInputs[e.desktopDescription.id],null!=n&&this.eachConnection(e=>e.setDesktopInput(n),t)}}setClipsSource(e){}setClipsQualitySettings(e,t,n){return!1}setSoundshareSource(e,t,n){}setAudioSubsystem(e){}getAudioSubsystem(){return C.AudioSubsystems.STANDARD}getAudioLayer(){return\"\"}getDebugLogging(){return!1}setDebugLogging(e){}writeAudioDebugState(){return Promise.reject(Error(\"Audio debug state is not supported.\"))}setExperimentalAdm(e){}setLoopback(e,t){e&&null==this.loopback?(this.enable(),this.loopback=new N.default(this.getAudioContext(),this.sourceId,this.sinkId),this.loopback.setNoiseCancellation(t.noiseCancellation)):!e&&null!=this.loopback&&(this.loopback.stop(),this.loopback=null)}getLoopback(){return null!=this.loopback}setH264Enabled(e){}setAv1Enabled(e){}setH265Enabled(e){}getCodecSurvey(){return Promise.reject(Error(\"getCodecSurvey is not implemented on MediaEngine of browsers.\"))}startAecDump(){}stopAecDump(){}setAecDump(e){}createReplayConnection(e,t){throw Error(\"Connection replay is not supported.\")}setUseDirectVideo(e){}setMaxSyncDelayOverride(e){}rankRtcRegions(e){return Promise.reject(Error(\"RTC region latency test is not supported.\"))}applyMediaFilterSettings(e){return Promise.resolve()}startLocalAudioRecording(){return Promise.reject(Error(\"startLocalAudioRecording is not supported.\"))}stopLocalAudioRecording(e){}speedTester(e,t){throw Error(\"speedTester is not supported.\")}setHasFullbandPerformance(e){}getSupportedSecureFramesProtocolVersion(){return 0}getSupportedBandwidthEstimationExperiments(e){e([])}}"
    }
}