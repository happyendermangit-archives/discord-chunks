{
    "exports": {
        "WebRTCStatsCalculator": "class o{update(e){for(let t in e.rtp.inbound)for(let n of e.rtp.inbound[t])if(\"video\"===n.type){let e=this.getInboundBytesRecevierCalculator(n),t=this.getInboundFrameDecodeRateCalculator(n);n.bitrate=e.calculate(n),n.frameRateDecode=t.calculate(n)}for(let t of e.rtp.outbound)if(\"video\"===t.type){let e=this.getOutboundBytesSentCalculator(t),n=this.getOutboundEncodeRateCalculator(t);t.bitrate=e.calculate(t),t.frameRateEncode=n.calculate(t)}}static getCalculatorOrCreate(e,t,n,i){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,o=e[t.ssrc];return null==o&&(o=new s(n,i,r),e[t.ssrc]=o),o}getInboundBytesRecevierCalculator(e){return o.getCalculatorOrCreate(this.inboundVideoBitrate,e,\"bytesReceived\",\"timestamp\",3)}getInboundFrameDecodeRateCalculator(e){return o.getCalculatorOrCreate(this.inboundDecodeFps,e,\"framesDecoded\",\"timestamp\",5)}getOutboundBytesSentCalculator(e){return o.getCalculatorOrCreate(this.outboundVideoBitrate,e,\"bytesSent\",\"timestamp\",3)}getOutboundEncodeRateCalculator(e){return o.getCalculatorOrCreate(this.outboundEncodeFps,e,\"framesEncoded\",\"timestamp\",5)}constructor(){this.inboundVideoBitrate={},this.inboundDecodeFps={},this.outboundVideoBitrate={},this.outboundEncodeFps={}}}"
    }
}