{
    "exports": {
        "makeMultiplexedTransport": "function s(t,e){return n=>{let s=t(n),o={};function l(e,s){let l=s?`${e}:${s}`:e;if(!o[l]){var u,c;let d=(0,r.dsnFromString)(e);if(!d)return;let h=(0,i.getEnvelopeEndpointWithUrlEncodedAuth)(d);o[l]=s?(u=t,c=s,t=>{let e=u(t);return{send:async t=>{let n=a(t,[\"event\",\"transaction\",\"profile\",\"replay_event\"]);return n&&(n.release=c),e.send(t)},flush:t=>e.flush(t)}})({...n,url:h}):t({...n,url:h})}return o[l]}return{send:async function t(t){let n=e({envelope:t,getEvent:function(e){return a(t,e&&e.length?e:[\"event\"])}}).map(t=>\"string\"==typeof t?l(t,void 0):l(t.dsn,t.release)).filter(t=>!!t);return 0===n.length&&n.push(s),(await Promise.all(n.map(e=>e.send(t))))[0]},flush:async function t(t){let e=[...Object.keys(o).map(t=>o[t]),s];return(await Promise.all(e.map(e=>e.flush(t)))).every(t=>t)}}}}"
    }
}