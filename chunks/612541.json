{
    "exports": {
        "default": {
            "initializedCount": 0,
            "actions": {
                "RUNNING_GAMES_CHANGE": "handleRunningGamesChange(){let e=s.default.getVisibleGame();if(null==e)return;let{canBroadcast:_}=L.default.getCurrentConfig({location:\"handle_running_games_change\"},{autoTrackExposure:!1}),E=l.default.getBroadcast(),t=(0,u.getGameName)(e),o=null!=A.default.getGameByName(t),n=(0,D.getIsBroadcastingToAnyone)();if(!_||null!=E||!S.BroadcastAutoBroadcast.getSetting()||!o||!n)return;let r=null!=d.find(_=>_.pid===e.pid);if(r)return;d=s.default.getRunningGames();let i=(0,C.getCanStartBroadcast)();if(!i)return;let I=R.default.getVoiceChannelId();(0,a.createBroadcastChannelOrStartStream)({pid:e.pid,channelId:I})}",
                "STREAM_CREATE": "handleStreamCreate(e){let{streamKey:_}=e;(0,u.startBroadcastForStream)(_,t)}",
                "STREAM_STOP": "handleStreamStop(e){let{streamKey:_}=e;if(null==t)return;let E=(0,T.decodeStreamKey)(_),{ownerId:r,channelId:i}=E;if(null==r||null==i)return;let a=N.default.getId();if(r!==a)return;let I=O.default.getChannel(i),s=null!=I&&I.isBroadcastChannel();null!=I&&r===I.ownerId&&s&&(t=null,o=null,n=null,(0,u.stopBroadcast)())}",
                "START_BROADCAST_STREAM": "handleStartBroadcastStream(e){let{options:_}=e;t=_.pid,o=_.sourceId,n=_.sourceName}",
                "CALL_CREATE": "handleCallCreate(e){let{channelId:_}=e;if(null==_||null==t&&null==o&&null==n)return;let E=N.default.getId(),r=O.default.getChannel(_);null!=r&&E===r.ownerId&&r.isBroadcastChannel()&&(0,a.startStream)(null,_,{pid:t,sourceId:o,sourceName:n})}",
                "RTC_CONNECTION_STATE": "handleRTCConnectionState(e){let{channelId:_,state:E}=e;if(E!==c.RTCConnectionStates.DISCONNECTED)return;let t=R.default.getChannelId(),o=O.default.getChannel(_);if(null==o||!o.isBroadcastChannel())return;r.default.closePrivateChannel(_,t===_,!0);let n=l.default.getBroadcast();null!=n&&o.id===n.channelId&&(0,u.stopBroadcast)()}",
                "CHANNEL_DELETE": "handleChannelDelete(e){let{channel:_}=e,E=l.default.getBroadcast();null!=E&&_.id===E.channelId&&(0,u.stopBroadcast)()}",
                "MESSAGE_CREATE": "handleMessageCreate(e){let{channelId:_,guildId:E}=e;if(null!=E)return;let t=O.default.getChannel(_);if(null==t||!t.isBroadcastChannel())return;let o=R.default.getVoiceChannelId(),n=o!==t.id;n&&(0,i.localAck)(_)}"
            },
            "stores": {
                "toJSON": "function(){return Array.from(this)}",
                "get": "function get() { [native code] }",
                "set": "function set() { [native code] }",
                "has": "function has() { [native code] }",
                "delete": "function delete() { [native code] }",
                "clear": "function clear() { [native code] }",
                "entries": "function entries() { [native code] }",
                "forEach": "function forEach() { [native code] }",
                "keys": "function keys() { [native code] }",
                "size": 0,
                "values": "function values() { [native code] }"
            },
            "handleRunningGamesChange": "handleRunningGamesChange(){let e=s.default.getVisibleGame();if(null==e)return;let{canBroadcast:_}=L.default.getCurrentConfig({location:\"handle_running_games_change\"},{autoTrackExposure:!1}),E=l.default.getBroadcast(),t=(0,u.getGameName)(e),o=null!=A.default.getGameByName(t),n=(0,D.getIsBroadcastingToAnyone)();if(!_||null!=E||!S.BroadcastAutoBroadcast.getSetting()||!o||!n)return;let r=null!=d.find(_=>_.pid===e.pid);if(r)return;d=s.default.getRunningGames();let i=(0,C.getCanStartBroadcast)();if(!i)return;let I=R.default.getVoiceChannelId();(0,a.createBroadcastChannelOrStartStream)({pid:e.pid,channelId:I})}",
            "handleStreamCreate": "handleStreamCreate(e){let{streamKey:_}=e;(0,u.startBroadcastForStream)(_,t)}",
            "handleStreamStop": "handleStreamStop(e){let{streamKey:_}=e;if(null==t)return;let E=(0,T.decodeStreamKey)(_),{ownerId:r,channelId:i}=E;if(null==r||null==i)return;let a=N.default.getId();if(r!==a)return;let I=O.default.getChannel(i),s=null!=I&&I.isBroadcastChannel();null!=I&&r===I.ownerId&&s&&(t=null,o=null,n=null,(0,u.stopBroadcast)())}",
            "handleStartBroadcastStream": "handleStartBroadcastStream(e){let{options:_}=e;t=_.pid,o=_.sourceId,n=_.sourceName}",
            "handleCallCreate": "handleCallCreate(e){let{channelId:_}=e;if(null==_||null==t&&null==o&&null==n)return;let E=N.default.getId(),r=O.default.getChannel(_);null!=r&&E===r.ownerId&&r.isBroadcastChannel()&&(0,a.startStream)(null,_,{pid:t,sourceId:o,sourceName:n})}",
            "handleRTCConnectionState": "handleRTCConnectionState(e){let{channelId:_,state:E}=e;if(E!==c.RTCConnectionStates.DISCONNECTED)return;let t=R.default.getChannelId(),o=O.default.getChannel(_);if(null==o||!o.isBroadcastChannel())return;r.default.closePrivateChannel(_,t===_,!0);let n=l.default.getBroadcast();null!=n&&o.id===n.channelId&&(0,u.stopBroadcast)()}",
            "handleChannelDelete": "handleChannelDelete(e){let{channel:_}=e,E=l.default.getBroadcast();null!=E&&_.id===E.channelId&&(0,u.stopBroadcast)()}",
            "handleMessageCreate": "handleMessageCreate(e){let{channelId:_,guildId:E}=e;if(null!=E)return;let t=O.default.getChannel(_);if(null==t||!t.isBroadcastChannel())return;let o=R.default.getVoiceChannelId(),n=o!==t.id;n&&(0,i.localAck)(_)}"
        }
    }
}