{
    "exports": {
        "disconnectEmbeddedActivity": "function v(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];s.default.dispatch({type:\"EMBEDDED_ACTIVITY_DISCONNECT\",channelId:e,applicationId:t,isRejoiningFromCurrentSession:n})}",
        "dismissNewActivityIndicator": "function j(){s.default.dispatch({type:\"EMBEDDED_ACTIVITY_DISMISS_NEW_INDICATOR\"})}",
        "fetchDeveloperApplications": "async function L(){try{s.default.dispatch({type:\"DEVELOPER_ACTIVITY_SHELF_FETCH_START\"});let e=(await a.default.get({url:A.Endpoints.APPLICATIONS,query:{with_team_applications:!0},oldFormErrors:!0})).body.map(e=>m.default.createFromServer(e));s.default.dispatch({type:\"DEVELOPER_ACTIVITY_SHELF_FETCH_SUCCESS\",items:e})}catch(e){s.default.dispatch({type:\"DEVELOPER_ACTIVITY_SHELF_FETCH_FAIL\"})}}",
        "fetchShelf": "async function k(e){let{guildId:t,force:n=!1}=e,a=g.default.getShelfActivities(t),l=a.map(e=>c.default.getApplication(e.application_id)).filter(C.isNotNullish);if(!n&&!g.default.shouldFetchShelf(t)){if(g.default.getShelfFetchStatus(t)?.isFetching){let e,n;let i=new Promise(n=>{e=b.bind(null,t,n),s.default.subscribe(\"EMBEDDED_ACTIVITY_FETCH_SHELF_SUCCESS\",e)}),a=new Promise(e=>{n=b.bind(null,t,e),s.default.subscribe(\"EMBEDDED_ACTIVITY_FETCH_SHELF_FAIL\",n)});await Promise.race([i,a]),null!=e&&(s.default.unsubscribe(\"EMBEDDED_ACTIVITY_FETCH_SHELF_SUCCESS\",e),e=null),null!=n&&(s.default.unsubscribe(\"EMBEDDED_ACTIVITY_FETCH_SHELF_FAIL\",n),n=null)}return{activityConfigs:a,applications:l}}try{s.default.dispatch({type:\"EMBEDDED_ACTIVITY_FETCH_SHELF\",guildId:t});let e=void 0!==t&&\"\"!==t?{guild_id:t}:void 0,n=await y.default.get({url:A.Endpoints.ACTIVITY_SHELF,query:e,trackedActionData:{event:i.NetworkActionNames.EMBEDDED_ACTIVITIES_FETCH_SHELF,properties:{guild_id:t}},retries:3,oldFormErrors:!0}),a=n.body.activities??[],l=n.body.applications??[],r=n.body.assets??{};return s.default.dispatch({type:\"EMBEDDED_ACTIVITY_FETCH_SHELF_SUCCESS\",guildId:t,activities:a,applications:l,assets:r}),l.length>0&&s.default.dispatch({type:\"APPLICATIONS_FETCH_SUCCESS\",applications:l}),{activityConfigs:a,applications:l.map(e=>m.default.createFromServer(e))}}catch(e){return s.default.dispatch({type:\"EMBEDDED_ACTIVITY_FETCH_SHELF_FAIL\",guildId:t}),{activityConfigs:a,applications:l}}}",
        "launchEmbeddedActivity": "async function R(e){let t=E.default.getChannel(e),n=t?.getGuildId()??void 0;if(null==n&&!t?.isPrivate())return;let a=g.default.getSelfEmbeddedActivityForChannel(e);if(null===a)return;let l=h.default.getSessionId();try{s.default.dispatch({type:\"EMBEDDED_ACTIVITY_LAUNCH_START\",embeddedActivity:a}),function(e,t){let n=E.default.getChannel(e);if(g.default.getEmbeddedActivitiesForChannel(e).some(e=>e.applicationId===t))return!1;let i=(0,S.isActivitiesInTextEnabled)(n,\"EmbeddedActivitiesActionCreators#isActivityInTextStart\");return!!(n?.type===A.ChannelTypes.GUILD_TEXT&&i||null!=n&&n.isPrivate()&&i&&null==_.default.getVoiceChannelId())||!1}(e,a.applicationId)?await (0,p.executePrimaryEntryPointInteraction)({applicationId:a.applicationId,channelId:e,guildId:n}):await y.default.post({url:A.Endpoints.ACTIVITY_CHANNEL_LAUNCH(e,a.applicationId),body:{session_id:l,guild_id:n??void 0},trackedActionData:{event:i.NetworkActionNames.EMBEDDED_ACTIVITIES_LAUNCH,properties:{guild_id:n,channel_id:e,application_id:a.applicationId,session_id:l}},retries:3,oldFormErrors:!0}),s.default.dispatch({type:\"EMBEDDED_ACTIVITY_LAUNCH_SUCCESS\"})}catch(t){s.default.dispatch({type:\"EMBEDDED_ACTIVITY_LAUNCH_FAIL\",guildId:n,applicationId:a.applicationId,error:new d.default(t)}),M({channelId:e,applicationId:a.applicationId,showFeedback:!1})}}",
        "sendEmbeddedActivityInvite": "async function D(e){let{activityChannelId:t,invitedChannelId:n,applicationId:i,location:a}=e,s=await o.default.createInvite(t,{target_type:N.InviteTargetTypes.EMBEDDED_APPLICATION,target_application_id:i},a);null!=E.default.getChannel(n)&&u.default.sendInvite(n,s.code,a,null)}",
        "sendEmbeddedActivityInviteUser": "async function U(e){let{channelId:t,applicationId:n,userId:i,location:a}=e,s=await o.default.createInvite(t,{target_type:N.InviteTargetTypes.EMBEDDED_APPLICATION,target_application_id:n},a);l.default.ensurePrivateChannel(i).then(e=>{null!=E.default.getChannel(e)&&u.default.sendInvite(e,s.code,a,null)})}",
        "startEmbeddedActivity": "function O(e,t,n){let i=h.default.getId(),a=g.default.getSelfEmbeddedActivityForChannel(e),l=g.default.getEmbeddedActivitiesForChannel(e).find(e=>e.applicationId===t&&e.userIds.has(i));null!=a?M({channelId:e,applicationId:a.applicationId,showFeedback:!1}):null!=l&&v(e,t,!0),s.default.dispatch({type:\"EMBEDDED_ACTIVITY_OPEN\",channelId:e,applicationId:t,analyticsLocations:n}),(0,T.default)(e)?(r.default.selectParticipant(e,t),r.default.updateLayout(e,A.ChannelLayouts.NO_CHAT)):(0,x.default)(e)}",
        "stopEmbeddedActivity": "function M(e){let{channelId:t,applicationId:n,showFeedback:i=!0}=e;s.default.dispatch({type:\"EMBEDDED_ACTIVITY_CLOSE\",channelId:t,applicationId:n,showFeedback:i});let a=f.default.getSelectedParticipantId(t),l=I.default.getCurrentUser()?.id;null!=g.default.getEmbeddedActivitiesForChannel(t).find(e=>e.applicationId===n)&&null!=l&&\"\"!==l&&a===n&&r.default.selectParticipant(t,null)}",
        "updateActivityPanelMode": "function F(e){s.default.dispatch({type:\"EMBEDDED_ACTIVITY_SET_PANEL_MODE\",activityPanelMode:e})}",
        "updateFocusedActivityLayout": "function G(e){s.default.dispatch({type:\"EMBEDDED_ACTIVITY_SET_FOCUSED_LAYOUT\",focusedActivityLayout:e})}",
        "uploadImageAttachment": "async function P(e,t,n){try{s.default.dispatch({type:\"UPLOAD_ACTIVITY_IMAGE_ATTACHMENT_START\"});let i=await a.default.post({url:A.Endpoints.ACTIVITY_UPLOAD_ATTACHMENT(e),query:{channel_id:t},attachments:[{name:\"file\",file:n}]});return s.default.dispatch({type:\"UPLOAD_ACTIVITY_IMAGE_ATTACHMENT_SUCCESS\",attachment:i.body.attachment}),i.body.attachment}catch(e){return s.default.dispatch({type:\"UPLOAD_ACTIVITY_IMAGE_ATTACHMENT_FAIL\"}),new d.default(e)}}",
        "validateTestMode": "async function w(e){let t=A.Endpoints.ACTIVITY_TEST_MODE(e);try{return await a.default.get({url:t,oldFormErrors:!0}),!0}catch(e){return!1}}"
    }
}