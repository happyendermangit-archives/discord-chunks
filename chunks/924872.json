{
    "exports": {
        "useShowStageMusicMuteButton": "function g(e){let t=(0,a.useStateFromStores)([l.default],()=>l.default.getVoiceChannelId()===e),n=(0,c.useStageParticipants)(e,f.StageChannelParticipantNamedIndex.SPEAKER),r=null!=n.find(e=>!e.voiceState.isVoiceMuted()),s=(0,a.useStateFromStores)([h.default],()=>h.default.getStageInstanceByChannel(e));return t&&null==s&&!r}",
        "shouldShowStageMusicMuteButton": "function _(e){let t=l.default.getVoiceChannelId()===e,n=d.default.getMutableParticipants(e,f.StageChannelParticipantNamedIndex.SPEAKER),a=null!=n.find(e=>!e.voiceState.isVoiceMuted()),r=h.default.getStageInstanceByChannel(e);return t&&null==r&&!a}",
        "default": {
            "initializedCount": 0,
            "actions": {
                "VOICE_CHANNEL_SELECT": "handleVoiceChannelSelect(e){let{channelId:t}=e;if(null!=t){let e=s.default.getChannel(t);(null==e?void 0:e.isGuildStageVoice())?S():(m.stop(),C=!1)}else m.stop(),C=!1}",
                "LOGOUT": "handleLogout(){m.stop(),C=!1}",
                "STAGE_MUSIC_MUTE": "handleMute(e){let{muted:t}=e;t?(m.pause(),C=!1):S()}",
                "STAGE_MUSIC_PLAY": "handlePlay(e){let{play:t}=e;t?S():(m.pause(),C=!1)}",
                "VOICE_STATE_UPDATES": "handleVoiceStateUpdates(){S()}",
                "AUDIO_SET_OUTPUT_VOLUME": "handleSetOutputVolume(e){let{volume:t}=e;m.volume=p(t)}",
                "AUDIO_TOGGLE_SELF_DEAF": "handleToggleSelfDeaf(){S()}"
            },
            "stores": {
                "toJSON": "function(){return Array.from(this)}",
                "get": "function get() { [native code] }",
                "set": "function set() { [native code] }",
                "has": "function has() { [native code] }",
                "delete": "function delete() { [native code] }",
                "clear": "function clear() { [native code] }",
                "entries": "function entries() { [native code] }",
                "forEach": "function forEach() { [native code] }",
                "keys": "function keys() { [native code] }",
                "size": 0,
                "values": "function values() { [native code] }"
            },
            "handleVoiceChannelSelect": "handleVoiceChannelSelect(e){let{channelId:t}=e;if(null!=t){let e=s.default.getChannel(t);(null==e?void 0:e.isGuildStageVoice())?S():(m.stop(),C=!1)}else m.stop(),C=!1}",
            "handleLogout": "handleLogout(){m.stop(),C=!1}",
            "handlePlay": "handlePlay(e){let{play:t}=e;t?S():(m.pause(),C=!1)}",
            "handleMute": "handleMute(e){let{muted:t}=e;t?(m.pause(),C=!1):S()}",
            "handleVoiceStateUpdates": "handleVoiceStateUpdates(){S()}",
            "handleSetOutputVolume": "handleSetOutputVolume(e){let{volume:t}=e;m.volume=p(t)}",
            "handleToggleSelfDeaf": "handleToggleSelfDeaf(){S()}"
        }
    }
}