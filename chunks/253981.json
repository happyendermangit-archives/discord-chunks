{
    "exports": {
        "default": {
            "URL_REGEX": {
                "exec": "function exec() { [native code] }",
                "dotAll": false,
                "flags": "gi",
                "global": true,
                "hasIndices": false,
                "ignoreCase": true,
                "multiline": false,
                "source": "(?:(?:(?:[a-z]+:)?\\/\\/)|www\\.)(?:\\S+(?::\\S*)?@)?(?:localhost|(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?:[a-z\\u00a1-\\uffff0-9-_]+\\.)+(?:(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:[/?#][^\\s\"]*)?",
                "sticky": false,
                "unicode": false,
                "compile": "function compile() { [native code] }",
                "test": "function test() { [native code] }",
                "unicodeSets": false
            },
            "isDiscordHostname": "function O(e){var _;let E=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(null==e)return!1;return I.test(e)||E&&(_=e,N.has(_.toLowerCase()))}",
            "isDiscordLocalhost": "function(e,_){return null!=e&&null!=_&&(window.location.host===e||!1)}",
            "isDiscordProtocol": "function A(e){return null!=e&&\"discord:\"===e}",
            "isDiscordUrl": "function R(e){let _=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return null!=e&&O(i.parse(e).hostname,_)}",
            "isDiscordUri": "function l(e){return null!=e&&A(i.parse(e).protocol)}",
            "isDiscordCdnUrl": "function(e){return null!=e&&i.parse(e).hostname===window.GLOBAL_ENV.CDN_HOST}",
            "isDiscordUrlOrUri": "e=>R(e)||l(e)",
            "isAppRoute": "e=>{let _=e.toLowerCase();return _.startsWith(\"/channels/\")||_.startsWith(a.Routes.APPLICATION_STORE)||_.startsWith(a.Routes.APPLICATION_LIBRARY)||_.startsWith(a.Routes.MESSAGE_REQUESTS)||_.startsWith(a.Routes.ACTIVITIES)||_.startsWith(a.Routes.COLLECTIBLES_SHOP)||_.startsWith(a.Routes.ACTIVITY)}",
            "format": "e=>i.format(e)",
            "formatPathWithQuery": "(e,_)=>i.format({pathname:e,query:r.pickBy(_)})",
            "formatSearch": "e=>i.format({query:r.pickBy(e)})",
            "safeParseWithQuery": "safeParseWithQuery(e){try{return i.parse(e,!0)}catch(e){return null}}",
            "toURLSafe": "toURLSafe(e,_){try{return new URL(e,_)}catch(e){return null}}",
            "makeUrl": "function(e){let _=__DEV__?window.GLOBAL_ENV.INVITE_HOST:location.host;return\"\".concat(location.protocol,\"//\").concat(_).concat(e)}"
        }
    }
}