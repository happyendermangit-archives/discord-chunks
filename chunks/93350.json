{
    "exports": {
        "TimeUnits": {
            "NONE": "NONE",
            "SECONDS": "SECONDS",
            "MINUTES": "MINUTES",
            "HOURS": "HOURS",
            "DAYS": "DAYS",
            "WEEKS": "WEEKS",
            "MONTHS": "MONTHS",
            "YEARS": "YEARS"
        },
        "default": "class extends d.PureComponent{static #e=this.Locations=i;static #t=this.Types=s;componentDidMount(){this.timer.start(1e4,this.update)}componentDidUpdate(e){let{start:t,end:n,time:i}=this.props;(e.start!==t||e.end!==n||e.time!==i)&&this.update()}componentWillUnmount(){this.timer.stop()}getDiff(){let{start:e,end:t,time:n}=this.props;if(null!=n)return n/1e3/60;let i=Date.now(),a=0;return null!=e?a=i-e:null!=t&&(a=i-t),Math.abs(a)/1e3/60}getTimeUnit(e,t,n){let i=C(e,e=>(function(e,t,n){let i=I[n];if(null!=i){let n=i[t];if(null!=n)return null!=n[e]}return!1})(e,n,t));if(null==i)throw Error(`Could not get the time unit in PlayTime with time: ${e} for type: ${n} in location: ${t}`);return i}getType(){let{start:e,end:t,time:n}=this.props;if(null!=e)return\"START\";if(null!=t)return\"END\";if(null!=n)return\"TIME\";return null}transformTime(e,t){return h[e](t)}render(){let{location:t,messageProps:n,isApplicationStreaming:i,...a}=this.props,{time:s}=this.state,l=this.getType();if(null==l)return null;let r=this.getTimeUnit(s,t,l),o=I[t][l];if(null==o)return null;let d=o[r],c=Math.floor(this.transformTime(r,s));return(0,u.jsx)(e,{...a,children:d?.(c,n,i)})}constructor(...e){super(...e),this.timer=new p.Interval,this.state={time:this.getDiff()},this.update=()=>{this.setState({time:this.getDiff()})}}}",
        "getTimeAndUnit": "function y(e,t){let n=null!=e?C(e,e=>t.includes(e)):\"NONE\",i=null!=n?h[n]:null;return{unit:n,time:null!=e&&null!=i?Math.floor(i(e)):null}}"
    }
}