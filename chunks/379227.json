{
    "exports": {
        "NativePermissionBaseUtils": "class E{async requestAuthorization(e,t,n){if(\"function\"!=typeof t)throw Error(`requestAuthorization: Was provided with not a function for ${e}.`);i.default.track(s.AnalyticEvents.PERMISSIONS_REQUESTED,{type:e});let o=await t()===a.NativePermissionStatus.AUTHORIZED,_=o?a.NativePermissionStates.ACCEPTED:a.NativePermissionStates.DENIED;return r.default.setPermission(e,_),!o&&n.showAuthorizationError&&this.showAlert(e),o}requestPermission(e,t){let n=E.defaultNativePermissionsRequestOptions(t);return this.requestPermissionCore(e,n)}hasPermission(e,t){let n=E.defaultNativePermissionsRequestOptions(t);return this.hasPermissionCore(e,n)}showAlert(e){let t={[a.NativePermissionTypes.CAMERA]:`${_.default.Messages.NO_CAMERA_ACCESS}. ${_.default.Messages.ENABLE_PRIVACY_ACCESS}`,[a.NativePermissionTypes.AUDIO]:`${_.default.Messages.NO_MICRPHONE_ACCESS}. ${_.default.Messages.ENABLE_PRIVACY_ACCESS}`,[a.NativePermissionTypes.PHOTOS]:`${_.default.Messages.NO_PHOTOS_ACCESS}. ${_.default.Messages.ENABLE_PRIVACY_ACCESS}`,[a.NativePermissionTypes.INPUT_MONITORING]:`${_.default.Messages.NO_INPUT_MONITORING_ACCESS}. ${_.default.Messages.ENABLE_PRIVACY_ACCESS}`,[a.NativePermissionTypes.CONTACTS]:`${_.default.Messages.NO_CONTACTS_ACCESS}. ${_.default.Messages.ENABLE_PRIVACY_ACCESS}`}[e];null!=t&&this.openAlertModal({title:_.default.Messages.SYSTEM_PERMISSION_GRANT,body:t,onConfirm:()=>this.openSettings(e),cancelText:_.default.Messages.CANCEL,confirmText:_.default.Messages.DEVICE_SETTINGS})}static defaultNativePermissionsRequestOptions(e){let t={showAuthorizationError:!0};return null==e?t:{...t,...e}}constructor(){this.storage=new o.default}}"
    }
}