{
    "exports": {
        "default": {
            "instance": {
                "mode": null,
                "applications": [],
                "director": {
                    "callback": "e=>this._onDirectorAction(e)",
                    "active": false,
                    "application": null,
                    "onStreamBegin": "onStreamBegin(e,a){let t=(0,n.getInitialStreamTarget)(e,a);null==t||null==t.windowHandle?this.callback({type:\"stop\"}):this._stream(t)}",
                    "onStreamKilled": "onStreamKilled(){this._kill()}",
                    "onStreamEnd": "onStreamEnd(){this._stop()}",
                    "onDetectionUpdate": "onDetectionUpdate(e){this._update(e)}",
                    "onCaptureEnd": "onCaptureEnd(e,a){var t;(null===(t=this.application)||void 0===t?void 0:t.windowHandle)===a&&this._update(e)}",
                    "onCaptureLegacyEnd": "onCaptureLegacyEnd(e){var a;return(null===(a=this.application)||void 0===a?void 0:a.windowHandle)!=null?this.onCaptureEnd(e,this.application.windowHandle):this._stop()}",
                    "_update": "_update(e){let a=(0,n.getStreamTarget)(e,this.application);if(null!=a)return null==a.windowHandle?this._pause():this._stream(a);this._stop()}",
                    "_stream": "_stream(e){var a;let t=(null===(a=this.application)||void 0===a?void 0:a.windowHandle)!==e.windowHandle;this.active=!0,this.application=Object.assign({},e),t&&this.callback({type:\"stream\",sourceId:\"window:\".concat(this.application.windowHandle)})}",
                    "_kill": "_kill(){this.active=!1,this.application=null}",
                    "_stop": "_stop(){this.active&&(this._kill(),this.callback({type:\"stop\"}))}",
                    "_pause": "_pause(){this.active&&(this.application.windowHandle=null,this.callback({type:\"pause\"}))}"
                },
                "_onGameDetectionUpdate": "_onGameDetectionUpdate(e){this.applications=e.map(e=>{var a,t;return{applicationId:null!==(a=e.id)&&void 0!==a?a:null,processId:e.pid,processPath:e.pidPath,windowHandle:null!==(t=e.windowHandle)&&void 0!==t?t:null,executableName:e.exeName}}),\"verbatim-source\"!==this.mode&&this.director.onDetectionUpdate(this.applications)}",
                "_onStreamApplication": "_onStreamApplication(e,a){this.mode=\"application\",this.streamKey=e,this.director.onStreamBegin(this.applications,a)}",
                "_onStreamDirectSource": "_onStreamDirectSource(e,a,t,s){this.mode=\"verbatim-source\",this.streamKey=e,this._onDirectorAction({type:i.StreamDirectorActionType.STREAM,sourceId:a,audioSourceId:t,sound:s})}",
                "_onStreamEnd": "_onStreamEnd(e){if(this.streamKey===e)switch(this.streamKey=null,this.mode){case\"application\":this.director.onStreamEnd();break;case\"verbatim-source\":this._onDirectorAction({type:i.StreamDirectorActionType.STOP});break;default:var a;throw Error(\"unknown streaming mode: \".concat(null!==(a=this.mode)&&void 0!==a?a:\"(none)\"))}}",
                "_onStreamKilled": "_onStreamKilled(e){if(this.streamKey===e)switch(this.streamKey=null,this.mode){case\"application\":this.director.onStreamKilled();break;case\"verbatim-source\":break;default:var a;throw Error(\"unknown streaming mode: \".concat(null!==(a=this.mode)&&void 0!==a?a:\"(none)\"))}}",
                "_onDirectorAction": "_onDirectorAction(e){let a=o.default.getCurrentUserActiveStream(),t=r.default.getState();switch(e.type){case i.StreamDirectorActionType.STREAM:if(null!=a&&(0,n.setStreamPaused)(a,!1),e.sourceId.startsWith(\"camera\")&&null!=e.audioSourceId){let a=e.sourceId.split(\":\"),s=a[1];d.default.setGoLiveSource({cameraSettings:{videoDeviceGuid:s,audioDeviceGuid:e.audioSourceId},qualityOptions:{preset:t.preset,resolution:t.resolution,frameRate:t.fps},context:b.MediaEngineContextTypes.STREAM})}else{var s;d.default.setGoLiveSource({desktopSettings:{sourceId:e.sourceId,sound:null===(s=e.sound)||void 0===s||s},qualityOptions:{preset:t.preset,resolution:t.resolution,frameRate:t.fps},context:b.MediaEngineContextTypes.STREAM})}break;case i.StreamDirectorActionType.PAUSE:null!=a&&(0,n.setStreamPaused)(a,!0);break;case i.StreamDirectorActionType.STOP:null!=a&&(0,u.default)(a);break;default:throw Error(\"unhandled stream action: \".concat(e.type))}}",
                "_onCapturePaused": "_onCapturePaused(e){let a=o.default.getCurrentUserActiveStream();null!=a&&(0,n.setStreamPaused)(a,e)}",
                "_onCaptureEnded": "_onCaptureEnded(){switch(this.mode){case\"application\":this._onCapturePaused(!0);break;case\"verbatim-source\":null!=this.streamKey&&this._onStreamEnd(this.streamKey);break;default:var e;throw Error(\"unknown streaming mode: \".concat(null!==(e=this.mode)&&void 0!==e?e:\"(none)\"))}}"
            },
            "init": "init(){null==this.instance&&(this.instance=new h)}"
        }
    }
}