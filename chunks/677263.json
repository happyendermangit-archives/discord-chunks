{
    "exports": {
        "useNumberFieldState": "function i(e){let{minValue:t,maxValue:n,step:i,formatOptions:s,value:l,defaultValue:c,onChange:d,locale:f,isDisabled:p,isReadOnly:h}=e,[m,y]=(0,r.useControlledState)(l,isNaN(c)?NaN:c,d),[v,g]=(0,o.useState)(()=>isNaN(m)?\"\":new a.NumberFormatter(f,s).format(m)),b=(0,o.useMemo)(()=>new a.NumberParser(f,s),[f,s]),_=(0,o.useMemo)(()=>b.getNumberingSystem(v),[b,v]),w=(0,o.useMemo)(()=>new a.NumberFormatter(f,{...s,numberingSystem:_}),[f,s,_]),x=(0,o.useMemo)(()=>w.resolvedOptions(),[w]),D=(0,o.useCallback)(e=>isNaN(e)||null===e?\"\":w.format(e),[w]),k=isNaN(i)?1:i;\"percent\"===x.style&&isNaN(i)&&(k=.01);let[M,S]=(0,o.useState)(m),[T,E]=(0,o.useState)(f),[L,C]=(0,o.useState)(s);(!Object.is(m,M)||f!==T||s!==L)&&(g(D(m)),S(m),E(f),C(s));let P=(0,o.useMemo)(()=>b.parse(v),[b,v]),O=(e,a)=>{if(isNaN(P)){let e=isNaN(a)?0:a;return(0,r.snapValueToStep)(e,t,n,k)}{let a=(0,r.snapValueToStep)(P,t,n,k);return\"+\"===e&&a>P||\"-\"===e&&a<P?a:(0,r.snapValueToStep)(u(e,P,k),t,n,k)}},A=(0,o.useMemo)(()=>!p&&!h&&(isNaN(P)||isNaN(n)||(0,r.snapValueToStep)(P,t,n,k)>P||u(\"+\",P,k)<=n),[p,h,t,n,k,P]),R=(0,o.useMemo)(()=>!p&&!h&&(isNaN(P)||isNaN(t)||(0,r.snapValueToStep)(P,t,n,k)<P||u(\"-\",P,k)>=t),[p,h,t,n,k,P]);return{validate:e=>b.isValidPartialNumber(e,t,n),increment:()=>{let e=O(\"+\",t);e===m&&g(D(e)),y(e)},incrementToMax:()=>{null!=n&&y((0,r.snapValueToStep)(n,t,n,k))},decrement:()=>{let e=O(\"-\",n);e===m&&g(D(e)),y(e)},decrementToMin:()=>{null!=t&&y(t)},canIncrement:A,canDecrement:R,minValue:t,maxValue:n,numberValue:P,setNumberValue:y,setInputValue:g,inputValue:v,commit:()=>{let e;if(!v.length){y(NaN),g(void 0===l?\"\":D(m));return}if(isNaN(P)){g(D(m));return}e=isNaN(i)?(0,r.clamp)(P,t,n):(0,r.snapValueToStep)(P,t,n,i),y(e=b.parse(D(e))),g(D(void 0===l?e:m))}}}"
    }
}