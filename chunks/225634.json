{
    "exports": {
        "default": {
            "init": "init(e,t,n,a){i.default.dispatch({type:\"GUILD_SETTINGS_INIT\",guildId:e,section:t,subsection:a,location:n})}",
            "open": "async open(e,t,a,l){await n.el(\"225634@2088:2117\").then(n.bind(n,\"63453\")),h.default.getGuild(e)?.hasFeature(p.GuildFeatures.COMMUNITY)&&(t===p.GuildSettingsSections.GUILD_AUTOMOD&&(t=p.GuildSettingsSections.SAFETY,l=p.GuildSettingsSubsections.SAFETY_AUTOMOD),t===p.GuildSettingsSections.MEMBER_VERIFICATION&&(t=p.GuildSettingsSections.SAFETY,l=p.GuildSettingsSubsections.SAFETY_DM_AND_SPAM_PROTECTION)),I.init(e,t,a,l),(0,r.pushLayer)(p.Layers.GUILD_SETTINGS)}",
            "close": "close(){i.default.dispatch({type:\"GUILD_SETTINGS_CLOSE\"})}",
            "saveRouteStack": "saveRouteStack(e){i.default.dispatch({type:\"GUILD_SETTINGS_SAVE_ROUTE_STACK\",state:e})}",
            "setSection": "setSection(e,t){let n=m.default.getGuildId();null!=n&&(h.default.getGuild(n)?.hasFeature(p.GuildFeatures.COMMUNITY)&&(e===p.GuildSettingsSections.GUILD_AUTOMOD&&(e=p.GuildSettingsSections.SAFETY,t=p.GuildSettingsSubsections.SAFETY_AUTOMOD),e===p.GuildSettingsSections.MEMBER_VERIFICATION&&(e=p.GuildSettingsSections.SAFETY,t=p.GuildSettingsSubsections.SAFETY_DM_AND_SPAM_PROTECTION)),i.default.dispatch({type:\"GUILD_SETTINGS_SET_SECTION\",section:e,subsection:t}))}",
            "setSearchQuery": "setSearchQuery(e){i.default.dispatch({type:\"GUILD_SETTINGS_SET_SEARCH_QUERY\",searchQuery:e})}",
            "selectRole": "(e,t)=>i.default.dispatch({type:\"GUILD_SETTINGS_ROLE_SELECT\",roleId:e,searchQuery:t})",
            "updateEmbed": "updateEmbed(e,t,n){l.default.patch({url:p.Endpoints.GUILD_WIDGET(e),body:{enabled:t,channel_id:n},oldFormErrors:!0}).then(t=>{i.default.dispatch({type:\"GUILD_SETTINGS_SET_WIDGET\",guildId:e,enabled:t.body.enabled,channelId:t.body.channel_id})})}",
            "updateMFALevel": "updateMFALevel(e){let{guildId:t,level:n,isEnabled:a}=e;return(0,g.default)(e=>l.default.post({url:p.Endpoints.GUILD_MFA(t),body:{level:n,...e},oldFormErrors:!0}),{modalProps:{title:T.default.Messages.GUILD_SECURITY_REQ_MFA_LABEL,actionText:a?T.default.Messages.GUILD_SECURITY_REQ_MFA_TURN_OFF:T.default.Messages.GUILD_SECURITY_REQ_MFA_TURN_ON},checkEnabled:!1}).then(e=>i.default.dispatch({type:\"GUILD_SETTINGS_SET_MFA_SUCCESS\",level:e.body.level}))}",
            "updateIcon": "updateIcon(e,t){l.default.patch({url:p.Endpoints.GUILD(e),body:{icon:t},oldFormErrors:!0}).then(()=>{i.default.dispatch({type:\"GUILD_SETTINGS_UPDATE\",icon:t}),o.default.checkGuildTemplateDirty(e)},e=>i.default.dispatch({type:\"GUILD_SETTINGS_SUBMIT_FAILURE\",errors:e.body}))}",
            "cancelChanges": "cancelChanges(e){i.default.dispatch({type:\"GUILD_SETTINGS_CANCEL_CHANGES\",guildId:e})}",
            "updateGuild": "updateGuild(e){let{safetyAlertsChannelId:t,...n}=e,a={...n},l=m.default.getGuildId();null!=l&&u.RaidAlertExperiment.getCurrentConfig({guildId:l,location:\"be0372_1\"})?.enableRaidAlerts&&null!=t&&(a.safetyAlertsChannelId=t),i.default.dispatch({type:\"GUILD_SETTINGS_UPDATE\",...a})}",
            "saveGuild": "saveGuild(e,t){let{name:n,description:a,icon:r,splash:s,banner:u,homeHeader:d,afkChannelId:c,afkTimeout:f,systemChannelId:E,verificationLevel:_,defaultMessageNotifications:h,explicitContentFilter:g,features:S,systemChannelFlags:m,preferredLocale:T,rulesChannelId:I,safetyAlertsChannelId:C,discoverySplash:M,publicUpdatesChannelId:N,premiumProgressBarEnabled:R}=t,L=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},O={name:n,description:a,icon:r,splash:s,banner:u,home_header:d,features:S,preferred_locale:T,afk_channel_id:c,afk_timeout:f,system_channel_id:E,verification_level:_,default_message_notifications:h,explicit_content_filter:g,system_channel_flags:m,rules_channel_id:I,discovery_splash:M,public_updates_channel_id:N,safety_alerts_channel_id:C,...null!=R?{premium_progress_bar_enabled:R}:null};return i.default.dispatch({type:\"GUILD_SETTINGS_SUBMIT\"}),l.default.patch({url:p.Endpoints.GUILD(e),query:{for_discovery:L.isForDiscovery},body:O,oldFormErrors:!0}).then(t=>{i.default.dispatch({type:\"GUILD_SETTINGS_SUBMIT_SUCCESS\",guild:t.body}),o.default.checkGuildTemplateDirty(e)},e=>{if(i.default.dispatch({type:\"GUILD_SETTINGS_SUBMIT_FAILURE\",errors:e.body}),A.error(\"Failed to save guild settings\",{errors:e.body}),L.throwErr)throw e.body})}",
            "updateGuildModeration": "(e,t)=>l.default.patch({url:p.Endpoints.GUILD(e),body:{verification_level:t.verificationLevel,explicit_content_filter:t.explicitContentFilter},oldFormErrors:!0}).then(t=>(o.default.checkGuildTemplateDirty(e),t))",
            "transferOwnership": "transferOwnership(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;return(0,g.default)(i=>S.default.patch({url:p.Endpoints.GUILD(e),body:{owner_id:t,code:l,...i},oldFormErrors:!0,trackedActionData:{event:a.NetworkActionNames.GUILD_TRANSFER_OWNERSHIP,properties:{guild_id:e,verification_type:n}}}),{modalProps:{title:T.default.Messages.TRANSFER_OWNERSHIP,actionText:T.default.Messages.TRANSFER_OWNERSHIP},checkEnabled:!1})}",
            "sendTransferOwnershipPincode": "sendTransferOwnershipPincode(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return S.default.put({url:p.Endpoints.GUILD_PINCODE(e),oldFormErrors:!0,trackedActionData:{event:a.NetworkActionNames.GUILD_TRANSFER_OWNERSHIP_SEND_CODE,properties:{guild_id:e,is_resend:t}}})}",
            "deleteGuild": "(e,t)=>(0,g.default)(t=>l.default.post({url:p.Endpoints.GUILD_DELETE(e),body:t,oldFormErrors:!0}),{modalProps:{title:T.default.Messages.DELETE_SERVER_TITLE.format({name:t}),actionText:T.default.Messages.DELETE_SERVER,disallowBackupCodes:!0},checkEnabled:!1}).then(()=>{I.close()})",
            "leaveGuild": "async leaveGuild(e){await l.default.delete({url:p.Endpoints.GUILD_LEAVE(e),body:{lurking:f.default.isLurking(e)||_.default.isCurrentUserGuest(e)},oldFormErrors:!0}),I.close()}",
            "updateMemberRoles": "async updateMemberRoles(e,t,n,a,r){if(c.default.isFullServerPreview(e)&&t===E.default.getId()){(0,d.updateImpersonatedRoles)(e,n);return}await l.default.patch({url:p.Endpoints.GUILD_MEMBER(e,t),body:{roles:n},oldFormErrors:!0}),a.forEach(n=>i.default.dispatch({type:\"GUILD_ROLE_MEMBER_ADD\",guildId:e,roleId:n,userId:t})),r.forEach(n=>i.default.dispatch({type:\"GUILD_ROLE_MEMBER_REMOVE\",guildId:e,roleId:n,userId:t}))}",
            "bulkAddMemberRoles": "(e,t,n)=>l.default.patch({url:p.Endpoints.GUILD_ROLE_MEMBERS(e,t),body:{member_ids:n}}).then(n=>{i.default.dispatch({type:\"GUILD_ROLE_MEMBER_BULK_ADD\",guildId:e,roleId:t,added:n.body})})",
            "updateRolesEditSection": "updateRolesEditSection(e){i.default.dispatch({type:\"GUILD_SETTINGS_ROLES_EDIT_SECTION_UPDATE\",section:e})}",
            "enableIntegration": "(e,t,n)=>l.default.post({url:p.Endpoints.GUILD_INTEGRATIONS(e),body:{type:t,id:n},oldFormErrors:!0})",
            "disableIntegration": "(e,t)=>l.default.delete({url:p.Endpoints.GUILD_INTEGRATION(e,t),oldFormErrors:!0})",
            "updateIntegration": "(e,t,n,a,i)=>l.default.patch({url:p.Endpoints.GUILD_INTEGRATION(e,t),body:{expire_behavior:n,expire_grace_period:a,enable_emoticons:i},oldFormErrors:!0})",
            "syncIntegration": "syncIntegration(e,t){l.default.post({url:p.Endpoints.GUILD_INTEGRATION_SYNC(e,t),oldFormErrors:!0})}"
        }
    }
}