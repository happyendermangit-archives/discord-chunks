{
    "exports": {
        "LoadState": {
            "0": "NOT_LOADED",
            "1": "LOADING",
            "2": "LOADED",
            "3": "ERROR",
            "NOT_LOADED": 0,
            "LOADING": 1,
            "LOADED": 2,
            "ERROR": 3
        },
        "useFetchListingsForApplication": "function(t,e){let{refetchOnMount:n=!1}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},u=(0,l.useStateFromStores)([p.default],()=>null!=t?p.default.getSubscriptionGroupListingsForApplicationFetchState(t):p.FetchState.FETCHED,[t]);return r.useEffect(()=>{if(null==t||null==e)return;let u=p.default.getSubscriptionGroupListingsForApplicationFetchState(t);(n||u===p.FetchState.NOT_FETCHED)&&(0,I.fetchAllSubscriptionListingsDataForApplication)(t,e)},[t,e,n]),{listingsLoaded:u===p.FetchState.FETCHED}}",
        "useFetchEntitlementsForGuild": "t=>{let{guildId:e,canFetch:n=!0,forceRefetch:u=!1}=t,i=(0,l.useStateFromStores)([p.default],()=>null!=e?p.default.getEntitlementsForGuildFetchState(e):null,[e]);return r.useEffect(()=>{if(null==e||e===P.ME)return;let t=p.default.getEntitlementsForGuildFetchState(e);n&&(t===p.FetchState.NOT_FETCHED||u)&&(0,I.fetchEntitlementsForGuild)(e)},[e,n,u]),{entitlementsLoaded:i===p.FetchState.FETCHED}}",
        "useSubscriptionListingsForGroup": "function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{includeSoftDeleted:!1};return(0,l.useStateFromStoresArray)([p.default],()=>{if(null==t)return[];let n=p.default.getSubscriptionGroupListing(t);if(null==n)return[];let u=[];for(let t of n.subscription_listings_ids){let n=p.default.getSubscriptionListing(t);if(null!=n)(!n.soft_deleted||e.includeSoftDeleted)&&u.push(n)}return u},[t,e.includeSoftDeleted])}",
        "useActiveSubscriptionListingForApplication": "function F(t,e){let n=(0,l.useStateFromStores)([d.default],()=>d.default.getSubscriptions()),{subscriptionGroupListing:u,guildEntitlements:i,userEntitlements:a}=(0,l.useStateFromStoresObject)([p.default,f.default],()=>{var n,u;return{subscriptionGroupListing:null!=t?p.default.getSubscriptionGroupListingForApplication(t):null,guildEntitlements:null!=t&&null!=e?p.default.getApplicationEntitlementsForGuild(t,e):M,userEntitlements:null!=t&&null!==(u=null===(n=f.default.getForApplication(t))||void 0===n?void 0:n.values())&&void 0!==u?u:O}},[t,e]),o=r.useMemo(()=>[...i,...a],[i,a]),s=null==u?void 0:u.subscription_listings,{activeSubscriptionListing:c,activeEntitlement:S}=r.useMemo(()=>{if(null!=s){for(let t of o)for(let n of s)if((0,C.isListingActiveInGuild)(n,t,e))return{activeSubscriptionListing:n,activeEntitlement:t}}return{activeSubscriptionListing:null,activeEntitlement:null}},[o,s,e]),E=r.useMemo(()=>{if(null==n)return null;let t=null==c?void 0:c.subscription_plans[0].id;for(let e of Object.values(n))if(e.type===P.SubscriptionTypes.APPLICATION){let n=e.items[0].planId;if(n===t)return e}return null},[c,n]);return{activeSubscription:E,activeSubscriptionListing:c,activeEntitlement:S,subscriptionGroupListing:u}}",
        "useUnseenEndedApplicationSubscriptionEntitlements": "function h(t){var e;let n=null!==(e=null==t?void 0:t.id)&&void 0!==e?e:P.EMPTY_STRING_SNOWFLAKE_ID,u=(0,l.useStateFromStores)([S.default],()=>S.default.can(P.Permissions.ADMINISTRATOR,t)),{entitlementsLoaded:i}=R({guildId:n,canFetch:u}),a=(0,l.useStateFromStores)([T.default],()=>T.default.getLastGuildDismissedTime(n)),o=(0,l.useStateFromStoresArray)([p.default],()=>{let t=p.default.getEntitlementsForGuild(n),e=p.default.getEntitlementsForGuild(n,!1),u=t.map(t=>t.applicationId);return e.filter(t=>!u.includes(t.applicationId))}),s=(0,l.useStateFromStoresObject)([_.default],()=>_.default.getSKUs()),c=r.useMemo(()=>o.filter(t=>{let e=s[t.skuId];return null!=e&&e.available}),[o,s]);return i?c.filter(t=>null!=t.endsAt&&t.endsAt.getTime()>Math.max(null!=a?a:0,Date.now()-2592e6)):[]}",
        "useFetchListingsForSubscriptions": "t=>{let[e,n]=r.useState(!1),u=r.useMemo(()=>t.map(C.getApplicationSubscriptionPlanId),[t]),i=(0,l.useStateFromStoresArray)([E.default],()=>u.filter(t=>null==E.default.get(t)),[u]);return r.useEffect(()=>{i.length>0&&(n(!0),Promise.all(i.map(t=>(0,I.fetchSubscriptionListingForPlan)(t))).catch(()=>{}).then(()=>{n(!1)}))},[i]),{loading:e}}",
        "useFetchUserApplicationSubscriptionEntitlements": "()=>{let[t,e]=r.useState(0);return r.useEffect(()=>{e(1),(0,a.fetchUserEntitlements)({withSku:!0,withApplication:!0,entitlementType:P.EntitlementTypes.APPLICATION_SUBSCRIPTION}).catch(()=>{e(3)}).then(()=>{e(2)})},[]),{loadState:t}}",
        "useApplication": "t=>{let e=(0,o.default)(),n=(0,l.useStateFromStores)([s.default],()=>null!=t?s.default.getApplication(t):null,[t]),u=null!=n;return r.useEffect(()=>{!u&&null!=t&&e&&(0,A.fetchApplication)(t)},[u,t,e]),n}",
        "default": "function G(t){let{applicationId:e,groupListingId:n,guildId:u}=t,i=(0,o.default)(),{listingsLoaded:r}=N(e,n),{entitlementsLoaded:l}=R({guildId:u}),{entitlementsLoaded:a}=U({applicationId:e,loggedIn:i}),{subscriptionGroupListing:s}=F(e,u);return{applicationSubscriptionListingsShown:null!=e&&null!=n&&(null==u||l)&&(!i||a)&&r&&null!=s&&(0,C.hasPayableSubscriptionPlan)(s)}}",
        "useEligibleApplicationSubscriptionGuilds": "function D(t,e){let n=(0,l.useStateFromStores)([c.default],()=>c.default.isLoaded()),[u,i]=r.useState([]);return r.useEffect(()=>{null==e&&null!=t&&n&&(0,A.fetchEligibleApplicationSubscriptionGuilds)(t).then(t=>{let e=t.map(t=>c.default.getGuild(t)).filter(t=>null!=t);i(e)})},[t,e,n]),u}"
    }
}