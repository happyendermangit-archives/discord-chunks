{
    "exports": {
        "useTreeState": "function c(e){let[t,n]=(0,o.useControlledState)(e.expandedKeys?new Set(e.expandedKeys):void 0,e.defaultExpandedKeys?new Set(e.defaultExpandedKeys):new Set,e.onExpandedChange),c=(0,a.useMultipleSelectionState)(e),l=(0,r.useMemo)(()=>e.disabledKeys?new Set(e.disabledKeys):new Set,[e.disabledKeys]),u=(0,i.useCollection)(e,(0,r.useCallback)(e=>new s(e,{expandedKeys:t}),[t]),null);return(0,r.useEffect)(()=>{null!=c.focusedKey&&!u.getItem(c.focusedKey)&&c.setFocusedKey(null)},[u,c.focusedKey]),{collection:u,expandedKeys:t,disabledKeys:l,toggleKey:e=>{n(function(e,t){let n=new Set(e);return n.has(t)?n.delete(t):n.add(t),n}(t,e))},setExpandedKeys:n,selectionManager:new a.SelectionManager(u,c)}}"
    }
}