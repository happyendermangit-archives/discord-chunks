{
    "exports": {
        "default": {
            "initializedCount": 0,
            "actions": {
                "CHANNEL_DELETE": "handleChannelDelete(e){let{channel:t}=e;if(null!=t.guild_id){let e=_.default.getAllThreadsForParent(t.id);e.length>0&&i.default.Emitter.batched(()=>{for(let t of e)r.default.dispatch({type:\"THREAD_DELETE\",channel:t})})}}",
                "MESSAGE_CREATE": "handleMessageCreate(e){let{channelId:t,message:n}=e,i=_.default.getChannel(t);if(n.author?.id!==s.default.getId()||!i?.isActiveThread())return;let r=new Date(i.threadMetadata?.archiveTimestamp??0).getTime();Date.now()-r<5e3&&a.default.resort(i.parent_id)}"
            },
            "stores": {
                "toJSON": "function(){return Array.from(this)}",
                "get": "function get() { [native code] }",
                "set": "function set() { [native code] }",
                "has": "function has() { [native code] }",
                "delete": "function delete() { [native code] }",
                "clear": "function clear() { [native code] }",
                "entries": "function entries() { [native code] }",
                "forEach": "function forEach() { [native code] }",
                "keys": "function keys() { [native code] }",
                "size": 0,
                "values": "function values() { [native code] }"
            },
            "handleChannelDelete": "handleChannelDelete(e){let{channel:t}=e;if(null!=t.guild_id){let e=_.default.getAllThreadsForParent(t.id);e.length>0&&i.default.Emitter.batched(()=>{for(let t of e)r.default.dispatch({type:\"THREAD_DELETE\",channel:t})})}}",
            "handleMessageCreate": "handleMessageCreate(e){let{channelId:t,message:n}=e,i=_.default.getChannel(t);if(n.author?.id!==s.default.getId()||!i?.isActiveThread())return;let r=new Date(i.threadMetadata?.archiveTimestamp??0).getTime();Date.now()-r<5e3&&a.default.resort(i.parent_id)}"
        }
    }
}