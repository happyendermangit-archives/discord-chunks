{
    "exports": {
        "FrameLoop": "function(t){void 0===t&&(t=i);var e=!0,n=!1,o=0,u=[],s=0,c=new Set,l=new Set,f=new Set,h=function(t){var e=u.indexOf(t);e<0&&(e=u.findIndex(function(e){return e.priority>t.priority}),u.splice(~e?e:u.length,0,t))},p=function(){if(!e)try{y(),t(p)}catch(t){console.error(t)}},d=function(){e&&(e=!1,0==o&&(o=r.now(),t(p)))},v=[];this.setTimeout=function(t,e){var n=r.now()+e,i=function(){var t=v.findIndex(function(t){return t.cancel==i});t>=0&&v.splice(t,1)},o=a(v,function(t){return t.time>n}),u={time:n,handler:t,cancel:i};return v.splice(o,0,u),d(),u};var y=this.advance=function(){var t=r.now();if(c.size&&(c.forEach(h),c.clear()),v.length&&r.batchedUpdates(function(){var e=a(v,function(e){return e.time>t});v.splice(0,e).forEach(function(t){return t.handler()})}),t>o){var e=Math.min(64,t-o);o=t,r.batchedUpdates(function(){u.length&&(r.willAdvance(u),u=u.filter(function(t){return s=t.priority,!t.idle&&t.advance(e),!t.idle}),s=0),l.size&&(l.forEach(function(e){return e(t)}),l.clear()),f.size&&(n=!0,f.forEach(function(e){return e(t)}),f.clear(),n=!1)})}};this.start=function(t){s>t.priority?c.add(t):(h(t),d())},this.onFrame=function(t){l.add(t),d()},this.onWrite=function(t){n?t(o):f.add(t)}}",
        "Globals": {
            "createStringInterpolator": "function(t){!r&&(r=s.colorNames?RegExp(\"(\"+Object.keys(s.colorNames).join(\"|\")+\")\",\"g\"):/^\\b$/);var e=t.output.map(function(t){return(0,o.getFluidValue)(t).replace(l,u.colorToRgba).replace(r,u.colorToRgba)}),n=e.map(function(t){return t.match(c).map(Number)}),p=n[0].map(function(t,e){return n.map(function(t){if(!(e in t))throw Error('The arity of each \"output\" value must be equal');return t[e]})}).map(function(e){return(0,a.createInterpolator)((0,i.__assign)((0,i.__assign)({},t),{output:e}))});return function(t){var n=0;return e[0].replace(c,function(){return String(p[n++](t))}).replace(f,h)}}",
            "frameLoop": {
                "setTimeout": "(e,_)=>{let E=o.Globals.now()+_,t=()=>{let e=this.timeoutQueue.findIndex(e=>e.cancel===t);e>=0&&this.timeoutQueue.splice(e,1)},r=n(this.timeoutQueue,e=>e.time>E),i={time:E,handler:e,cancel:t};return this.timeoutQueue.splice(r,0,i),this.startLoop(),i}",
                "advance": "()=>{let e=o.Globals.now();if(this.startQueue.size>0&&(this.startQueue.forEach(this.addAnimation),this.startQueue.clear()),this.timeoutQueue.length>0&&o.Globals.batchedUpdates(()=>{let _=n(this.timeoutQueue,_=>_.time>e);this.timeoutQueue.splice(0,_).forEach(e=>e.handler())}),e>this.lastTime){let _=Math.min(64,e-this.lastTime);this.lastTime=e,o.Globals.batchedUpdates(()=>{this.animations.length>0&&(o.Globals.willAdvance(this.animations),this.animations=this.animations.filter(e=>(this.priority=e.priority,!e.idle&&e.advance(_),!e.idle)),this.priority=0),this.frameQueue.size>0&&(this.frameQueue.forEach(_=>_(e)),this.frameQueue.clear()),this.writeQueue.size>0&&(this.writing=!0,this.writeQueue.forEach(_=>_(e)),this.writeQueue.clear(),this.writing=!1)})}}",
                "start": "e=>{this.priority>e.priority?this.startQueue.add(e):(this.addAnimation(e),this.startLoop())}",
                "onFrame": "e=>{this.frameQueue.add(e),this.startLoop()}",
                "onWrite": "e=>{this.writing?e(this.lastTime):this.writeQueue.add(e)}",
                "_requestAnimationFrame": "e=>requestAnimationFrame(e)",
                "_cancelAnimationFrame": "e=>cancelAnimationFrame(e)",
                "writing": false,
                "id": 4,
                "lastTime": 1173.2999999999884,
                "animations": [
                    {
                        "id": 1,
                        "key": "background",
                        "_priority": 0,
                        "_children": {
                            "toJSON": "function(){return Array.from(this)}",
                            "has": "function has() { [native code] }",
                            "add": "function add() { [native code] }",
                            "delete": "function delete() { [native code] }",
                            "clear": "function clear() { [native code] }",
                            "entries": "function entries() { [native code] }",
                            "forEach": "function forEach() { [native code] }",
                            "size": 1,
                            "values": "function values() { [native code] }",
                            "keys": "function values() { [native code] }",
                            "union": "function union() { [native code] }",
                            "intersection": "function intersection() { [native code] }",
                            "difference": "function difference() { [native code] }",
                            "symmetricDifference": "function symmetricDifference() { [native code] }",
                            "isSubsetOf": "function isSubsetOf() { [native code] }",
                            "isSupersetOf": "function isSupersetOf() { [native code] }",
                            "isDisjointFrom": "function isDisjointFrom() { [native code] }"
                        },
                        "animation": {
                            "changed": true,
                            "values": [
                                {
                                    "_value": 0.18866666666668608,
                                    "done": false,
                                    "elapsedTime": 56.60000000000582,
                                    "lastPosition": 0.18866666666668608,
                                    "lastVelocity": 0.003333333333333334,
                                    "v0": 0,
                                    "_string": "rgba(0, 0, 0, 0.13243660130720317)",
                                    "_toString": "function(t){var n=0;return e[0].replace(c,function(){return String(p[n++](t))}).replace(f,h)}",
                                    "constructor": "function e(e,n){var r;return(r=t.call(this,0)||this)._value=void 0,r._string=null,r._toString=void 0,r._toString=i.createInterpolator({output:[e,n]}),r}",
                                    "getValue": "function(){var t=this._string;return null==t?this._string=this._toString(this._value):t}",
                                    "setValue": "function(e){if(i.is.num(e)){if(!t.prototype.setValue.call(this,e))return!1;else this._string=null}else this._string=e,this._value=1;return!0}",
                                    "reset": "function(e){e&&(this._toString=i.createInterpolator({output:[this.getValue(),e]})),this._value=0,t.prototype.reset.call(this)}",
                                    "getPayload": "function(){return[this]}"
                                }
                            ],
                            "toValues": [
                                1
                            ],
                            "fromValues": [
                                0
                            ],
                            "to": "#000000b3",
                            "from": "#00000000",
                            "config": {
                                "tension": 170,
                                "friction": 26,
                                "damping": 1,
                                "mass": 1,
                                "velocity": 0,
                                "duration": 300,
                                "easing": "function(t){return t}",
                                "clamp": false
                            },
                            "immediate": false,
                            "onRest": [
                                "function(r){if(r)t(U(e));else{var i=F(n),a=F(e.get());t(B(e,o.isEqual(a,i)))}}",
                                "function(r){if(r)t(U(e));else{var i=F(n),a=F(e.get());t(B(e,o.isEqual(a,i)))}}"
                            ]
                        },
                        "_phase": "ACTIVE",
                        "_state": {
                            "pauseQueue": {
                                "toJSON": "function(){return Array.from(this)}",
                                "has": "function has() { [native code] }",
                                "add": "function add() { [native code] }",
                                "delete": "function delete() { [native code] }",
                                "clear": "function clear() { [native code] }",
                                "entries": "function entries() { [native code] }",
                                "forEach": "function forEach() { [native code] }",
                                "size": 0,
                                "values": "function values() { [native code] }",
                                "keys": "function values() { [native code] }",
                                "union": "function union() { [native code] }",
                                "intersection": "function intersection() { [native code] }",
                                "difference": "function difference() { [native code] }",
                                "symmetricDifference": "function symmetricDifference() { [native code] }",
                                "isSubsetOf": "function isSubsetOf() { [native code] }",
                                "isSupersetOf": "function isSupersetOf() { [native code] }",
                                "isDisjointFrom": "function isDisjointFrom() { [native code] }"
                            },
                            "resumeQueue": {
                                "toJSON": "function(){return Array.from(this)}",
                                "has": "function has() { [native code] }",
                                "add": "function add() { [native code] }",
                                "delete": "function delete() { [native code] }",
                                "clear": "function clear() { [native code] }",
                                "entries": "function entries() { [native code] }",
                                "forEach": "function forEach() { [native code] }",
                                "size": 0,
                                "values": "function values() { [native code] }",
                                "keys": "function values() { [native code] }",
                                "union": "function union() { [native code] }",
                                "intersection": "function intersection() { [native code] }",
                                "difference": "function difference() { [native code] }",
                                "symmetricDifference": "function symmetricDifference() { [native code] }",
                                "isSubsetOf": "function isSubsetOf() { [native code] }",
                                "isSupersetOf": "function isSupersetOf() { [native code] }",
                                "isDisjointFrom": "function isDisjointFrom() { [native code] }"
                            }
                        },
                        "_defaultProps": {},
                        "_lastCallId": 2,
                        "_lastToId": 2,
                        "constructor": "function e(e,n){var r;if((r=t.call(this)||this).key=void 0,r.animation=new Animation,r.queue=void 0,r._phase=Y,r._state={pauseQueue:new Set,resumeQueue:new Set},r._defaultProps={},r._lastCallId=0,r._lastToId=0,!o.is.und(e)||!o.is.und(n)){var i=o.is.obj(e)?a({},e):a(a({},n),{},{from:e});i.default=!0,r.start(i)}return r}",
                        "advance": "function(t){var e=this,n=!0,r=!1,i=this.animation,a=i.config,u=i.toValues,s=h.getPayload(i.to);if(!s){var c=o.getFluidConfig(i.to);c&&(u=o.toArray(c.get()))}return i.values.forEach(function(c,l){if(!c.done){var f=s?s[l].lastPosition:u[l],h=i.immediate,p=f;if(!h){if(p=c.lastPosition,a.tension<=0){c.done=!0;return}var d=c.elapsedTime+=t,v=i.fromValues[l],y=null!=c.v0?c.v0:c.v0=o.is.arr(a.velocity)?a.velocity[l]:a.velocity;if(o.is.und(a.duration)){if(a.decay){var m=!0===a.decay?.998:a.decay,g=Math.exp(-(1-m)*d);p=v+y/(1-m)*(1-g),h=.1>Math.abs(c.lastPosition-p),b=y*g}else{b=null==c.lastVelocity?y:c.lastVelocity;for(var b,_=a.precision||(v==f?.005:Math.min(1,.001*Math.abs(f-v))),x=a.restVelocity||_/10,w=a.clamp?0:a.bounce,O=!o.is.und(w),k=v==f?c.v0>0:v<f,S=!1,E=Math.ceil(t/1),P=0;P<E&&!(!(Math.abs(b)>x)&&(h=Math.abs(f-p)<=_));++P){;O&&(S=p==f||p>f==k)&&(b=-b*w,p=f);var C=(-(1e-6*a.tension)*(p-f)+-(.001*a.friction)*b)/a.mass;b+=1*C,p+=1*b}}}else{var A=a.progress||0;a.duration<=0?A=1:A+=(1-A)*Math.min(1,d/a.duration),b=((p=v+a.easing(A)*(f-v))-c.lastPosition)/t,h=1==A}c.lastVelocity=b,Number.isNaN(p)&&(console.warn(\"Got NaN while animating:\",e),h=!0)}s&&!s[l].done&&(h=!1),h?c.done=!0:n=!1,c.setValue(p,a.round)&&(r=!0)}}),n?this.finish():r&&this._onChange(this.get()),n}",
                        "is": "function(t){return this._phase==t}",
                        "set": "function(t){var e=this;return p.batchedUpdates(function(){if(e._focus(t),e._set(t)&&!e.is(J))return e._onChange(e.get(),!0);e._stop()}),this}",
                        "pause": "function(){tn(this,\"pause\"),!this.is(Z)&&(this._phase=Z,o.flush(this._state.pauseQueue,function(t){return t()}))}",
                        "resume": "function(){tn(this,\"resume\"),this.is(Z)&&(this._start(),o.flush(this._state.resumeQueue,function(t){return t()}))}",
                        "finish": "function(t){var e=this;if(this.resume(),this.is(J)){var n=this.animation;!n.config.decay&&o.is.und(t)&&(t=n.to),!o.is.und(t)&&this._set(t),p.batchedUpdates(function(){!n.changed&&(n.changed=!0,n.onStart&&n.onStart(e)),e._stop()})}return this}",
                        "update": "function(t){return tn(this,\"update\"),(this.queue||(this.queue=[])).push(t),this}",
                        "start": "function(t,e){return n.apply(this,arguments)}",
                        "stop": "function(t){var e=this;return!this.is(tt)&&($(this._state,this._lastCallId),this._focus(this.get()),p.batchedUpdates(function(){return e._stop(t)})),this}",
                        "reset": "function(){this._update({reset:!0})}",
                        "dispose": "function(){!this.is(tt)&&(this.animation&&(this.animation.onRest=[]),this.stop(),this._phase=tt)}",
                        "onParentChange": "function(e){t.prototype.onParentChange.call(this,e),\"change\"==e.type?!this.is(J)&&(this._reset(),!this.is(Z)&&this._start()):\"priority\"==e.type&&(this.priority=e.priority+1)}",
                        "_prepareNode": "function(t){var e=t.to,n=t.from,r=t.reverse,i=this.key||\"\";e=!o.is.obj(e)||o.getFluidConfig(e)?e:e[i];var a={to:e,from:n=!o.is.obj(n)||o.getFluidConfig(n)?n:n[i]};if(this.is(Y)){if(r){var u=[n,e];e=u[0],n=u[1]}n=o.getFluidValue(n);var s=this._updateNode(o.is.und(n)?o.getFluidValue(e):n);s&&!o.is.und(n)&&s.setValue(n)}return a}",
                        "_updateNode": "function(t){var e=h.getAnimated(this);if(!o.is.und(t)){var n=this._getNodeType(t);(!e||e.constructor!==n)&&h.setAnimated(this,e=n.create(t))}return e}",
                        "_getNodeType": "function(t){var e=h.getAnimated(t);return e?e.constructor:o.is.arr(t)?h.AnimatedArray:o.isAnimatedString(t)?h.AnimatedString:h.AnimatedValue}",
                        "_update": "function(t,e){var n=this,r=this._defaultProps,i=function(e){var n=R(t,e);!o.is.und(n)&&(r[e]=n),r[e]&&(t[e]=r[e])};i(\"cancel\"),i(\"pause\");var a=this._prepareNode(t);return I(++this._lastCallId,{key:this.key,props:t,state:this._state,actions:{pause:this.pause.bind(this),resume:this.resume.bind(this),start:this._merge.bind(this,a)}}).then(function(r){if(t.loop&&r.finished&&!(e&&r.noop)){var i=to(t);if(i)return n._update(i,!0)}return r})}",
                        "_merge": "function(t,e,n){if(e.cancel)return this.stop(!0),n(U(this));var r=this.key,i=this.animation,u=this._defaultProps,s=!o.is.und(t.to),c=!o.is.und(t.from);if(s||c){if(!(e.callId>this._lastToId))return n(U(this));this._lastToId=e.callId}var l=function(t){return o.is.und(e[t])?u[t]:e[t]},f=tr(l(\"onDelayEnd\"),r);if(f&&f(e,this),e.default)T(e,[\"pause\",\"cancel\"],u);var d=i.to,v=i.from,y=t.to,m=void 0===y?d:y,g=t.from,b=void 0===g?v:g;if(c&&!s&&(m=b),e.reverse){var _=[b,m];m=_[0],b=_[1]}var x=!o.isEqual(b,v);x&&(i.from=b);var O=!o.isEqual(m,d);O&&this._focus(m);var S=o.getFluidConfig(m),E=o.getFluidConfig(b);E&&(b=E.get());var P=o.is.arr(e.to)||o.is.fun(e.to),j=i.config,R=j.decay,M=j.velocity;e.config&&!P&&!function(t,e,n){for(var r in n&&(k(n=a({},n),e),e=a(a({},n),e)),k(t,e),Object.assign(t,e),w)null==t[r]&&(t[r]=w[r]);var i=t.mass,u=t.frequency,s=t.damping;!o.is.und(u)&&(u<.01&&(u=.01),s<0&&(s=0),t.tension=Math.pow(2*Math.PI/u,2)*i,t.friction=4*Math.PI*s*i/u)}(j,C(e.config,r),e.config!==u.config?C(u.config,r):void 0);var L=h.getAnimated(this);if(!L||o.is.und(m))return n(B(this,!0));var V=o.is.und(e.reset)?c&&!e.default:!o.is.und(b)&&A(e.reset,r),I=V?b:this.get(),N=F(m),W=o.is.num(N)||o.is.arr(N)||o.isAnimatedString(N),D=!P&&(!W||A(u.immediate||e.immediate,r));if(O){if(D)L=this._updateNode(N);else{var $=this._getNodeType(m);if($!==L.constructor)throw Error(\"Cannot animate between \"+L.constructor.name+\" and \"+$.name+', as the \"to\" prop suggests')}}var G=L.constructor,H=!!S,X=!1;if(!H){var K=V||this.is(Y)&&x;(O||K)&&(H=!(X=o.isEqual(F(I),N))),(!o.isEqual(j.decay,R)||!o.isEqual(j.velocity,M))&&(H=!0)}if(X&&this.is(J)&&(i.changed&&!V?H=!0:!H&&this._stop()),!P){(H||o.getFluidConfig(d))&&(i.values=L.getPayload(),i.toValues=S?null:G==h.AnimatedString?[1]:o.toArray(N)),i.immediate=D,i.onStart=tr(l(\"onStart\"),r),i.onChange=tr(l(\"onChange\"),r);var Z=i.onRest,tt=V&&!e.onRest?Z[0]||o.noop:ti(tr(l(\"onRest\"),r),this);if(H){i.onRest=[tt,ti(n,this)];var te=V?0:1;te<Z.length&&p.batchedUpdates(function(){for(;te<Z.length;te++)Z[te]()})}else(V||e.onRest)&&(i.onRest[0]=tt)}var tn=tr(l(\"onProps\"),r);if(tn&&tn(e,this),V&&L.setValue(I),P)n(q(e.to,e,this._state,this));else if(H)V&&(this._phase=Q),this._reset(),this._start();else if(this.is(J)&&!O)i.onRest.push(ti(n,this));else{let t=z(this,I),e=tr(l(\"onNoopRest\"),r);null!=e&&e(t),n(t)}}",
                        "_focus": "function(t){var e=this.animation;if(t!==e.to){var n=o.getFluidConfig(e.to);n&&n.removeChild(this),e.to=t;var r=0;(n=o.getFluidConfig(t))&&(n.addChild(this),H(t)&&(r=(t.priority||0)+1)),this.priority=r}}",
                        "_set": "function(t){var e=o.getFluidConfig(t);e&&(t=e.get());var n=h.getAnimated(this),r=n&&n.getValue();return n?n.setValue(t):this._updateNode(t),!o.isEqual(t,r)}",
                        "_onChange": "function(e,n){void 0===n&&(n=!1);var r=this.animation;!r.changed&&!n&&(r.changed=!0,r.onStart&&r.onStart(this)),r.onChange&&r.onChange(e,this),t.prototype._onChange.call(this,e,n)}",
                        "_reset": "function(){var e=this.animation;h.getAnimated(this).reset(e.to),!this.is(J)&&(e.changed=!1),!e.immediate&&(e.fromValues=e.values.map(function(t){return t.lastPosition})),t.prototype._reset.call(this)}",
                        "_start": "function(){!this.is(J)&&(this._phase=J,t.prototype._start.call(this),p.skipAnimation?this.finish():p.frameLoop.start(this))}",
                        "_stop": "function(t){if(this.resume(),this.is(J)){this._phase=Q,this._onChange(this.get(),!0);var e=this.animation;o.each(e.values,function(t){t.done=!0});var n=e.onRest;n.length&&(e.onRest=[e.toValues?o.noop:n[0]],!e.changed&&(n[0]=o.noop),o.each(n,function(e){return e(t)}))}}",
                        "get": "function(){var t=h.getAnimated(this);return t&&t.getValue()}",
                        "to": "function(){for(var t=arguments.length,e=Array(t),n=0;n<t;n++)e[n]=arguments[n];return p.to(this,e)}",
                        "interpolate": "function(){y.deprecateInterpolate();for(var t=arguments.length,e=Array(t),n=0;n<t;n++)e[n]=arguments[n];return p.to(this,e)}",
                        "addChild": "function(t){!this._children.size&&this._attach(),this._children.add(t)}",
                        "removeChild": "function(t){this._children.delete(t),!this._children.size&&this._detach()}",
                        "_attach": "function(){}",
                        "_detach": "function(){}",
                        "_onPriorityChange": "function(t){!this.idle&&p.frameLoop.start(this),this._emit({type:\"priority\",parent:this,priority:t})}",
                        "_emit": "function(t){o.each(Array.from(this._children),function(e){e.onParentChange(t)})}",
                        "idle": false,
                        "goal": "#000000b3",
                        "velocity": 0.003333333333333334
                    },
                    {
                        "id": 3,
                        "key": "background",
                        "_priority": 0,
                        "_children": {
                            "toJSON": "function(){return Array.from(this)}",
                            "has": "function has() { [native code] }",
                            "add": "function add() { [native code] }",
                            "delete": "function delete() { [native code] }",
                            "clear": "function clear() { [native code] }",
                            "entries": "function entries() { [native code] }",
                            "forEach": "function forEach() { [native code] }",
                            "size": 1,
                            "values": "function values() { [native code] }",
                            "keys": "function values() { [native code] }",
                            "union": "function union() { [native code] }",
                            "intersection": "function intersection() { [native code] }",
                            "difference": "function difference() { [native code] }",
                            "symmetricDifference": "function symmetricDifference() { [native code] }",
                            "isSubsetOf": "function isSubsetOf() { [native code] }",
                            "isSupersetOf": "function isSupersetOf() { [native code] }",
                            "isDisjointFrom": "function isDisjointFrom() { [native code] }"
                        },
                        "animation": {
                            "changed": true,
                            "values": [
                                {
                                    "_value": 0.18866666666668608,
                                    "done": false,
                                    "elapsedTime": 56.60000000000582,
                                    "lastPosition": 0.18866666666668608,
                                    "lastVelocity": 0.003333333333333334,
                                    "v0": 0,
                                    "_string": "rgba(0, 0, 0, 0.13243660130720317)",
                                    "_toString": "function(t){var n=0;return e[0].replace(c,function(){return String(p[n++](t))}).replace(f,h)}",
                                    "constructor": "function e(e,n){var r;return(r=t.call(this,0)||this)._value=void 0,r._string=null,r._toString=void 0,r._toString=i.createInterpolator({output:[e,n]}),r}",
                                    "getValue": "function(){var t=this._string;return null==t?this._string=this._toString(this._value):t}",
                                    "setValue": "function(e){if(i.is.num(e)){if(!t.prototype.setValue.call(this,e))return!1;else this._string=null}else this._string=e,this._value=1;return!0}",
                                    "reset": "function(e){e&&(this._toString=i.createInterpolator({output:[this.getValue(),e]})),this._value=0,t.prototype.reset.call(this)}",
                                    "getPayload": "function(){return[this]}"
                                }
                            ],
                            "toValues": [
                                1
                            ],
                            "fromValues": [
                                0
                            ],
                            "to": "#000000b3",
                            "from": "#00000000",
                            "config": {
                                "tension": 170,
                                "friction": 26,
                                "damping": 1,
                                "mass": 1,
                                "velocity": 0,
                                "duration": 300,
                                "easing": "function(t){return t}",
                                "clamp": false
                            },
                            "immediate": false,
                            "onRest": [
                                "function(r){if(r)t(U(e));else{var i=F(n),a=F(e.get());t(B(e,o.isEqual(a,i)))}}",
                                "function(r){if(r)t(U(e));else{var i=F(n),a=F(e.get());t(B(e,o.isEqual(a,i)))}}"
                            ]
                        },
                        "_phase": "ACTIVE",
                        "_state": {
                            "pauseQueue": {
                                "toJSON": "function(){return Array.from(this)}",
                                "has": "function has() { [native code] }",
                                "add": "function add() { [native code] }",
                                "delete": "function delete() { [native code] }",
                                "clear": "function clear() { [native code] }",
                                "entries": "function entries() { [native code] }",
                                "forEach": "function forEach() { [native code] }",
                                "size": 0,
                                "values": "function values() { [native code] }",
                                "keys": "function values() { [native code] }",
                                "union": "function union() { [native code] }",
                                "intersection": "function intersection() { [native code] }",
                                "difference": "function difference() { [native code] }",
                                "symmetricDifference": "function symmetricDifference() { [native code] }",
                                "isSubsetOf": "function isSubsetOf() { [native code] }",
                                "isSupersetOf": "function isSupersetOf() { [native code] }",
                                "isDisjointFrom": "function isDisjointFrom() { [native code] }"
                            },
                            "resumeQueue": {
                                "toJSON": "function(){return Array.from(this)}",
                                "has": "function has() { [native code] }",
                                "add": "function add() { [native code] }",
                                "delete": "function delete() { [native code] }",
                                "clear": "function clear() { [native code] }",
                                "entries": "function entries() { [native code] }",
                                "forEach": "function forEach() { [native code] }",
                                "size": 0,
                                "values": "function values() { [native code] }",
                                "keys": "function values() { [native code] }",
                                "union": "function union() { [native code] }",
                                "intersection": "function intersection() { [native code] }",
                                "difference": "function difference() { [native code] }",
                                "symmetricDifference": "function symmetricDifference() { [native code] }",
                                "isSubsetOf": "function isSubsetOf() { [native code] }",
                                "isSupersetOf": "function isSupersetOf() { [native code] }",
                                "isDisjointFrom": "function isDisjointFrom() { [native code] }"
                            }
                        },
                        "_defaultProps": {},
                        "_lastCallId": 2,
                        "_lastToId": 2,
                        "constructor": "function e(e,n){var r;if((r=t.call(this)||this).key=void 0,r.animation=new Animation,r.queue=void 0,r._phase=Y,r._state={pauseQueue:new Set,resumeQueue:new Set},r._defaultProps={},r._lastCallId=0,r._lastToId=0,!o.is.und(e)||!o.is.und(n)){var i=o.is.obj(e)?a({},e):a(a({},n),{},{from:e});i.default=!0,r.start(i)}return r}",
                        "advance": "function(t){var e=this,n=!0,r=!1,i=this.animation,a=i.config,u=i.toValues,s=h.getPayload(i.to);if(!s){var c=o.getFluidConfig(i.to);c&&(u=o.toArray(c.get()))}return i.values.forEach(function(c,l){if(!c.done){var f=s?s[l].lastPosition:u[l],h=i.immediate,p=f;if(!h){if(p=c.lastPosition,a.tension<=0){c.done=!0;return}var d=c.elapsedTime+=t,v=i.fromValues[l],y=null!=c.v0?c.v0:c.v0=o.is.arr(a.velocity)?a.velocity[l]:a.velocity;if(o.is.und(a.duration)){if(a.decay){var m=!0===a.decay?.998:a.decay,g=Math.exp(-(1-m)*d);p=v+y/(1-m)*(1-g),h=.1>Math.abs(c.lastPosition-p),b=y*g}else{b=null==c.lastVelocity?y:c.lastVelocity;for(var b,_=a.precision||(v==f?.005:Math.min(1,.001*Math.abs(f-v))),x=a.restVelocity||_/10,w=a.clamp?0:a.bounce,O=!o.is.und(w),k=v==f?c.v0>0:v<f,S=!1,E=Math.ceil(t/1),P=0;P<E&&!(!(Math.abs(b)>x)&&(h=Math.abs(f-p)<=_));++P){;O&&(S=p==f||p>f==k)&&(b=-b*w,p=f);var C=(-(1e-6*a.tension)*(p-f)+-(.001*a.friction)*b)/a.mass;b+=1*C,p+=1*b}}}else{var A=a.progress||0;a.duration<=0?A=1:A+=(1-A)*Math.min(1,d/a.duration),b=((p=v+a.easing(A)*(f-v))-c.lastPosition)/t,h=1==A}c.lastVelocity=b,Number.isNaN(p)&&(console.warn(\"Got NaN while animating:\",e),h=!0)}s&&!s[l].done&&(h=!1),h?c.done=!0:n=!1,c.setValue(p,a.round)&&(r=!0)}}),n?this.finish():r&&this._onChange(this.get()),n}",
                        "is": "function(t){return this._phase==t}",
                        "set": "function(t){var e=this;return p.batchedUpdates(function(){if(e._focus(t),e._set(t)&&!e.is(J))return e._onChange(e.get(),!0);e._stop()}),this}",
                        "pause": "function(){tn(this,\"pause\"),!this.is(Z)&&(this._phase=Z,o.flush(this._state.pauseQueue,function(t){return t()}))}",
                        "resume": "function(){tn(this,\"resume\"),this.is(Z)&&(this._start(),o.flush(this._state.resumeQueue,function(t){return t()}))}",
                        "finish": "function(t){var e=this;if(this.resume(),this.is(J)){var n=this.animation;!n.config.decay&&o.is.und(t)&&(t=n.to),!o.is.und(t)&&this._set(t),p.batchedUpdates(function(){!n.changed&&(n.changed=!0,n.onStart&&n.onStart(e)),e._stop()})}return this}",
                        "update": "function(t){return tn(this,\"update\"),(this.queue||(this.queue=[])).push(t),this}",
                        "start": "function(t,e){return n.apply(this,arguments)}",
                        "stop": "function(t){var e=this;return!this.is(tt)&&($(this._state,this._lastCallId),this._focus(this.get()),p.batchedUpdates(function(){return e._stop(t)})),this}",
                        "reset": "function(){this._update({reset:!0})}",
                        "dispose": "function(){!this.is(tt)&&(this.animation&&(this.animation.onRest=[]),this.stop(),this._phase=tt)}",
                        "onParentChange": "function(e){t.prototype.onParentChange.call(this,e),\"change\"==e.type?!this.is(J)&&(this._reset(),!this.is(Z)&&this._start()):\"priority\"==e.type&&(this.priority=e.priority+1)}",
                        "_prepareNode": "function(t){var e=t.to,n=t.from,r=t.reverse,i=this.key||\"\";e=!o.is.obj(e)||o.getFluidConfig(e)?e:e[i];var a={to:e,from:n=!o.is.obj(n)||o.getFluidConfig(n)?n:n[i]};if(this.is(Y)){if(r){var u=[n,e];e=u[0],n=u[1]}n=o.getFluidValue(n);var s=this._updateNode(o.is.und(n)?o.getFluidValue(e):n);s&&!o.is.und(n)&&s.setValue(n)}return a}",
                        "_updateNode": "function(t){var e=h.getAnimated(this);if(!o.is.und(t)){var n=this._getNodeType(t);(!e||e.constructor!==n)&&h.setAnimated(this,e=n.create(t))}return e}",
                        "_getNodeType": "function(t){var e=h.getAnimated(t);return e?e.constructor:o.is.arr(t)?h.AnimatedArray:o.isAnimatedString(t)?h.AnimatedString:h.AnimatedValue}",
                        "_update": "function(t,e){var n=this,r=this._defaultProps,i=function(e){var n=R(t,e);!o.is.und(n)&&(r[e]=n),r[e]&&(t[e]=r[e])};i(\"cancel\"),i(\"pause\");var a=this._prepareNode(t);return I(++this._lastCallId,{key:this.key,props:t,state:this._state,actions:{pause:this.pause.bind(this),resume:this.resume.bind(this),start:this._merge.bind(this,a)}}).then(function(r){if(t.loop&&r.finished&&!(e&&r.noop)){var i=to(t);if(i)return n._update(i,!0)}return r})}",
                        "_merge": "function(t,e,n){if(e.cancel)return this.stop(!0),n(U(this));var r=this.key,i=this.animation,u=this._defaultProps,s=!o.is.und(t.to),c=!o.is.und(t.from);if(s||c){if(!(e.callId>this._lastToId))return n(U(this));this._lastToId=e.callId}var l=function(t){return o.is.und(e[t])?u[t]:e[t]},f=tr(l(\"onDelayEnd\"),r);if(f&&f(e,this),e.default)T(e,[\"pause\",\"cancel\"],u);var d=i.to,v=i.from,y=t.to,m=void 0===y?d:y,g=t.from,b=void 0===g?v:g;if(c&&!s&&(m=b),e.reverse){var _=[b,m];m=_[0],b=_[1]}var x=!o.isEqual(b,v);x&&(i.from=b);var O=!o.isEqual(m,d);O&&this._focus(m);var S=o.getFluidConfig(m),E=o.getFluidConfig(b);E&&(b=E.get());var P=o.is.arr(e.to)||o.is.fun(e.to),j=i.config,R=j.decay,M=j.velocity;e.config&&!P&&!function(t,e,n){for(var r in n&&(k(n=a({},n),e),e=a(a({},n),e)),k(t,e),Object.assign(t,e),w)null==t[r]&&(t[r]=w[r]);var i=t.mass,u=t.frequency,s=t.damping;!o.is.und(u)&&(u<.01&&(u=.01),s<0&&(s=0),t.tension=Math.pow(2*Math.PI/u,2)*i,t.friction=4*Math.PI*s*i/u)}(j,C(e.config,r),e.config!==u.config?C(u.config,r):void 0);var L=h.getAnimated(this);if(!L||o.is.und(m))return n(B(this,!0));var V=o.is.und(e.reset)?c&&!e.default:!o.is.und(b)&&A(e.reset,r),I=V?b:this.get(),N=F(m),W=o.is.num(N)||o.is.arr(N)||o.isAnimatedString(N),D=!P&&(!W||A(u.immediate||e.immediate,r));if(O){if(D)L=this._updateNode(N);else{var $=this._getNodeType(m);if($!==L.constructor)throw Error(\"Cannot animate between \"+L.constructor.name+\" and \"+$.name+', as the \"to\" prop suggests')}}var G=L.constructor,H=!!S,X=!1;if(!H){var K=V||this.is(Y)&&x;(O||K)&&(H=!(X=o.isEqual(F(I),N))),(!o.isEqual(j.decay,R)||!o.isEqual(j.velocity,M))&&(H=!0)}if(X&&this.is(J)&&(i.changed&&!V?H=!0:!H&&this._stop()),!P){(H||o.getFluidConfig(d))&&(i.values=L.getPayload(),i.toValues=S?null:G==h.AnimatedString?[1]:o.toArray(N)),i.immediate=D,i.onStart=tr(l(\"onStart\"),r),i.onChange=tr(l(\"onChange\"),r);var Z=i.onRest,tt=V&&!e.onRest?Z[0]||o.noop:ti(tr(l(\"onRest\"),r),this);if(H){i.onRest=[tt,ti(n,this)];var te=V?0:1;te<Z.length&&p.batchedUpdates(function(){for(;te<Z.length;te++)Z[te]()})}else(V||e.onRest)&&(i.onRest[0]=tt)}var tn=tr(l(\"onProps\"),r);if(tn&&tn(e,this),V&&L.setValue(I),P)n(q(e.to,e,this._state,this));else if(H)V&&(this._phase=Q),this._reset(),this._start();else if(this.is(J)&&!O)i.onRest.push(ti(n,this));else{let t=z(this,I),e=tr(l(\"onNoopRest\"),r);null!=e&&e(t),n(t)}}",
                        "_focus": "function(t){var e=this.animation;if(t!==e.to){var n=o.getFluidConfig(e.to);n&&n.removeChild(this),e.to=t;var r=0;(n=o.getFluidConfig(t))&&(n.addChild(this),H(t)&&(r=(t.priority||0)+1)),this.priority=r}}",
                        "_set": "function(t){var e=o.getFluidConfig(t);e&&(t=e.get());var n=h.getAnimated(this),r=n&&n.getValue();return n?n.setValue(t):this._updateNode(t),!o.isEqual(t,r)}",
                        "_onChange": "function(e,n){void 0===n&&(n=!1);var r=this.animation;!r.changed&&!n&&(r.changed=!0,r.onStart&&r.onStart(this)),r.onChange&&r.onChange(e,this),t.prototype._onChange.call(this,e,n)}",
                        "_reset": "function(){var e=this.animation;h.getAnimated(this).reset(e.to),!this.is(J)&&(e.changed=!1),!e.immediate&&(e.fromValues=e.values.map(function(t){return t.lastPosition})),t.prototype._reset.call(this)}",
                        "_start": "function(){!this.is(J)&&(this._phase=J,t.prototype._start.call(this),p.skipAnimation?this.finish():p.frameLoop.start(this))}",
                        "_stop": "function(t){if(this.resume(),this.is(J)){this._phase=Q,this._onChange(this.get(),!0);var e=this.animation;o.each(e.values,function(t){t.done=!0});var n=e.onRest;n.length&&(e.onRest=[e.toValues?o.noop:n[0]],!e.changed&&(n[0]=o.noop),o.each(n,function(e){return e(t)}))}}",
                        "get": "function(){var t=h.getAnimated(this);return t&&t.getValue()}",
                        "to": "function(){for(var t=arguments.length,e=Array(t),n=0;n<t;n++)e[n]=arguments[n];return p.to(this,e)}",
                        "interpolate": "function(){y.deprecateInterpolate();for(var t=arguments.length,e=Array(t),n=0;n<t;n++)e[n]=arguments[n];return p.to(this,e)}",
                        "addChild": "function(t){!this._children.size&&this._attach(),this._children.add(t)}",
                        "removeChild": "function(t){this._children.delete(t),!this._children.size&&this._detach()}",
                        "_attach": "function(){}",
                        "_detach": "function(){}",
                        "_onPriorityChange": "function(t){!this.idle&&p.frameLoop.start(this),this._emit({type:\"priority\",parent:this,priority:t})}",
                        "_emit": "function(t){o.each(Array.from(this._children),function(e){e.onParentChange(t)})}",
                        "idle": false,
                        "goal": "#000000b3",
                        "velocity": 0.003333333333333334
                    },
                    {
                        "id": 5,
                        "key": "transform",
                        "_priority": 0,
                        "_children": {
                            "toJSON": "function(){return Array.from(this)}",
                            "has": "function has() { [native code] }",
                            "add": "function add() { [native code] }",
                            "delete": "function delete() { [native code] }",
                            "clear": "function clear() { [native code] }",
                            "entries": "function entries() { [native code] }",
                            "forEach": "function forEach() { [native code] }",
                            "size": 1,
                            "values": "function values() { [native code] }",
                            "keys": "function values() { [native code] }",
                            "union": "function union() { [native code] }",
                            "intersection": "function intersection() { [native code] }",
                            "difference": "function difference() { [native code] }",
                            "symmetricDifference": "function symmetricDifference() { [native code] }",
                            "isSubsetOf": "function isSubsetOf() { [native code] }",
                            "isSupersetOf": "function isSupersetOf() { [native code] }",
                            "isDisjointFrom": "function isDisjointFrom() { [native code] }"
                        },
                        "animation": {
                            "changed": true,
                            "values": [
                                {
                                    "_value": 0.18866666666668608,
                                    "done": false,
                                    "elapsedTime": 56.60000000000582,
                                    "lastPosition": 0.18866666666668608,
                                    "lastVelocity": 0.003333333333333334,
                                    "v0": 0,
                                    "_string": "translate3d(0, -81.1333333333314%, 0)",
                                    "_toString": "function(t){var n=0;return e[0].replace(c,function(){return String(p[n++](t))}).replace(f,h)}",
                                    "constructor": "function e(e,n){var r;return(r=t.call(this,0)||this)._value=void 0,r._string=null,r._toString=void 0,r._toString=i.createInterpolator({output:[e,n]}),r}",
                                    "getValue": "function(){var t=this._string;return null==t?this._string=this._toString(this._value):t}",
                                    "setValue": "function(e){if(i.is.num(e)){if(!t.prototype.setValue.call(this,e))return!1;else this._string=null}else this._string=e,this._value=1;return!0}",
                                    "reset": "function(e){e&&(this._toString=i.createInterpolator({output:[this.getValue(),e]})),this._value=0,t.prototype.reset.call(this)}",
                                    "getPayload": "function(){return[this]}"
                                }
                            ],
                            "toValues": [
                                1
                            ],
                            "fromValues": [
                                0
                            ],
                            "to": "translate3d(0, -0px, 0)",
                            "from": "translate3d(0, -100%, 0)",
                            "config": {
                                "tension": 280,
                                "friction": 24,
                                "damping": 1,
                                "mass": 1,
                                "velocity": 0,
                                "duration": 300,
                                "easing": "function(t){return t}",
                                "clamp": false
                            },
                            "immediate": false,
                            "onRest": [
                                "function(r){if(r)t(U(e));else{var i=F(n),a=F(e.get());t(B(e,o.isEqual(a,i)))}}",
                                "function(r){if(r)t(U(e));else{var i=F(n),a=F(e.get());t(B(e,o.isEqual(a,i)))}}"
                            ]
                        },
                        "_phase": "ACTIVE",
                        "_state": {
                            "pauseQueue": {
                                "toJSON": "function(){return Array.from(this)}",
                                "has": "function has() { [native code] }",
                                "add": "function add() { [native code] }",
                                "delete": "function delete() { [native code] }",
                                "clear": "function clear() { [native code] }",
                                "entries": "function entries() { [native code] }",
                                "forEach": "function forEach() { [native code] }",
                                "size": 0,
                                "values": "function values() { [native code] }",
                                "keys": "function values() { [native code] }",
                                "union": "function union() { [native code] }",
                                "intersection": "function intersection() { [native code] }",
                                "difference": "function difference() { [native code] }",
                                "symmetricDifference": "function symmetricDifference() { [native code] }",
                                "isSubsetOf": "function isSubsetOf() { [native code] }",
                                "isSupersetOf": "function isSupersetOf() { [native code] }",
                                "isDisjointFrom": "function isDisjointFrom() { [native code] }"
                            },
                            "resumeQueue": {
                                "toJSON": "function(){return Array.from(this)}",
                                "has": "function has() { [native code] }",
                                "add": "function add() { [native code] }",
                                "delete": "function delete() { [native code] }",
                                "clear": "function clear() { [native code] }",
                                "entries": "function entries() { [native code] }",
                                "forEach": "function forEach() { [native code] }",
                                "size": 0,
                                "values": "function values() { [native code] }",
                                "keys": "function values() { [native code] }",
                                "union": "function union() { [native code] }",
                                "intersection": "function intersection() { [native code] }",
                                "difference": "function difference() { [native code] }",
                                "symmetricDifference": "function symmetricDifference() { [native code] }",
                                "isSubsetOf": "function isSubsetOf() { [native code] }",
                                "isSupersetOf": "function isSupersetOf() { [native code] }",
                                "isDisjointFrom": "function isDisjointFrom() { [native code] }"
                            }
                        },
                        "_defaultProps": {},
                        "_lastCallId": 2,
                        "_lastToId": 2,
                        "constructor": "function e(e,n){var r;if((r=t.call(this)||this).key=void 0,r.animation=new Animation,r.queue=void 0,r._phase=Y,r._state={pauseQueue:new Set,resumeQueue:new Set},r._defaultProps={},r._lastCallId=0,r._lastToId=0,!o.is.und(e)||!o.is.und(n)){var i=o.is.obj(e)?a({},e):a(a({},n),{},{from:e});i.default=!0,r.start(i)}return r}",
                        "advance": "function(t){var e=this,n=!0,r=!1,i=this.animation,a=i.config,u=i.toValues,s=h.getPayload(i.to);if(!s){var c=o.getFluidConfig(i.to);c&&(u=o.toArray(c.get()))}return i.values.forEach(function(c,l){if(!c.done){var f=s?s[l].lastPosition:u[l],h=i.immediate,p=f;if(!h){if(p=c.lastPosition,a.tension<=0){c.done=!0;return}var d=c.elapsedTime+=t,v=i.fromValues[l],y=null!=c.v0?c.v0:c.v0=o.is.arr(a.velocity)?a.velocity[l]:a.velocity;if(o.is.und(a.duration)){if(a.decay){var m=!0===a.decay?.998:a.decay,g=Math.exp(-(1-m)*d);p=v+y/(1-m)*(1-g),h=.1>Math.abs(c.lastPosition-p),b=y*g}else{b=null==c.lastVelocity?y:c.lastVelocity;for(var b,_=a.precision||(v==f?.005:Math.min(1,.001*Math.abs(f-v))),x=a.restVelocity||_/10,w=a.clamp?0:a.bounce,O=!o.is.und(w),k=v==f?c.v0>0:v<f,S=!1,E=Math.ceil(t/1),P=0;P<E&&!(!(Math.abs(b)>x)&&(h=Math.abs(f-p)<=_));++P){;O&&(S=p==f||p>f==k)&&(b=-b*w,p=f);var C=(-(1e-6*a.tension)*(p-f)+-(.001*a.friction)*b)/a.mass;b+=1*C,p+=1*b}}}else{var A=a.progress||0;a.duration<=0?A=1:A+=(1-A)*Math.min(1,d/a.duration),b=((p=v+a.easing(A)*(f-v))-c.lastPosition)/t,h=1==A}c.lastVelocity=b,Number.isNaN(p)&&(console.warn(\"Got NaN while animating:\",e),h=!0)}s&&!s[l].done&&(h=!1),h?c.done=!0:n=!1,c.setValue(p,a.round)&&(r=!0)}}),n?this.finish():r&&this._onChange(this.get()),n}",
                        "is": "function(t){return this._phase==t}",
                        "set": "function(t){var e=this;return p.batchedUpdates(function(){if(e._focus(t),e._set(t)&&!e.is(J))return e._onChange(e.get(),!0);e._stop()}),this}",
                        "pause": "function(){tn(this,\"pause\"),!this.is(Z)&&(this._phase=Z,o.flush(this._state.pauseQueue,function(t){return t()}))}",
                        "resume": "function(){tn(this,\"resume\"),this.is(Z)&&(this._start(),o.flush(this._state.resumeQueue,function(t){return t()}))}",
                        "finish": "function(t){var e=this;if(this.resume(),this.is(J)){var n=this.animation;!n.config.decay&&o.is.und(t)&&(t=n.to),!o.is.und(t)&&this._set(t),p.batchedUpdates(function(){!n.changed&&(n.changed=!0,n.onStart&&n.onStart(e)),e._stop()})}return this}",
                        "update": "function(t){return tn(this,\"update\"),(this.queue||(this.queue=[])).push(t),this}",
                        "start": "function(t,e){return n.apply(this,arguments)}",
                        "stop": "function(t){var e=this;return!this.is(tt)&&($(this._state,this._lastCallId),this._focus(this.get()),p.batchedUpdates(function(){return e._stop(t)})),this}",
                        "reset": "function(){this._update({reset:!0})}",
                        "dispose": "function(){!this.is(tt)&&(this.animation&&(this.animation.onRest=[]),this.stop(),this._phase=tt)}",
                        "onParentChange": "function(e){t.prototype.onParentChange.call(this,e),\"change\"==e.type?!this.is(J)&&(this._reset(),!this.is(Z)&&this._start()):\"priority\"==e.type&&(this.priority=e.priority+1)}",
                        "_prepareNode": "function(t){var e=t.to,n=t.from,r=t.reverse,i=this.key||\"\";e=!o.is.obj(e)||o.getFluidConfig(e)?e:e[i];var a={to:e,from:n=!o.is.obj(n)||o.getFluidConfig(n)?n:n[i]};if(this.is(Y)){if(r){var u=[n,e];e=u[0],n=u[1]}n=o.getFluidValue(n);var s=this._updateNode(o.is.und(n)?o.getFluidValue(e):n);s&&!o.is.und(n)&&s.setValue(n)}return a}",
                        "_updateNode": "function(t){var e=h.getAnimated(this);if(!o.is.und(t)){var n=this._getNodeType(t);(!e||e.constructor!==n)&&h.setAnimated(this,e=n.create(t))}return e}",
                        "_getNodeType": "function(t){var e=h.getAnimated(t);return e?e.constructor:o.is.arr(t)?h.AnimatedArray:o.isAnimatedString(t)?h.AnimatedString:h.AnimatedValue}",
                        "_update": "function(t,e){var n=this,r=this._defaultProps,i=function(e){var n=R(t,e);!o.is.und(n)&&(r[e]=n),r[e]&&(t[e]=r[e])};i(\"cancel\"),i(\"pause\");var a=this._prepareNode(t);return I(++this._lastCallId,{key:this.key,props:t,state:this._state,actions:{pause:this.pause.bind(this),resume:this.resume.bind(this),start:this._merge.bind(this,a)}}).then(function(r){if(t.loop&&r.finished&&!(e&&r.noop)){var i=to(t);if(i)return n._update(i,!0)}return r})}",
                        "_merge": "function(t,e,n){if(e.cancel)return this.stop(!0),n(U(this));var r=this.key,i=this.animation,u=this._defaultProps,s=!o.is.und(t.to),c=!o.is.und(t.from);if(s||c){if(!(e.callId>this._lastToId))return n(U(this));this._lastToId=e.callId}var l=function(t){return o.is.und(e[t])?u[t]:e[t]},f=tr(l(\"onDelayEnd\"),r);if(f&&f(e,this),e.default)T(e,[\"pause\",\"cancel\"],u);var d=i.to,v=i.from,y=t.to,m=void 0===y?d:y,g=t.from,b=void 0===g?v:g;if(c&&!s&&(m=b),e.reverse){var _=[b,m];m=_[0],b=_[1]}var x=!o.isEqual(b,v);x&&(i.from=b);var O=!o.isEqual(m,d);O&&this._focus(m);var S=o.getFluidConfig(m),E=o.getFluidConfig(b);E&&(b=E.get());var P=o.is.arr(e.to)||o.is.fun(e.to),j=i.config,R=j.decay,M=j.velocity;e.config&&!P&&!function(t,e,n){for(var r in n&&(k(n=a({},n),e),e=a(a({},n),e)),k(t,e),Object.assign(t,e),w)null==t[r]&&(t[r]=w[r]);var i=t.mass,u=t.frequency,s=t.damping;!o.is.und(u)&&(u<.01&&(u=.01),s<0&&(s=0),t.tension=Math.pow(2*Math.PI/u,2)*i,t.friction=4*Math.PI*s*i/u)}(j,C(e.config,r),e.config!==u.config?C(u.config,r):void 0);var L=h.getAnimated(this);if(!L||o.is.und(m))return n(B(this,!0));var V=o.is.und(e.reset)?c&&!e.default:!o.is.und(b)&&A(e.reset,r),I=V?b:this.get(),N=F(m),W=o.is.num(N)||o.is.arr(N)||o.isAnimatedString(N),D=!P&&(!W||A(u.immediate||e.immediate,r));if(O){if(D)L=this._updateNode(N);else{var $=this._getNodeType(m);if($!==L.constructor)throw Error(\"Cannot animate between \"+L.constructor.name+\" and \"+$.name+', as the \"to\" prop suggests')}}var G=L.constructor,H=!!S,X=!1;if(!H){var K=V||this.is(Y)&&x;(O||K)&&(H=!(X=o.isEqual(F(I),N))),(!o.isEqual(j.decay,R)||!o.isEqual(j.velocity,M))&&(H=!0)}if(X&&this.is(J)&&(i.changed&&!V?H=!0:!H&&this._stop()),!P){(H||o.getFluidConfig(d))&&(i.values=L.getPayload(),i.toValues=S?null:G==h.AnimatedString?[1]:o.toArray(N)),i.immediate=D,i.onStart=tr(l(\"onStart\"),r),i.onChange=tr(l(\"onChange\"),r);var Z=i.onRest,tt=V&&!e.onRest?Z[0]||o.noop:ti(tr(l(\"onRest\"),r),this);if(H){i.onRest=[tt,ti(n,this)];var te=V?0:1;te<Z.length&&p.batchedUpdates(function(){for(;te<Z.length;te++)Z[te]()})}else(V||e.onRest)&&(i.onRest[0]=tt)}var tn=tr(l(\"onProps\"),r);if(tn&&tn(e,this),V&&L.setValue(I),P)n(q(e.to,e,this._state,this));else if(H)V&&(this._phase=Q),this._reset(),this._start();else if(this.is(J)&&!O)i.onRest.push(ti(n,this));else{let t=z(this,I),e=tr(l(\"onNoopRest\"),r);null!=e&&e(t),n(t)}}",
                        "_focus": "function(t){var e=this.animation;if(t!==e.to){var n=o.getFluidConfig(e.to);n&&n.removeChild(this),e.to=t;var r=0;(n=o.getFluidConfig(t))&&(n.addChild(this),H(t)&&(r=(t.priority||0)+1)),this.priority=r}}",
                        "_set": "function(t){var e=o.getFluidConfig(t);e&&(t=e.get());var n=h.getAnimated(this),r=n&&n.getValue();return n?n.setValue(t):this._updateNode(t),!o.isEqual(t,r)}",
                        "_onChange": "function(e,n){void 0===n&&(n=!1);var r=this.animation;!r.changed&&!n&&(r.changed=!0,r.onStart&&r.onStart(this)),r.onChange&&r.onChange(e,this),t.prototype._onChange.call(this,e,n)}",
                        "_reset": "function(){var e=this.animation;h.getAnimated(this).reset(e.to),!this.is(J)&&(e.changed=!1),!e.immediate&&(e.fromValues=e.values.map(function(t){return t.lastPosition})),t.prototype._reset.call(this)}",
                        "_start": "function(){!this.is(J)&&(this._phase=J,t.prototype._start.call(this),p.skipAnimation?this.finish():p.frameLoop.start(this))}",
                        "_stop": "function(t){if(this.resume(),this.is(J)){this._phase=Q,this._onChange(this.get(),!0);var e=this.animation;o.each(e.values,function(t){t.done=!0});var n=e.onRest;n.length&&(e.onRest=[e.toValues?o.noop:n[0]],!e.changed&&(n[0]=o.noop),o.each(n,function(e){return e(t)}))}}",
                        "get": "function(){var t=h.getAnimated(this);return t&&t.getValue()}",
                        "to": "function(){for(var t=arguments.length,e=Array(t),n=0;n<t;n++)e[n]=arguments[n];return p.to(this,e)}",
                        "interpolate": "function(){y.deprecateInterpolate();for(var t=arguments.length,e=Array(t),n=0;n<t;n++)e[n]=arguments[n];return p.to(this,e)}",
                        "addChild": "function(t){!this._children.size&&this._attach(),this._children.add(t)}",
                        "removeChild": "function(t){this._children.delete(t),!this._children.size&&this._detach()}",
                        "_attach": "function(){}",
                        "_detach": "function(){}",
                        "_onPriorityChange": "function(t){!this.idle&&p.frameLoop.start(this),this._emit({type:\"priority\",parent:this,priority:t})}",
                        "_emit": "function(t){o.each(Array.from(this._children),function(e){e.onParentChange(t)})}",
                        "idle": false,
                        "goal": "translate3d(0, -0px, 0)",
                        "velocity": 0.003333333333333334
                    },
                    {
                        "id": 6,
                        "key": "opacity",
                        "_priority": 0,
                        "_children": {
                            "toJSON": "function(){return Array.from(this)}",
                            "has": "function has() { [native code] }",
                            "add": "function add() { [native code] }",
                            "delete": "function delete() { [native code] }",
                            "clear": "function clear() { [native code] }",
                            "entries": "function entries() { [native code] }",
                            "forEach": "function forEach() { [native code] }",
                            "size": 1,
                            "values": "function values() { [native code] }",
                            "keys": "function values() { [native code] }",
                            "union": "function union() { [native code] }",
                            "intersection": "function intersection() { [native code] }",
                            "difference": "function difference() { [native code] }",
                            "symmetricDifference": "function symmetricDifference() { [native code] }",
                            "isSubsetOf": "function isSubsetOf() { [native code] }",
                            "isSupersetOf": "function isSupersetOf() { [native code] }",
                            "isDisjointFrom": "function isDisjointFrom() { [native code] }"
                        },
                        "animation": {
                            "changed": true,
                            "values": [
                                {
                                    "_value": 0.18866666666668608,
                                    "done": false,
                                    "elapsedTime": 56.60000000000582,
                                    "lastPosition": 0.18866666666668608,
                                    "lastVelocity": 0.003333333333333334,
                                    "v0": 0,
                                    "constructor": "function e(e){var n;return(n=t.call(this)||this)._value=e,n.done=!0,n.elapsedTime=void 0,n.lastPosition=void 0,n.lastVelocity=void 0,n.v0=void 0,i.is.num(n._value)&&(n.lastPosition=n._value),n}",
                                    "getPayload": "function(){return[this]}",
                                    "getValue": "function(){return this._value}",
                                    "setValue": "function(t,e){return i.is.num(t)&&(this.lastPosition=t,e&&(t=Math.round(t/e)*e,this.done&&(this.lastPosition=t))),this._value!==t&&(this._value=t,!0)}",
                                    "reset": "function(){var t=this.done;this.done=!1,i.is.num(this._value)&&(this.elapsedTime=0,this.lastPosition=this._value,t&&(this.lastVelocity=null),this.v0=null)}"
                                }
                            ],
                            "toValues": [
                                1
                            ],
                            "fromValues": [
                                0
                            ],
                            "to": 1,
                            "from": 0,
                            "config": {
                                "tension": 280,
                                "friction": 24,
                                "damping": 1,
                                "mass": 1,
                                "velocity": 0,
                                "duration": 300,
                                "easing": "function(t){return t}",
                                "clamp": false
                            },
                            "immediate": false,
                            "onRest": [
                                "function(r){if(r)t(U(e));else{var i=F(n),a=F(e.get());t(B(e,o.isEqual(a,i)))}}",
                                "function(r){if(r)t(U(e));else{var i=F(n),a=F(e.get());t(B(e,o.isEqual(a,i)))}}"
                            ]
                        },
                        "_phase": "ACTIVE",
                        "_state": {
                            "pauseQueue": {
                                "toJSON": "function(){return Array.from(this)}",
                                "has": "function has() { [native code] }",
                                "add": "function add() { [native code] }",
                                "delete": "function delete() { [native code] }",
                                "clear": "function clear() { [native code] }",
                                "entries": "function entries() { [native code] }",
                                "forEach": "function forEach() { [native code] }",
                                "size": 0,
                                "values": "function values() { [native code] }",
                                "keys": "function values() { [native code] }",
                                "union": "function union() { [native code] }",
                                "intersection": "function intersection() { [native code] }",
                                "difference": "function difference() { [native code] }",
                                "symmetricDifference": "function symmetricDifference() { [native code] }",
                                "isSubsetOf": "function isSubsetOf() { [native code] }",
                                "isSupersetOf": "function isSupersetOf() { [native code] }",
                                "isDisjointFrom": "function isDisjointFrom() { [native code] }"
                            },
                            "resumeQueue": {
                                "toJSON": "function(){return Array.from(this)}",
                                "has": "function has() { [native code] }",
                                "add": "function add() { [native code] }",
                                "delete": "function delete() { [native code] }",
                                "clear": "function clear() { [native code] }",
                                "entries": "function entries() { [native code] }",
                                "forEach": "function forEach() { [native code] }",
                                "size": 0,
                                "values": "function values() { [native code] }",
                                "keys": "function values() { [native code] }",
                                "union": "function union() { [native code] }",
                                "intersection": "function intersection() { [native code] }",
                                "difference": "function difference() { [native code] }",
                                "symmetricDifference": "function symmetricDifference() { [native code] }",
                                "isSubsetOf": "function isSubsetOf() { [native code] }",
                                "isSupersetOf": "function isSupersetOf() { [native code] }",
                                "isDisjointFrom": "function isDisjointFrom() { [native code] }"
                            }
                        },
                        "_defaultProps": {},
                        "_lastCallId": 2,
                        "_lastToId": 2,
                        "constructor": "function e(e,n){var r;if((r=t.call(this)||this).key=void 0,r.animation=new Animation,r.queue=void 0,r._phase=Y,r._state={pauseQueue:new Set,resumeQueue:new Set},r._defaultProps={},r._lastCallId=0,r._lastToId=0,!o.is.und(e)||!o.is.und(n)){var i=o.is.obj(e)?a({},e):a(a({},n),{},{from:e});i.default=!0,r.start(i)}return r}",
                        "advance": "function(t){var e=this,n=!0,r=!1,i=this.animation,a=i.config,u=i.toValues,s=h.getPayload(i.to);if(!s){var c=o.getFluidConfig(i.to);c&&(u=o.toArray(c.get()))}return i.values.forEach(function(c,l){if(!c.done){var f=s?s[l].lastPosition:u[l],h=i.immediate,p=f;if(!h){if(p=c.lastPosition,a.tension<=0){c.done=!0;return}var d=c.elapsedTime+=t,v=i.fromValues[l],y=null!=c.v0?c.v0:c.v0=o.is.arr(a.velocity)?a.velocity[l]:a.velocity;if(o.is.und(a.duration)){if(a.decay){var m=!0===a.decay?.998:a.decay,g=Math.exp(-(1-m)*d);p=v+y/(1-m)*(1-g),h=.1>Math.abs(c.lastPosition-p),b=y*g}else{b=null==c.lastVelocity?y:c.lastVelocity;for(var b,_=a.precision||(v==f?.005:Math.min(1,.001*Math.abs(f-v))),x=a.restVelocity||_/10,w=a.clamp?0:a.bounce,O=!o.is.und(w),k=v==f?c.v0>0:v<f,S=!1,E=Math.ceil(t/1),P=0;P<E&&!(!(Math.abs(b)>x)&&(h=Math.abs(f-p)<=_));++P){;O&&(S=p==f||p>f==k)&&(b=-b*w,p=f);var C=(-(1e-6*a.tension)*(p-f)+-(.001*a.friction)*b)/a.mass;b+=1*C,p+=1*b}}}else{var A=a.progress||0;a.duration<=0?A=1:A+=(1-A)*Math.min(1,d/a.duration),b=((p=v+a.easing(A)*(f-v))-c.lastPosition)/t,h=1==A}c.lastVelocity=b,Number.isNaN(p)&&(console.warn(\"Got NaN while animating:\",e),h=!0)}s&&!s[l].done&&(h=!1),h?c.done=!0:n=!1,c.setValue(p,a.round)&&(r=!0)}}),n?this.finish():r&&this._onChange(this.get()),n}",
                        "is": "function(t){return this._phase==t}",
                        "set": "function(t){var e=this;return p.batchedUpdates(function(){if(e._focus(t),e._set(t)&&!e.is(J))return e._onChange(e.get(),!0);e._stop()}),this}",
                        "pause": "function(){tn(this,\"pause\"),!this.is(Z)&&(this._phase=Z,o.flush(this._state.pauseQueue,function(t){return t()}))}",
                        "resume": "function(){tn(this,\"resume\"),this.is(Z)&&(this._start(),o.flush(this._state.resumeQueue,function(t){return t()}))}",
                        "finish": "function(t){var e=this;if(this.resume(),this.is(J)){var n=this.animation;!n.config.decay&&o.is.und(t)&&(t=n.to),!o.is.und(t)&&this._set(t),p.batchedUpdates(function(){!n.changed&&(n.changed=!0,n.onStart&&n.onStart(e)),e._stop()})}return this}",
                        "update": "function(t){return tn(this,\"update\"),(this.queue||(this.queue=[])).push(t),this}",
                        "start": "function(t,e){return n.apply(this,arguments)}",
                        "stop": "function(t){var e=this;return!this.is(tt)&&($(this._state,this._lastCallId),this._focus(this.get()),p.batchedUpdates(function(){return e._stop(t)})),this}",
                        "reset": "function(){this._update({reset:!0})}",
                        "dispose": "function(){!this.is(tt)&&(this.animation&&(this.animation.onRest=[]),this.stop(),this._phase=tt)}",
                        "onParentChange": "function(e){t.prototype.onParentChange.call(this,e),\"change\"==e.type?!this.is(J)&&(this._reset(),!this.is(Z)&&this._start()):\"priority\"==e.type&&(this.priority=e.priority+1)}",
                        "_prepareNode": "function(t){var e=t.to,n=t.from,r=t.reverse,i=this.key||\"\";e=!o.is.obj(e)||o.getFluidConfig(e)?e:e[i];var a={to:e,from:n=!o.is.obj(n)||o.getFluidConfig(n)?n:n[i]};if(this.is(Y)){if(r){var u=[n,e];e=u[0],n=u[1]}n=o.getFluidValue(n);var s=this._updateNode(o.is.und(n)?o.getFluidValue(e):n);s&&!o.is.und(n)&&s.setValue(n)}return a}",
                        "_updateNode": "function(t){var e=h.getAnimated(this);if(!o.is.und(t)){var n=this._getNodeType(t);(!e||e.constructor!==n)&&h.setAnimated(this,e=n.create(t))}return e}",
                        "_getNodeType": "function(t){var e=h.getAnimated(t);return e?e.constructor:o.is.arr(t)?h.AnimatedArray:o.isAnimatedString(t)?h.AnimatedString:h.AnimatedValue}",
                        "_update": "function(t,e){var n=this,r=this._defaultProps,i=function(e){var n=R(t,e);!o.is.und(n)&&(r[e]=n),r[e]&&(t[e]=r[e])};i(\"cancel\"),i(\"pause\");var a=this._prepareNode(t);return I(++this._lastCallId,{key:this.key,props:t,state:this._state,actions:{pause:this.pause.bind(this),resume:this.resume.bind(this),start:this._merge.bind(this,a)}}).then(function(r){if(t.loop&&r.finished&&!(e&&r.noop)){var i=to(t);if(i)return n._update(i,!0)}return r})}",
                        "_merge": "function(t,e,n){if(e.cancel)return this.stop(!0),n(U(this));var r=this.key,i=this.animation,u=this._defaultProps,s=!o.is.und(t.to),c=!o.is.und(t.from);if(s||c){if(!(e.callId>this._lastToId))return n(U(this));this._lastToId=e.callId}var l=function(t){return o.is.und(e[t])?u[t]:e[t]},f=tr(l(\"onDelayEnd\"),r);if(f&&f(e,this),e.default)T(e,[\"pause\",\"cancel\"],u);var d=i.to,v=i.from,y=t.to,m=void 0===y?d:y,g=t.from,b=void 0===g?v:g;if(c&&!s&&(m=b),e.reverse){var _=[b,m];m=_[0],b=_[1]}var x=!o.isEqual(b,v);x&&(i.from=b);var O=!o.isEqual(m,d);O&&this._focus(m);var S=o.getFluidConfig(m),E=o.getFluidConfig(b);E&&(b=E.get());var P=o.is.arr(e.to)||o.is.fun(e.to),j=i.config,R=j.decay,M=j.velocity;e.config&&!P&&!function(t,e,n){for(var r in n&&(k(n=a({},n),e),e=a(a({},n),e)),k(t,e),Object.assign(t,e),w)null==t[r]&&(t[r]=w[r]);var i=t.mass,u=t.frequency,s=t.damping;!o.is.und(u)&&(u<.01&&(u=.01),s<0&&(s=0),t.tension=Math.pow(2*Math.PI/u,2)*i,t.friction=4*Math.PI*s*i/u)}(j,C(e.config,r),e.config!==u.config?C(u.config,r):void 0);var L=h.getAnimated(this);if(!L||o.is.und(m))return n(B(this,!0));var V=o.is.und(e.reset)?c&&!e.default:!o.is.und(b)&&A(e.reset,r),I=V?b:this.get(),N=F(m),W=o.is.num(N)||o.is.arr(N)||o.isAnimatedString(N),D=!P&&(!W||A(u.immediate||e.immediate,r));if(O){if(D)L=this._updateNode(N);else{var $=this._getNodeType(m);if($!==L.constructor)throw Error(\"Cannot animate between \"+L.constructor.name+\" and \"+$.name+', as the \"to\" prop suggests')}}var G=L.constructor,H=!!S,X=!1;if(!H){var K=V||this.is(Y)&&x;(O||K)&&(H=!(X=o.isEqual(F(I),N))),(!o.isEqual(j.decay,R)||!o.isEqual(j.velocity,M))&&(H=!0)}if(X&&this.is(J)&&(i.changed&&!V?H=!0:!H&&this._stop()),!P){(H||o.getFluidConfig(d))&&(i.values=L.getPayload(),i.toValues=S?null:G==h.AnimatedString?[1]:o.toArray(N)),i.immediate=D,i.onStart=tr(l(\"onStart\"),r),i.onChange=tr(l(\"onChange\"),r);var Z=i.onRest,tt=V&&!e.onRest?Z[0]||o.noop:ti(tr(l(\"onRest\"),r),this);if(H){i.onRest=[tt,ti(n,this)];var te=V?0:1;te<Z.length&&p.batchedUpdates(function(){for(;te<Z.length;te++)Z[te]()})}else(V||e.onRest)&&(i.onRest[0]=tt)}var tn=tr(l(\"onProps\"),r);if(tn&&tn(e,this),V&&L.setValue(I),P)n(q(e.to,e,this._state,this));else if(H)V&&(this._phase=Q),this._reset(),this._start();else if(this.is(J)&&!O)i.onRest.push(ti(n,this));else{let t=z(this,I),e=tr(l(\"onNoopRest\"),r);null!=e&&e(t),n(t)}}",
                        "_focus": "function(t){var e=this.animation;if(t!==e.to){var n=o.getFluidConfig(e.to);n&&n.removeChild(this),e.to=t;var r=0;(n=o.getFluidConfig(t))&&(n.addChild(this),H(t)&&(r=(t.priority||0)+1)),this.priority=r}}",
                        "_set": "function(t){var e=o.getFluidConfig(t);e&&(t=e.get());var n=h.getAnimated(this),r=n&&n.getValue();return n?n.setValue(t):this._updateNode(t),!o.isEqual(t,r)}",
                        "_onChange": "function(e,n){void 0===n&&(n=!1);var r=this.animation;!r.changed&&!n&&(r.changed=!0,r.onStart&&r.onStart(this)),r.onChange&&r.onChange(e,this),t.prototype._onChange.call(this,e,n)}",
                        "_reset": "function(){var e=this.animation;h.getAnimated(this).reset(e.to),!this.is(J)&&(e.changed=!1),!e.immediate&&(e.fromValues=e.values.map(function(t){return t.lastPosition})),t.prototype._reset.call(this)}",
                        "_start": "function(){!this.is(J)&&(this._phase=J,t.prototype._start.call(this),p.skipAnimation?this.finish():p.frameLoop.start(this))}",
                        "_stop": "function(t){if(this.resume(),this.is(J)){this._phase=Q,this._onChange(this.get(),!0);var e=this.animation;o.each(e.values,function(t){t.done=!0});var n=e.onRest;n.length&&(e.onRest=[e.toValues?o.noop:n[0]],!e.changed&&(n[0]=o.noop),o.each(n,function(e){return e(t)}))}}",
                        "get": "function(){var t=h.getAnimated(this);return t&&t.getValue()}",
                        "to": "function(){for(var t=arguments.length,e=Array(t),n=0;n<t;n++)e[n]=arguments[n];return p.to(this,e)}",
                        "interpolate": "function(){y.deprecateInterpolate();for(var t=arguments.length,e=Array(t),n=0;n<t;n++)e[n]=arguments[n];return p.to(this,e)}",
                        "addChild": "function(t){!this._children.size&&this._attach(),this._children.add(t)}",
                        "removeChild": "function(t){this._children.delete(t),!this._children.size&&this._detach()}",
                        "_attach": "function(){}",
                        "_detach": "function(){}",
                        "_onPriorityChange": "function(t){!this.idle&&p.frameLoop.start(this),this._emit({type:\"priority\",parent:this,priority:t})}",
                        "_emit": "function(t){o.each(Array.from(this._children),function(e){e.onParentChange(t)})}",
                        "idle": false,
                        "goal": 1,
                        "velocity": 0.003333333333333334
                    }
                ],
                "priority": 0,
                "startQueue": {
                    "toJSON": "function(){return Array.from(this)}",
                    "has": "function has() { [native code] }",
                    "add": "function add() { [native code] }",
                    "delete": "function delete() { [native code] }",
                    "clear": "function clear() { [native code] }",
                    "entries": "function entries() { [native code] }",
                    "forEach": "function forEach() { [native code] }",
                    "size": 0,
                    "values": "function values() { [native code] }",
                    "keys": "function values() { [native code] }",
                    "union": "function union() { [native code] }",
                    "intersection": "function intersection() { [native code] }",
                    "difference": "function difference() { [native code] }",
                    "symmetricDifference": "function symmetricDifference() { [native code] }",
                    "isSubsetOf": "function isSubsetOf() { [native code] }",
                    "isSupersetOf": "function isSupersetOf() { [native code] }",
                    "isDisjointFrom": "function isDisjointFrom() { [native code] }"
                },
                "frameQueue": {
                    "toJSON": "function(){return Array.from(this)}",
                    "has": "function has() { [native code] }",
                    "add": "function add() { [native code] }",
                    "delete": "function delete() { [native code] }",
                    "clear": "function clear() { [native code] }",
                    "entries": "function entries() { [native code] }",
                    "forEach": "function forEach() { [native code] }",
                    "size": 0,
                    "values": "function values() { [native code] }",
                    "keys": "function values() { [native code] }",
                    "union": "function union() { [native code] }",
                    "intersection": "function intersection() { [native code] }",
                    "difference": "function difference() { [native code] }",
                    "symmetricDifference": "function symmetricDifference() { [native code] }",
                    "isSubsetOf": "function isSubsetOf() { [native code] }",
                    "isSupersetOf": "function isSupersetOf() { [native code] }",
                    "isDisjointFrom": "function isDisjointFrom() { [native code] }"
                },
                "writeQueue": {
                    "toJSON": "function(){return Array.from(this)}",
                    "has": "function has() { [native code] }",
                    "add": "function add() { [native code] }",
                    "delete": "function delete() { [native code] }",
                    "clear": "function clear() { [native code] }",
                    "entries": "function entries() { [native code] }",
                    "forEach": "function forEach() { [native code] }",
                    "size": 0,
                    "values": "function values() { [native code] }",
                    "keys": "function values() { [native code] }",
                    "union": "function union() { [native code] }",
                    "intersection": "function intersection() { [native code] }",
                    "difference": "function difference() { [native code] }",
                    "symmetricDifference": "function symmetricDifference() { [native code] }",
                    "isSubsetOf": "function isSubsetOf() { [native code] }",
                    "isSupersetOf": "function isSupersetOf() { [native code] }",
                    "isDisjointFrom": "function isDisjointFrom() { [native code] }"
                },
                "timeoutQueue": [],
                "addAnimation": "e=>{let _=this.animations.indexOf(e);_<0&&(_=this.animations.findIndex(_=>_.priority>e.priority),this.animations.splice(0!=~_?_:this.animations.length,0,e))}",
                "loop": "()=>{if(0!==this.lastTime)try{this.advance()}catch(e){console.error(e)}finally{this.animations.length>0||this.startQueue.size>0||this.frameQueue.size>0||this.writeQueue.size>0||this.timeoutQueue.length>0?this.id=this._requestAnimationFrame(this.loop):(this.lastTime=0,this.id=0)}}",
                "startLoop": "()=>{!(this.lastTime>0)&&(this.lastTime=o.Globals.now(),this.id=this._requestAnimationFrame(this.loop))}",
                "setRAF": "setRAF(e,_){0!==this.id&&(this._cancelAnimationFrame(this.id),this.id=0),this._requestAnimationFrame=e,this._cancelAnimationFrame=_,this.loop()}"
            },
            "to": "function(t,e){return new tA(t,e)}",
            "now": "function(){return performance.now()}",
            "colorNames": {
                "transparent": 0,
                "aliceblue": 4042850303,
                "antiquewhite": 4209760255,
                "aqua": 16777215,
                "aquamarine": 2147472639,
                "azure": 4043309055,
                "beige": 4126530815,
                "bisque": 4293182719,
                "black": 255,
                "blanchedalmond": 4293643775,
                "blue": 65535,
                "blueviolet": 2318131967,
                "brown": 2771004159,
                "burlywood": 3736635391,
                "burntsienna": 3934150143,
                "cadetblue": 1604231423,
                "chartreuse": 2147418367,
                "chocolate": 3530104575,
                "coral": 4286533887,
                "cornflowerblue": 1687547391,
                "cornsilk": 4294499583,
                "crimson": 3692313855,
                "cyan": 16777215,
                "darkblue": 35839,
                "darkcyan": 9145343,
                "darkgoldenrod": 3095792639,
                "darkgray": 2846468607,
                "darkgreen": 6553855,
                "darkgrey": 2846468607,
                "darkkhaki": 3182914559,
                "darkmagenta": 2332068863,
                "darkolivegreen": 1433087999,
                "darkorange": 4287365375,
                "darkorchid": 2570243327,
                "darkred": 2332033279,
                "darksalmon": 3918953215,
                "darkseagreen": 2411499519,
                "darkslateblue": 1211993087,
                "darkslategray": 793726975,
                "darkslategrey": 793726975,
                "darkturquoise": 13554175,
                "darkviolet": 2483082239,
                "deeppink": 4279538687,
                "deepskyblue": 12582911,
                "dimgray": 1768516095,
                "dimgrey": 1768516095,
                "dodgerblue": 512819199,
                "firebrick": 2988581631,
                "floralwhite": 4294635775,
                "forestgreen": 579543807,
                "fuchsia": 4278255615,
                "gainsboro": 3705462015,
                "ghostwhite": 4177068031,
                "gold": 4292280575,
                "goldenrod": 3668254975,
                "gray": 2155905279,
                "green": 8388863,
                "greenyellow": 2919182335,
                "grey": 2155905279,
                "honeydew": 4043305215,
                "hotpink": 4285117695,
                "indianred": 3445382399,
                "indigo": 1258324735,
                "ivory": 4294963455,
                "khaki": 4041641215,
                "lavender": 3873897215,
                "lavenderblush": 4293981695,
                "lawngreen": 2096890111,
                "lemonchiffon": 4294626815,
                "lightblue": 2916673279,
                "lightcoral": 4034953471,
                "lightcyan": 3774873599,
                "lightgoldenrodyellow": 4210742015,
                "lightgray": 3553874943,
                "lightgreen": 2431553791,
                "lightgrey": 3553874943,
                "lightpink": 4290167295,
                "lightsalmon": 4288707327,
                "lightseagreen": 548580095,
                "lightskyblue": 2278488831,
                "lightslategray": 2005441023,
                "lightslategrey": 2005441023,
                "lightsteelblue": 2965692159,
                "lightyellow": 4294959359,
                "lime": 16711935,
                "limegreen": 852308735,
                "linen": 4210091775,
                "magenta": 4278255615,
                "maroon": 2147483903,
                "mediumaquamarine": 1724754687,
                "mediumblue": 52735,
                "mediumorchid": 3126187007,
                "mediumpurple": 2473647103,
                "mediumseagreen": 1018393087,
                "mediumslateblue": 2070474495,
                "mediumspringgreen": 16423679,
                "mediumturquoise": 1221709055,
                "mediumvioletred": 3340076543,
                "midnightblue": 421097727,
                "mintcream": 4127193855,
                "mistyrose": 4293190143,
                "moccasin": 4293178879,
                "navajowhite": 4292783615,
                "navy": 33023,
                "oldlace": 4260751103,
                "olive": 2155872511,
                "olivedrab": 1804477439,
                "orange": 4289003775,
                "orangered": 4282712319,
                "orchid": 3664828159,
                "palegoldenrod": 4008225535,
                "palegreen": 2566625535,
                "paleturquoise": 2951671551,
                "palevioletred": 3681588223,
                "papayawhip": 4293907967,
                "peachpuff": 4292524543,
                "peru": 3448061951,
                "pink": 4290825215,
                "plum": 3718307327,
                "powderblue": 2967529215,
                "purple": 2147516671,
                "rebeccapurple": 1714657791,
                "red": 4278190335,
                "rosybrown": 3163525119,
                "royalblue": 1097458175,
                "saddlebrown": 2336560127,
                "salmon": 4202722047,
                "sandybrown": 4104413439,
                "seagreen": 780883967,
                "seashell": 4294307583,
                "sienna": 2689740287,
                "silver": 3233857791,
                "skyblue": 2278484991,
                "slateblue": 1784335871,
                "slategray": 1887473919,
                "slategrey": 1887473919,
                "snow": 4294638335,
                "springgreen": 16744447,
                "steelblue": 1182971135,
                "tan": 3535047935,
                "teal": 8421631,
                "thistle": 3636451583,
                "tomato": 4284696575,
                "turquoise": 1088475391,
                "violet": 4001558271,
                "wheat": 4125012991,
                "white": 4294967295,
                "whitesmoke": 4126537215,
                "yellow": 4294902015,
                "yellowgreen": 2597139199
            },
            "skipAnimation": false,
            "requestAnimationFrame": "function requestAnimationFrame() { [native code] }",
            "batchedUpdates": "function sO(e,t){var n=i6;i6|=1;try{return e(t)}finally{0===(i6=n)&&(sl=eZ()+500,r2&&r6())}}",
            "willAdvance": "function(){}",
            "assign": "function(t){var e;return i=(e=Object.assign({to:i,now:s,frameLoop:u,colorNames:c,skipAnimation:l,createStringInterpolator:r,requestAnimationFrame:f,batchedUpdates:h,willAdvance:p},function(t){var e={};for(var n in t)void 0!==t[n]&&(e[n]=t[n]);return e}(t))).to,s=e.now,u=e.frameLoop,c=e.colorNames,l=e.skipAnimation,r=e.createStringInterpolator,f=e.requestAnimationFrame,h=e.batchedUpdates,p=e.willAdvance,e}"
        },
        "createInterpolator": "function(t,e,n){if(i.is.fun(t))return t;if(i.is.arr(t))return o({range:t,output:e,extrapolate:n});if(i.is.str(t.output[0]))return r.createStringInterpolator(t);var a=t.output,u=t.range||[0,1],s=t.extrapolateLeft||t.extrapolate||\"extend\",c=t.extrapolateRight||t.extrapolate||\"extend\",l=t.easing||function(t){return t};return function(e){var n=function(t,e){for(var n=1;n<e.length-1&&!(e[n]>=t);++n);return n-1}(e,u);return function(t,e,n,r,i,o,a,u,s){var c=s?s(t):t;if(c<e){if(\"identity\"===a)return c;\"clamp\"===a&&(c=e)}if(c>n){if(\"identity\"===u)return c;\"clamp\"===u&&(c=n)}return r===i?r:e===n?t<=e?r:i:(e===-1/0?c=-c:n===1/0?c-=e:c=(c-e)/(n-e),c=o(c),r===-1/0?c=-c:i===1/0?c+=r:c=c*(i-r)+r,c)}(e,u[n],u[n+1],a[n],a[n+1],l,s,c,t.map)}}",
        "BailSignal": "function e(){var e;return(e=t.call(this,\"An async animation has been interrupted. You see this error because you forgot to use `await` or `.catch(...)` on its returned promise.\")||this).result=void 0,e}",
        "Controller": "function t(t,e){this.id=tc++,this.springs={},this.queue=[],this._flush=void 0,this._initialProps=void 0,this._phase=Y,this._lastAsyncId=0,this._active=new Set,this._state={pauseQueue:new Set,resumeQueue:new Set},this._events={onStart:new Set,onChange:new Set,onRest:new Map},this._onFrame=this._onFrame.bind(this),e&&(this._flush=e),t&&this.start(t)}",
        "FrameValue": "function e(){for(var e,n=arguments.length,r=Array(n),i=0;i<n;i++)r[i]=arguments[i];return(e=t.call.apply(t,[this].concat(r))||this).id=X++,e.key=void 0,e._priority=0,e._children=new Set,e}",
        "Interpolation": "function e(e,n){(r=t.call(this)||this).source=e,r.key=void 0,r.idle=!0,r.calc=void 0,r.calc=o.createInterpolator.apply(void 0,n);var r,i=r._get(),a=o.is.arr(i)?h.AnimatedArray:h.AnimatedValue;return h.setAnimated(g(r),a.create(i)),r}",
        "Spring": "function(t){return(0,t.children)(tw(m(t,[\"children\"])))}",
        "SpringContext": "function(t){var e=t.children,n=m(t,[\"children\"]),r=u.useContext(tm);n=P(function(){return a(a({},r),n)},[r,n.pause,n.cancel,n.immediate,n.config]);var i=tm.Provider;return u.createElement(i,{value:n},e)}",
        "SpringHandle": {
            "create": "function(t){return{get controllers(){return t()},update:function(e){return o.each(t(),function(t,n){t.update(j(e,n,t))}),this},start:function(e){return c(s.mark(function n(){var r;return s.wrap(function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,Promise.all(t().map(function(t,n){var r=j(e,n,t);return t.start(r)}));case 2:return r=n.sent,n.abrupt(\"return\",{value:r.map(function(t){return t.value}),finished:r.every(function(t){return t.finished})});case 4:case\"end\":return n.stop()}},n)}))()},stop:function(e){return o.each(t(),function(t){return t.stop(e)})},pause:function(e){return o.each(t(),function(t){return t.pause(e)})},resume:function(e){return o.each(t(),function(t){return t.resume(e)})}}}"
        },
        "SpringValue": "function e(e,n){var r;if((r=t.call(this)||this).key=void 0,r.animation=new Animation,r.queue=void 0,r._phase=Y,r._state={pauseQueue:new Set,resumeQueue:new Set},r._defaultProps={},r._lastCallId=0,r._lastToId=0,!o.is.und(e)||!o.is.und(n)){var i=o.is.obj(e)?a({},e):a(a({},n),{},{from:e});i.default=!0,r.start(i)}return r}",
        "Trail": "function(t){var e=t.items,n=t.children,r=m(t,[\"items\",\"children\"]),i=tO(e.length,r);return e.map(function(t,e){var r=n(t,e);return o.is.fun(r)?r(i[e]):r})}",
        "Transition": "function(t){var e=t.items,n=t.children,r=m(t,[\"items\",\"children\"]);return u.createElement(u.Fragment,null,tC(e,r)(n))}",
        "config": {
            "default": {
                "tension": 170,
                "friction": 26
            },
            "gentle": {
                "tension": 120,
                "friction": 14
            },
            "wobbly": {
                "tension": 180,
                "friction": 12
            },
            "stiff": {
                "tension": 210,
                "friction": 20
            },
            "slow": {
                "tension": 280,
                "friction": 60
            },
            "molasses": {
                "tension": 280,
                "friction": 120
            }
        },
        "inferTo": "function V(t){var e=function(t){var e={},n=0;if(o.each(t,function(t,r){!L[r]&&(e[r]=t,n++)}),n)return e}(t);if(e){var n={to:e};return o.each(t,function(t,r){return r in e||(n[r]=t)}),n}return a({},t)}",
        "interpolate": "function(t){for(var e=arguments.length,n=Array(e>1?e-1:0),r=1;r<e;r++)n[r-1]=arguments[r];return y.deprecateInterpolate(),new tA(t,n)}",
        "to": "function(t){for(var e=arguments.length,n=Array(e>1?e-1:0),r=1;r<e;r++)n[r-1]=arguments[r];return new tA(t,n)}",
        "update": "function(){return o.Globals.frameLoop.advance()}",
        "useChain": "function(t,e,n){void 0===n&&(n=1e3),i.useLayoutEffect(function(){if(e){var r=0;o.each(t,function(t,i){if(t.current){var a=t.current.controllers;if(a.length){var u=n*e[i];isNaN(u)?u=r:r=u,o.each(a,function(t){o.each(t.queue,function(t){t.delay=u+(t.delay||0)}),t.start()})}}})}else{var i=Promise.resolve();o.each(t,function(t){var e=t.current||{},n=e.controllers,r=e.start;if(n&&n.length){var a=n.map(function(t){var e=t.queue;return t.queue=[],e});i=i.then(function(){return o.each(n,function(t,e){var n;return(n=t.queue).push.apply(n,a[e])}),r()})}})}})}",
        "useSpring": "function tw(t,e){var n=o.is.fun(t),r=tx(1,n?t:[t],n?e||[]:e),i=r[0][0],a=r[1],u=r[2];return n||2==arguments.length?[i,a,u]:i}",
        "useSprings": "function tx(t,e,n){var r=o.is.fun(e)&&e;r&&!n&&(n=[]);var s=u.useRef(0),c=o.useForceUpdate(),l=u.useState(function(){return{ctrls:[],queue:[],flush:function(t,e){var n=th(t,e);return!(s.current>0)||l.queue.length||Object.keys(n).some(function(e){return!t.springs[e]})?new Promise(function(r){tp(t,n),l.queue.push(function(){r(tf(t,e))}),c()}):tf(t,e)}}})[0],f=u.useRef(),h=[].concat(l.ctrls),p=[],d=o.usePrev(t)||0,v=h.slice(t,d);function y(t,n){for(var i=t;i<n;i++){var a=h[i]||(h[i]=new tl(null,l.flush)),u=r?r(i,a):e[i];u&&(u=p[i]=function(t){var e=ta(t);return o.is.und(e.default)&&(e.default=T(e,[!0===e.immediate&&\"immediate\"])),e}(u),0==i&&(f.current=u.ref,u.ref=void 0))}}P(function(){h.length=t,y(d,t)},[t]),P(function(){y(0,Math.min(d,t))},n);var m=u.useMemo(function(){return t_.create(function(){return l.ctrls})},[]),g=h.map(function(t,e){return th(t,p[e])}),b=tb();i.useLayoutEffect(function(){s.current++,l.ctrls=h,f.current&&(f.current.current=m);var t=l.queue;t.length&&(l.queue=[],o.each(t,function(t){return t()})),o.each(v,function(t){return t.dispose()}),o.each(h,function(t,e){tp(t,g[e]),t.start({default:b});var n=p[e];n&&(f.current?t.queue.push(n):t.start(n))})}),o.useOnce(function(){return function(){o.each(l.ctrls,function(t){return t.dispose()})}});var _=g.map(function(t){return a({},t)});return r||3==arguments.length?[_,m.start,m.stop]:_}",
        "useTrail": "function tO(t,e,n){var r=o.is.fun(e)&&e;r&&!n&&(n=[]);var a=[],u=tx(t,function(t,n){return a[t]=n,j(e,t,n)},n||[{}]);if(i.useLayoutEffect(function(){for(var t=o.is.obj(e)&&e.reverse,n=0;n<a.length;n++){var r=a[n+(t?1:-1)];r&&a[n].update({to:r.springs}).start()}},n),r||3==arguments.length){var s=u[1];return u[1]=d.useCallbackOne(function(t){var e=o.is.obj(t)&&t.reverse;return s(function(n,r){var i=j(t,n,r),o=a[n+(e?1:-1)];return o&&(i.to=o.springs),i})},n),u}return u[0]}",
        "useTransition": "function tC(t,e,n){var r=e.ref,s=e.reset,c=e.sort,l=e.trail,f=void 0===l?0:l,h=e.expires,p=void 0===h||h,d=o.toArray(t),v=[],y=function(t,e){var n=e.key,r=e.keys,i=void 0===r?n:r;return o.is.und(i)?t:o.is.fun(i)?t.map(i):o.toArray(i)}(d,e),m=u.useRef(null),g=s?null:m.current;i.useLayoutEffect(function(){m.current=v}),o.useOnce(function(){return function(){return o.each(m.current,function(t){t.expired&&clearTimeout(t.expirationId),t.ctrl.dispose()})}});var b=[];if(g&&o.each(g,function(t,e){t.expired?clearTimeout(t.expirationId):~(e=b[e]=y.indexOf(t.key))&&(v[e]=t)}),o.each(d,function(t,e){v[e]||(v[e]={key:y[e],item:t,phase:tk,ctrl:new tl})}),b.length){var _=-1;o.each(b,function(t,n){var r=g[n];~t?(_=v.indexOf(r),v[_]=a(a({},r),{},{item:d[t]})):e.leave&&v.splice(++_,0,r)})}o.is.fun(c)&&v.sort(function(t,e){return c(t.item,e.item)});var x=-f,w=o.useForceUpdate(),O=T(e),k=new Map;o.each(v,function(t,n){var r,i,u=t.key,s=t.phase;if(s==tk)r=e.enter,i=tS;else{var c=0>y.indexOf(u);if(s!=tP){if(c)r=e.leave,i=tP;else{if(!(r=e.update))return;i=tE}}else{if(c)return;r=e.enter,i=tS}}if(r=C(r,t.item,n),!(r=o.is.obj(r)?V(r):{to:r}).config){var l=e.config||O.config;r.config=C(l,t.item,n)}var h=a(a({},O),{},{delay:x+=f,reset:!1},r);if(i==tS&&o.is.und(h.from)){var d=o.is.und(e.initial)||g?e.from:e.initial;h.from=C(d,t.item,n)}var v=h.onRest;h.onRest=h.onNoopRest=function(t){var e=m.current,n=e.find(function(t){return t.key===u});if(n){if(o.is.fun(v)&&!0!==t.noop&&v(t,n),t.cancelled&&n.phase!=tE){n.phase=s;return}if(n.ctrl.idle){var r=e.every(function(t){return t.ctrl.idle});if(n.phase==tP){var i=C(p,n.item);if(!1!==i){var a=!0===i?0:i;if(n.expired=!0,!r&&a>0){a<=2147483647&&(n.expirationId=setTimeout(w,a));return}}}r&&e.some(function(t){return t.expired})&&w()}}};var b=th(t.ctrl,h);k.set(t,{phase:i,springs:b,payload:h})});var S=tb();i.useLayoutEffect(function(){o.each(v,function(t){t.ctrl.start({default:S})})},[S]);var E=u.useMemo(function(){return t_.create(function(){return m.current.map(function(t){return t.ctrl})})},[]);u.useImperativeHandle(r,function(){return E}),i.useLayoutEffect(function(){o.each(k,function(t,e){var n=t.phase,i=t.springs,o=t.payload;tp(e.ctrl,i),!S.cancel&&(e.phase=n,n==tS&&e.ctrl.start({default:S}),e.ctrl[r?\"update\":\"start\"](o))})},s?void 0:n);var P=function(t){return u.createElement(u.Fragment,null,v.map(function(e,n){var r=t(a({},(k.get(e)||e.ctrl).springs),e.item,e,n);return r&&r.type?u.createElement(r.type,a({},r.props,{key:o.is.str(e.key)||o.is.num(e.key)?e.key:e.ctrl.id,ref:r.ref})):r}))};return 3==arguments.length?[P,E.start,E.stop]:P}"
    }
}