{
    "exports": {
        "v": [
            {
                "name": "version",
                "reg": {
                    "exec": "function exec() { [native code] }",
                    "dotAll": false,
                    "flags": "",
                    "global": false,
                    "hasIndices": false,
                    "ignoreCase": false,
                    "multiline": false,
                    "source": "^(\\d*)$",
                    "sticky": false,
                    "unicode": false,
                    "compile": "function compile() { [native code] }",
                    "test": "function test() { [native code] }",
                    "unicodeSets": false
                },
                "format": "%s"
            }
        ],
        "o": [
            {
                "name": "origin",
                "reg": {
                    "exec": "function exec() { [native code] }",
                    "dotAll": false,
                    "flags": "",
                    "global": false,
                    "hasIndices": false,
                    "ignoreCase": false,
                    "multiline": false,
                    "source": "^(\\S*) (\\d*) (\\d*) (\\S*) IP(\\d) (\\S*)",
                    "sticky": false,
                    "unicode": false,
                    "compile": "function compile() { [native code] }",
                    "test": "function test() { [native code] }",
                    "unicodeSets": false
                },
                "names": [
                    "username",
                    "sessionId",
                    "sessionVersion",
                    "netType",
                    "ipVer",
                    "address"
                ],
                "format": "%s %s %d %s IP%d %s"
            }
        ],
        "s": [
            {
                "name": "name",
                "reg": {
                    "exec": "function exec() { [native code] }",
                    "dotAll": false,
                    "flags": "",
                    "global": false,
                    "hasIndices": false,
                    "ignoreCase": false,
                    "multiline": false,
                    "source": "(.*)",
                    "sticky": false,
                    "unicode": false,
                    "compile": "function compile() { [native code] }",
                    "test": "function test() { [native code] }",
                    "unicodeSets": false
                },
                "format": "%s"
            }
        ],
        "i": [
            {
                "name": "description",
                "reg": {
                    "exec": "function exec() { [native code] }",
                    "dotAll": false,
                    "flags": "",
                    "global": false,
                    "hasIndices": false,
                    "ignoreCase": false,
                    "multiline": false,
                    "source": "(.*)",
                    "sticky": false,
                    "unicode": false,
                    "compile": "function compile() { [native code] }",
                    "test": "function test() { [native code] }",
                    "unicodeSets": false
                },
                "format": "%s"
            }
        ],
        "u": [
            {
                "name": "uri",
                "reg": {
                    "exec": "function exec() { [native code] }",
                    "dotAll": false,
                    "flags": "",
                    "global": false,
                    "hasIndices": false,
                    "ignoreCase": false,
                    "multiline": false,
                    "source": "(.*)",
                    "sticky": false,
                    "unicode": false,
                    "compile": "function compile() { [native code] }",
                    "test": "function test() { [native code] }",
                    "unicodeSets": false
                },
                "format": "%s"
            }
        ],
        "e": [
            {
                "name": "email",
                "reg": {
                    "exec": "function exec() { [native code] }",
                    "dotAll": false,
                    "flags": "",
                    "global": false,
                    "hasIndices": false,
                    "ignoreCase": false,
                    "multiline": false,
                    "source": "(.*)",
                    "sticky": false,
                    "unicode": false,
                    "compile": "function compile() { [native code] }",
                    "test": "function test() { [native code] }",
                    "unicodeSets": false
                },
                "format": "%s"
            }
        ],
        "p": [
            {
                "name": "phone",
                "reg": {
                    "exec": "function exec() { [native code] }",
                    "dotAll": false,
                    "flags": "",
                    "global": false,
                    "hasIndices": false,
                    "ignoreCase": false,
                    "multiline": false,
                    "source": "(.*)",
                    "sticky": false,
                    "unicode": false,
                    "compile": "function compile() { [native code] }",
                    "test": "function test() { [native code] }",
                    "unicodeSets": false
                },
                "format": "%s"
            }
        ],
        "z": [
            {
                "name": "timezones",
                "reg": {
                    "exec": "function exec() { [native code] }",
                    "dotAll": false,
                    "flags": "",
                    "global": false,
                    "hasIndices": false,
                    "ignoreCase": false,
                    "multiline": false,
                    "source": "(.*)",
                    "sticky": false,
                    "unicode": false,
                    "compile": "function compile() { [native code] }",
                    "test": "function test() { [native code] }",
                    "unicodeSets": false
                },
                "format": "%s"
            }
        ],
        "r": [
            {
                "name": "repeats",
                "reg": {
                    "exec": "function exec() { [native code] }",
                    "dotAll": false,
                    "flags": "",
                    "global": false,
                    "hasIndices": false,
                    "ignoreCase": false,
                    "multiline": false,
                    "source": "(.*)",
                    "sticky": false,
                    "unicode": false,
                    "compile": "function compile() { [native code] }",
                    "test": "function test() { [native code] }",
                    "unicodeSets": false
                },
                "format": "%s"
            }
        ],
        "t": [
            {
                "name": "timing",
                "reg": {
                    "exec": "function exec() { [native code] }",
                    "dotAll": false,
                    "flags": "",
                    "global": false,
                    "hasIndices": false,
                    "ignoreCase": false,
                    "multiline": false,
                    "source": "^(\\d*) (\\d*)",
                    "sticky": false,
                    "unicode": false,
                    "compile": "function compile() { [native code] }",
                    "test": "function test() { [native code] }",
                    "unicodeSets": false
                },
                "names": [
                    "start",
                    "stop"
                ],
                "format": "%d %d"
            }
        ],
        "c": [
            {
                "name": "connection",
                "reg": {
                    "exec": "function exec() { [native code] }",
                    "dotAll": false,
                    "flags": "",
                    "global": false,
                    "hasIndices": false,
                    "ignoreCase": false,
                    "multiline": false,
                    "source": "^IN IP(\\d) (\\S*)",
                    "sticky": false,
                    "unicode": false,
                    "compile": "function compile() { [native code] }",
                    "test": "function test() { [native code] }",
                    "unicodeSets": false
                },
                "names": [
                    "version",
                    "ip"
                ],
                "format": "IN IP%d %s"
            }
        ],
        "b": [
            {
                "push": "bandwidth",
                "reg": {
                    "exec": "function exec() { [native code] }",
                    "dotAll": false,
                    "flags": "",
                    "global": false,
                    "hasIndices": false,
                    "ignoreCase": false,
                    "multiline": false,
                    "source": "^(TIAS|AS|CT|RR|RS):(\\d*)",
                    "sticky": false,
                    "unicode": false,
                    "compile": "function compile() { [native code] }",
                    "test": "function test() { [native code] }",
                    "unicodeSets": false
                },
                "names": [
                    "type",
                    "limit"
                ],
                "format": "%s:%s"
            }
        ],
        "m": [
            {
                "reg": {
                    "exec": "function exec() { [native code] }",
                    "dotAll": false,
                    "flags": "",
                    "global": false,
                    "hasIndices": false,
                    "ignoreCase": false,
                    "multiline": false,
                    "source": "^(\\w*) (\\d*) ([\\w\\/]*)(?: (.*))?",
                    "sticky": false,
                    "unicode": false,
                    "compile": "function compile() { [native code] }",
                    "test": "function test() { [native code] }",
                    "unicodeSets": false
                },
                "names": [
                    "type",
                    "port",
                    "protocol",
                    "payloads"
                ],
                "format": "%s %d %s %s"
            }
        ],
        "a": [
            {
                "push": "rtp",
                "reg": {
                    "exec": "function exec() { [native code] }",
                    "dotAll": false,
                    "flags": "",
                    "global": false,
                    "hasIndices": false,
                    "ignoreCase": false,
                    "multiline": false,
                    "source": "^rtpmap:(\\d*) ([\\w\\-\\.]*)(?:\\s*\\/(\\d*)(?:\\s*\\/(\\S*))?)?",
                    "sticky": false,
                    "unicode": false,
                    "compile": "function compile() { [native code] }",
                    "test": "function test() { [native code] }",
                    "unicodeSets": false
                },
                "names": [
                    "payload",
                    "codec",
                    "rate",
                    "encoding"
                ],
                "format": "function(e){return e.encoding?\"rtpmap:%d %s/%s/%s\":e.rate?\"rtpmap:%d %s/%s\":\"rtpmap:%d %s\"}"
            },
            {
                "push": "fmtp",
                "reg": {
                    "exec": "function exec() { [native code] }",
                    "dotAll": false,
                    "flags": "",
                    "global": false,
                    "hasIndices": false,
                    "ignoreCase": false,
                    "multiline": false,
                    "source": "^fmtp:(\\d*) ([\\S| ]*)",
                    "sticky": false,
                    "unicode": false,
                    "compile": "function compile() { [native code] }",
                    "test": "function test() { [native code] }",
                    "unicodeSets": false
                },
                "names": [
                    "payload",
                    "config"
                ],
                "format": "fmtp:%d %s"
            },
            {
                "name": "control",
                "reg": {
                    "exec": "function exec() { [native code] }",
                    "dotAll": false,
                    "flags": "",
                    "global": false,
                    "hasIndices": false,
                    "ignoreCase": false,
                    "multiline": false,
                    "source": "^control:(.*)",
                    "sticky": false,
                    "unicode": false,
                    "compile": "function compile() { [native code] }",
                    "test": "function test() { [native code] }",
                    "unicodeSets": false
                },
                "format": "control:%s"
            },
            {
                "name": "rtcp",
                "reg": {
                    "exec": "function exec() { [native code] }",
                    "dotAll": false,
                    "flags": "",
                    "global": false,
                    "hasIndices": false,
                    "ignoreCase": false,
                    "multiline": false,
                    "source": "^rtcp:(\\d*)(?: (\\S*) IP(\\d) (\\S*))?",
                    "sticky": false,
                    "unicode": false,
                    "compile": "function compile() { [native code] }",
                    "test": "function test() { [native code] }",
                    "unicodeSets": false
                },
                "names": [
                    "port",
                    "netType",
                    "ipVer",
                    "address"
                ],
                "format": "function(e){return null!=e.address?\"rtcp:%d %s IP%d %s\":\"rtcp:%d\"}"
            },
            {
                "push": "rtcpFbTrrInt",
                "reg": {
                    "exec": "function exec() { [native code] }",
                    "dotAll": false,
                    "flags": "",
                    "global": false,
                    "hasIndices": false,
                    "ignoreCase": false,
                    "multiline": false,
                    "source": "^rtcp-fb:(\\*|\\d*) trr-int (\\d*)",
                    "sticky": false,
                    "unicode": false,
                    "compile": "function compile() { [native code] }",
                    "test": "function test() { [native code] }",
                    "unicodeSets": false
                },
                "names": [
                    "payload",
                    "value"
                ],
                "format": "rtcp-fb:%d trr-int %d"
            },
            {
                "push": "rtcpFb",
                "reg": {
                    "exec": "function exec() { [native code] }",
                    "dotAll": false,
                    "flags": "",
                    "global": false,
                    "hasIndices": false,
                    "ignoreCase": false,
                    "multiline": false,
                    "source": "^rtcp-fb:(\\*|\\d*) ([\\w-_]*)(?: ([\\w-_]*))?",
                    "sticky": false,
                    "unicode": false,
                    "compile": "function compile() { [native code] }",
                    "test": "function test() { [native code] }",
                    "unicodeSets": false
                },
                "names": [
                    "payload",
                    "type",
                    "subtype"
                ],
                "format": "function(e){return null!=e.subtype?\"rtcp-fb:%s %s %s\":\"rtcp-fb:%s %s\"}"
            },
            {
                "push": "ext",
                "reg": {
                    "exec": "function exec() { [native code] }",
                    "dotAll": false,
                    "flags": "",
                    "global": false,
                    "hasIndices": false,
                    "ignoreCase": false,
                    "multiline": false,
                    "source": "^extmap:(\\d+)(?:\\/(\\w+))? (\\S*)(?: (\\S*))?",
                    "sticky": false,
                    "unicode": false,
                    "compile": "function compile() { [native code] }",
                    "test": "function test() { [native code] }",
                    "unicodeSets": false
                },
                "names": [
                    "value",
                    "direction",
                    "uri",
                    "config"
                ],
                "format": "function(e){return\"extmap:%d\"+(e.direction?\"/%s\":\"%v\")+\" %s\"+(e.config?\" %s\":\"\")}"
            },
            {
                "push": "crypto",
                "reg": {
                    "exec": "function exec() { [native code] }",
                    "dotAll": false,
                    "flags": "",
                    "global": false,
                    "hasIndices": false,
                    "ignoreCase": false,
                    "multiline": false,
                    "source": "^crypto:(\\d*) ([\\w_]*) (\\S*)(?: (\\S*))?",
                    "sticky": false,
                    "unicode": false,
                    "compile": "function compile() { [native code] }",
                    "test": "function test() { [native code] }",
                    "unicodeSets": false
                },
                "names": [
                    "id",
                    "suite",
                    "config",
                    "sessionConfig"
                ],
                "format": "function(e){return null!=e.sessionConfig?\"crypto:%d %s %s %s\":\"crypto:%d %s %s\"}"
            },
            {
                "name": "setup",
                "reg": {
                    "exec": "function exec() { [native code] }",
                    "dotAll": false,
                    "flags": "",
                    "global": false,
                    "hasIndices": false,
                    "ignoreCase": false,
                    "multiline": false,
                    "source": "^setup:(\\w*)",
                    "sticky": false,
                    "unicode": false,
                    "compile": "function compile() { [native code] }",
                    "test": "function test() { [native code] }",
                    "unicodeSets": false
                },
                "format": "setup:%s"
            },
            {
                "name": "mid",
                "reg": {
                    "exec": "function exec() { [native code] }",
                    "dotAll": false,
                    "flags": "",
                    "global": false,
                    "hasIndices": false,
                    "ignoreCase": false,
                    "multiline": false,
                    "source": "^mid:([^\\s]*)",
                    "sticky": false,
                    "unicode": false,
                    "compile": "function compile() { [native code] }",
                    "test": "function test() { [native code] }",
                    "unicodeSets": false
                },
                "format": "mid:%s"
            },
            {
                "name": "msid",
                "reg": {
                    "exec": "function exec() { [native code] }",
                    "dotAll": false,
                    "flags": "",
                    "global": false,
                    "hasIndices": false,
                    "ignoreCase": false,
                    "multiline": false,
                    "source": "^msid:(.*)",
                    "sticky": false,
                    "unicode": false,
                    "compile": "function compile() { [native code] }",
                    "test": "function test() { [native code] }",
                    "unicodeSets": false
                },
                "format": "msid:%s"
            },
            {
                "name": "ptime",
                "reg": {
                    "exec": "function exec() { [native code] }",
                    "dotAll": false,
                    "flags": "",
                    "global": false,
                    "hasIndices": false,
                    "ignoreCase": false,
                    "multiline": false,
                    "source": "^ptime:(\\d*)",
                    "sticky": false,
                    "unicode": false,
                    "compile": "function compile() { [native code] }",
                    "test": "function test() { [native code] }",
                    "unicodeSets": false
                },
                "format": "ptime:%d"
            },
            {
                "name": "maxptime",
                "reg": {
                    "exec": "function exec() { [native code] }",
                    "dotAll": false,
                    "flags": "",
                    "global": false,
                    "hasIndices": false,
                    "ignoreCase": false,
                    "multiline": false,
                    "source": "^maxptime:(\\d*)",
                    "sticky": false,
                    "unicode": false,
                    "compile": "function compile() { [native code] }",
                    "test": "function test() { [native code] }",
                    "unicodeSets": false
                },
                "format": "maxptime:%d"
            },
            {
                "name": "direction",
                "reg": {
                    "exec": "function exec() { [native code] }",
                    "dotAll": false,
                    "flags": "",
                    "global": false,
                    "hasIndices": false,
                    "ignoreCase": false,
                    "multiline": false,
                    "source": "^(sendrecv|recvonly|sendonly|inactive)",
                    "sticky": false,
                    "unicode": false,
                    "compile": "function compile() { [native code] }",
                    "test": "function test() { [native code] }",
                    "unicodeSets": false
                },
                "format": "%s"
            },
            {
                "name": "icelite",
                "reg": {
                    "exec": "function exec() { [native code] }",
                    "dotAll": false,
                    "flags": "",
                    "global": false,
                    "hasIndices": false,
                    "ignoreCase": false,
                    "multiline": false,
                    "source": "^(ice-lite)",
                    "sticky": false,
                    "unicode": false,
                    "compile": "function compile() { [native code] }",
                    "test": "function test() { [native code] }",
                    "unicodeSets": false
                },
                "format": "%s"
            },
            {
                "name": "iceUfrag",
                "reg": {
                    "exec": "function exec() { [native code] }",
                    "dotAll": false,
                    "flags": "",
                    "global": false,
                    "hasIndices": false,
                    "ignoreCase": false,
                    "multiline": false,
                    "source": "^ice-ufrag:(\\S*)",
                    "sticky": false,
                    "unicode": false,
                    "compile": "function compile() { [native code] }",
                    "test": "function test() { [native code] }",
                    "unicodeSets": false
                },
                "format": "ice-ufrag:%s"
            },
            {
                "name": "icePwd",
                "reg": {
                    "exec": "function exec() { [native code] }",
                    "dotAll": false,
                    "flags": "",
                    "global": false,
                    "hasIndices": false,
                    "ignoreCase": false,
                    "multiline": false,
                    "source": "^ice-pwd:(\\S*)",
                    "sticky": false,
                    "unicode": false,
                    "compile": "function compile() { [native code] }",
                    "test": "function test() { [native code] }",
                    "unicodeSets": false
                },
                "format": "ice-pwd:%s"
            },
            {
                "name": "fingerprint",
                "reg": {
                    "exec": "function exec() { [native code] }",
                    "dotAll": false,
                    "flags": "",
                    "global": false,
                    "hasIndices": false,
                    "ignoreCase": false,
                    "multiline": false,
                    "source": "^fingerprint:(\\S*) (\\S*)",
                    "sticky": false,
                    "unicode": false,
                    "compile": "function compile() { [native code] }",
                    "test": "function test() { [native code] }",
                    "unicodeSets": false
                },
                "names": [
                    "type",
                    "hash"
                ],
                "format": "fingerprint:%s %s"
            },
            {
                "push": "candidates",
                "reg": {
                    "exec": "function exec() { [native code] }",
                    "dotAll": false,
                    "flags": "",
                    "global": false,
                    "hasIndices": false,
                    "ignoreCase": false,
                    "multiline": false,
                    "source": "^candidate:(\\S*) (\\d*) (\\S*) (\\d*) (\\S*) (\\d*) typ (\\S*)(?: raddr (\\S*) rport (\\d*))?(?: tcptype (\\S*))?(?: generation (\\d*))?(?: network-id (\\d*))?(?: network-cost (\\d*))?",
                    "sticky": false,
                    "unicode": false,
                    "compile": "function compile() { [native code] }",
                    "test": "function test() { [native code] }",
                    "unicodeSets": false
                },
                "names": [
                    "foundation",
                    "component",
                    "transport",
                    "priority",
                    "ip",
                    "port",
                    "type",
                    "raddr",
                    "rport",
                    "tcptype",
                    "generation",
                    "network-id",
                    "network-cost"
                ],
                "format": "function(e){var t=\"candidate:%s %d %s %d %s %d typ %s\";return t+=(null!=e.raddr?\" raddr %s rport %d\":\"%v%v\")+(null!=e.tcptype?\" tcptype %s\":\"%v\"),null!=e.generation&&(t+=\" generation %d\"),t+=(null!=e[\"network-id\"]?\" network-id %d\":\"%v\")+(null!=e[\"network-cost\"]?\" network-cost %d\":\"%v\")}"
            },
            {
                "name": "endOfCandidates",
                "reg": {
                    "exec": "function exec() { [native code] }",
                    "dotAll": false,
                    "flags": "",
                    "global": false,
                    "hasIndices": false,
                    "ignoreCase": false,
                    "multiline": false,
                    "source": "^(end-of-candidates)",
                    "sticky": false,
                    "unicode": false,
                    "compile": "function compile() { [native code] }",
                    "test": "function test() { [native code] }",
                    "unicodeSets": false
                },
                "format": "%s"
            },
            {
                "name": "remoteCandidates",
                "reg": {
                    "exec": "function exec() { [native code] }",
                    "dotAll": false,
                    "flags": "",
                    "global": false,
                    "hasIndices": false,
                    "ignoreCase": false,
                    "multiline": false,
                    "source": "^remote-candidates:(.*)",
                    "sticky": false,
                    "unicode": false,
                    "compile": "function compile() { [native code] }",
                    "test": "function test() { [native code] }",
                    "unicodeSets": false
                },
                "format": "remote-candidates:%s"
            },
            {
                "name": "iceOptions",
                "reg": {
                    "exec": "function exec() { [native code] }",
                    "dotAll": false,
                    "flags": "",
                    "global": false,
                    "hasIndices": false,
                    "ignoreCase": false,
                    "multiline": false,
                    "source": "^ice-options:(\\S*)",
                    "sticky": false,
                    "unicode": false,
                    "compile": "function compile() { [native code] }",
                    "test": "function test() { [native code] }",
                    "unicodeSets": false
                },
                "format": "ice-options:%s"
            },
            {
                "push": "ssrcs",
                "reg": {
                    "exec": "function exec() { [native code] }",
                    "dotAll": false,
                    "flags": "",
                    "global": false,
                    "hasIndices": false,
                    "ignoreCase": false,
                    "multiline": false,
                    "source": "^ssrc:(\\d*) ([\\w_]*)(?::(.*))?",
                    "sticky": false,
                    "unicode": false,
                    "compile": "function compile() { [native code] }",
                    "test": "function test() { [native code] }",
                    "unicodeSets": false
                },
                "names": [
                    "id",
                    "attribute",
                    "value"
                ],
                "format": "function(e){var t=\"ssrc:%d\";return null!=e.attribute&&(t+=\" %s\",null!=e.value&&(t+=\":%s\")),t}"
            },
            {
                "push": "ssrcGroups",
                "reg": {
                    "exec": "function exec() { [native code] }",
                    "dotAll": false,
                    "flags": "",
                    "global": false,
                    "hasIndices": false,
                    "ignoreCase": false,
                    "multiline": false,
                    "source": "^ssrc-group:([\\x21\\x23\\x24\\x25\\x26\\x27\\x2A\\x2B\\x2D\\x2E\\w]*) (.*)",
                    "sticky": false,
                    "unicode": false,
                    "compile": "function compile() { [native code] }",
                    "test": "function test() { [native code] }",
                    "unicodeSets": false
                },
                "names": [
                    "semantics",
                    "ssrcs"
                ],
                "format": "ssrc-group:%s %s"
            },
            {
                "name": "msidSemantic",
                "reg": {
                    "exec": "function exec() { [native code] }",
                    "dotAll": false,
                    "flags": "",
                    "global": false,
                    "hasIndices": false,
                    "ignoreCase": false,
                    "multiline": false,
                    "source": "^msid-semantic:\\s?(\\w*) (\\S*)",
                    "sticky": false,
                    "unicode": false,
                    "compile": "function compile() { [native code] }",
                    "test": "function test() { [native code] }",
                    "unicodeSets": false
                },
                "names": [
                    "semantic",
                    "token"
                ],
                "format": "msid-semantic: %s %s"
            },
            {
                "push": "groups",
                "reg": {
                    "exec": "function exec() { [native code] }",
                    "dotAll": false,
                    "flags": "",
                    "global": false,
                    "hasIndices": false,
                    "ignoreCase": false,
                    "multiline": false,
                    "source": "^group:(\\w*) (.*)",
                    "sticky": false,
                    "unicode": false,
                    "compile": "function compile() { [native code] }",
                    "test": "function test() { [native code] }",
                    "unicodeSets": false
                },
                "names": [
                    "type",
                    "mids"
                ],
                "format": "group:%s %s"
            },
            {
                "name": "rtcpMux",
                "reg": {
                    "exec": "function exec() { [native code] }",
                    "dotAll": false,
                    "flags": "",
                    "global": false,
                    "hasIndices": false,
                    "ignoreCase": false,
                    "multiline": false,
                    "source": "^(rtcp-mux)",
                    "sticky": false,
                    "unicode": false,
                    "compile": "function compile() { [native code] }",
                    "test": "function test() { [native code] }",
                    "unicodeSets": false
                },
                "format": "%s"
            },
            {
                "name": "rtcpRsize",
                "reg": {
                    "exec": "function exec() { [native code] }",
                    "dotAll": false,
                    "flags": "",
                    "global": false,
                    "hasIndices": false,
                    "ignoreCase": false,
                    "multiline": false,
                    "source": "^(rtcp-rsize)",
                    "sticky": false,
                    "unicode": false,
                    "compile": "function compile() { [native code] }",
                    "test": "function test() { [native code] }",
                    "unicodeSets": false
                },
                "format": "%s"
            },
            {
                "name": "sctpmap",
                "reg": {
                    "exec": "function exec() { [native code] }",
                    "dotAll": false,
                    "flags": "",
                    "global": false,
                    "hasIndices": false,
                    "ignoreCase": false,
                    "multiline": false,
                    "source": "^sctpmap:([\\w_\\/]*) (\\S*)(?: (\\S*))?",
                    "sticky": false,
                    "unicode": false,
                    "compile": "function compile() { [native code] }",
                    "test": "function test() { [native code] }",
                    "unicodeSets": false
                },
                "names": [
                    "sctpmapNumber",
                    "app",
                    "maxMessageSize"
                ],
                "format": "function(e){return null!=e.maxMessageSize?\"sctpmap:%s %s %s\":\"sctpmap:%s %s\"}"
            },
            {
                "name": "xGoogleFlag",
                "reg": {
                    "exec": "function exec() { [native code] }",
                    "dotAll": false,
                    "flags": "",
                    "global": false,
                    "hasIndices": false,
                    "ignoreCase": false,
                    "multiline": false,
                    "source": "^x-google-flag:([^\\s]*)",
                    "sticky": false,
                    "unicode": false,
                    "compile": "function compile() { [native code] }",
                    "test": "function test() { [native code] }",
                    "unicodeSets": false
                },
                "format": "x-google-flag:%s"
            },
            {
                "push": "rids",
                "reg": {
                    "exec": "function exec() { [native code] }",
                    "dotAll": false,
                    "flags": "",
                    "global": false,
                    "hasIndices": false,
                    "ignoreCase": false,
                    "multiline": false,
                    "source": "^rid:([\\d\\w]+) (\\w+)(?: ([\\S| ]*))?",
                    "sticky": false,
                    "unicode": false,
                    "compile": "function compile() { [native code] }",
                    "test": "function test() { [native code] }",
                    "unicodeSets": false
                },
                "names": [
                    "id",
                    "direction",
                    "params"
                ],
                "format": "function(e){return e.params?\"rid:%s %s %s\":\"rid:%s %s\"}"
            },
            {
                "push": "imageattrs",
                "reg": {
                    "exec": "function exec() { [native code] }",
                    "dotAll": false,
                    "flags": "",
                    "global": false,
                    "hasIndices": false,
                    "ignoreCase": false,
                    "multiline": false,
                    "source": "^imageattr:(\\d+|\\*)[\\s\\t]+(send|recv)[\\s\\t]+(\\*|\\[\\S+\\](?:[\\s\\t]+\\[\\S+\\])*)(?:[\\s\\t]+(recv|send)[\\s\\t]+(\\*|\\[\\S+\\](?:[\\s\\t]+\\[\\S+\\])*))?",
                    "sticky": false,
                    "unicode": false,
                    "compile": "function compile() { [native code] }",
                    "test": "function test() { [native code] }",
                    "unicodeSets": false
                },
                "names": [
                    "pt",
                    "dir1",
                    "attrs1",
                    "dir2",
                    "attrs2"
                ],
                "format": "function(e){return\"imageattr:%s %s %s\"+(e.dir2?\" %s %s\":\"\")}"
            },
            {
                "name": "simulcast",
                "reg": {
                    "exec": "function exec() { [native code] }",
                    "dotAll": false,
                    "flags": "",
                    "global": false,
                    "hasIndices": false,
                    "ignoreCase": false,
                    "multiline": false,
                    "source": "^simulcast:(send|recv) ([a-zA-Z0-9\\-_~;,]+)(?:\\s?(send|recv) ([a-zA-Z0-9\\-_~;,]+))?$",
                    "sticky": false,
                    "unicode": false,
                    "compile": "function compile() { [native code] }",
                    "test": "function test() { [native code] }",
                    "unicodeSets": false
                },
                "names": [
                    "dir1",
                    "list1",
                    "dir2",
                    "list2"
                ],
                "format": "function(e){return\"simulcast:%s %s\"+(e.dir2?\" %s %s\":\"\")}"
            },
            {
                "name": "simulcast_03",
                "reg": {
                    "exec": "function exec() { [native code] }",
                    "dotAll": false,
                    "flags": "",
                    "global": false,
                    "hasIndices": false,
                    "ignoreCase": false,
                    "multiline": false,
                    "source": "^simulcast:[\\s\\t]+([\\S+\\s\\t]+)$",
                    "sticky": false,
                    "unicode": false,
                    "compile": "function compile() { [native code] }",
                    "test": "function test() { [native code] }",
                    "unicodeSets": false
                },
                "names": [
                    "value"
                ],
                "format": "simulcast: %s"
            },
            {
                "name": "framerate",
                "reg": {
                    "exec": "function exec() { [native code] }",
                    "dotAll": false,
                    "flags": "",
                    "global": false,
                    "hasIndices": false,
                    "ignoreCase": false,
                    "multiline": false,
                    "source": "^framerate:(\\d+(?:$|\\.\\d+))",
                    "sticky": false,
                    "unicode": false,
                    "compile": "function compile() { [native code] }",
                    "test": "function test() { [native code] }",
                    "unicodeSets": false
                },
                "format": "framerate:%s"
            },
            {
                "push": "invalid",
                "names": [
                    "value"
                ],
                "reg": {
                    "exec": "function exec() { [native code] }",
                    "dotAll": false,
                    "flags": "",
                    "global": false,
                    "hasIndices": false,
                    "ignoreCase": false,
                    "multiline": false,
                    "source": "(.*)",
                    "sticky": false,
                    "unicode": false,
                    "compile": "function compile() { [native code] }",
                    "test": "function test() { [native code] }",
                    "unicodeSets": false
                },
                "format": "%s"
            }
        ]
    }
}