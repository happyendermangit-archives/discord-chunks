{
    "exports": {
        "default": {
            "initializedCount": 0,
            "actions": {
                "GUILD_DELETE": "e=>this.handleGuildDelete(e)",
                "CHANNEL_SELECT": "e=>this.handleChannelSelect(e)",
                "POST_CONNECTION_OPEN": "e=>this.handleConnectionOpen(e)"
            },
            "stores": {
                "toJSON": "function(){return Array.from(this)}",
                "get": "function get() { [native code] }",
                "set": "function set() { [native code] }",
                "has": "function has() { [native code] }",
                "delete": "function delete() { [native code] }",
                "clear": "function clear() { [native code] }",
                "entries": "function entries() { [native code] }",
                "forEach": "function forEach() { [native code] }",
                "keys": "function keys() { [native code] }",
                "size": 0,
                "values": "function values() { [native code] }"
            },
            "handleConnectionOpen": "e=>{var _;null!=(R=null!==(_=null!=R?R:i.default.getGuildId())&&void 0!==_?_:null)&&this._openOnboardingIfIncomplete(R)}",
            "handleChannelSelect": "e=>{let{guildId:_,channelId:E}=e;if(R===_&&l===E)return;if(R=null!=_?_:null,l=null!=E?E:null,null==R||null==l)return;let t=r.default.getGuild(_);null!=t&&t.hasFeature(N.GuildFeatures.COMMUNITY)&&T.default.shouldFetchPrompts(R,8*a.default.Millis.HOUR)&&(0,s.loadOnboardingPrompts)(R),this._openOnboardingIfIncomplete(R,E)}",
            "handleGuildDelete": "e=>{let{guild:_}=e;(0,S.discardOnboardingPromise)(_.id)}",
            "_openOnboardingIfIncomplete": "async(e,_)=>{var E,t;if((0,S.isOnboardingActiveForGuild)(e)){(0,o.transitionTo)(N.Routes.CHANNEL(e,O.StaticChannelRoute.GUILD_ONBOARDING));return}let i=r.default.getGuild(e);if(null==i||!i.hasFeature(N.GuildFeatures.GUILD_ONBOARDING))return;let a=n.default.getSelfMember(e);!(null==a||(0,I.hasFlag)(null!==(E=a.flags)&&void 0!==E?E:0,A.GuildMemberFlags.COMPLETED_ONBOARDING))&&(0,I.hasFlag)(null!==(t=a.flags)&&void 0!==t?t:0,A.GuildMemberFlags.STARTED_ONBOARDING)&&(await (0,S.default)({guildId:e}),(0,o.transitionTo)(N.Routes.CHANNEL(e,_)))}"
        }
    }
}