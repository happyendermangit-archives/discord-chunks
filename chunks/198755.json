{
    "exports": {
        "default": "class l extends i.EventEmitter{destroy(){null!=this.stream&&(E.release(this.stream),this.stream=null),null!=this.streamId&&(0,a.unregisterVideoStream)(this.streamId),this.destroyed=!0}getStreamId(){return this.streamId}async setSource(e){if(this.sourceId===e)return this.stream;this.sourceId=e,null!=this.stream&&(E.release(this.stream),this.stream=null);let t=await (0,r.getVideoInputDevices)();if(this.sourceId===s.DISABLED_DEVICE_ID)return this.setStream(new MediaStream);let n={width:1280};t.some(e=>e.id===this.sourceId)&&(n.deviceId=this.sourceId);try{let e=await E.acquire({audio:!1,video:n});if(this.destroyed)throw E.release(e),Error(\"VideoInput: Already destroyed\");return this.emit(\"permission\",!0),this.setStream(e)}catch(e){if(\"string\"!=typeof e)switch(e.name){case\"PermissionDeniedError\":case\"NotAllowedError\":throw this.emit(\"permission\",!1),_.UserMediaErrors.PERMISSION_DENIED;case\"PermissionDismissedError\":throw this.emit(\"permission\",!1),_.UserMediaErrors.PERMISSION_DISMISSED;case\"DevicesNotFoundError\":case\"NotFoundError\":throw _.UserMediaErrors.NO_DEVICES_FOUND;default:throw e.name||\"UNKNOWN\"}throw e}}setStream(e){return null!=this.streamId&&((0,a.unregisterVideoStream)(this.streamId),this.streamId=null),this.stream=e,e.onaddtrack=e=>this.emit(\"add-video-track\",e),e.getVideoTracks().length>0&&(this.streamId=(0,a.registerVideoStream)(e)),this.emit(\"stream\",e),this.emit(\"video\",this.getStreamId()),e}constructor(...e){super(...e),this.stream=new MediaStream,this.sourceId=s.DISABLED_DEVICE_ID,this.streamId=null,this.destroyed=!1}}"
    }
}