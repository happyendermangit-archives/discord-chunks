{
    "exports": {
        "default": {
            "initializedCount": 0,
            "actions": {
                "GUILD_DELETE": "e=>this.handleGuildDelete(e)",
                "CHANNEL_SELECT": "e=>this.handleChannelSelect(e)",
                "POST_CONNECTION_OPEN": "e=>this.handleConnectionOpen(e)"
            },
            "stores": {
                "toJSON": "function(){return Array.from(this)}",
                "get": "function get() { [native code] }",
                "set": "function set() { [native code] }",
                "has": "function has() { [native code] }",
                "delete": "function delete() { [native code] }",
                "clear": "function clear() { [native code] }",
                "entries": "function entries() { [native code] }",
                "forEach": "function forEach() { [native code] }",
                "keys": "function keys() { [native code] }",
                "size": 0,
                "values": "function values() { [native code] }"
            },
            "handleConnectionOpen": "e=>{null!=(S=S??s.default.getGuildId()??null)&&this._openOnboardingIfIncomplete(S)}",
            "handleChannelSelect": "e=>{let{guildId:t,channelId:n}=e;if(S===t&&A===n)return;if(S=t??null,A=n??null,null==S||null==A)return;let i=a.default.getGuild(t);null!=i&&i.hasFeature(T.GuildFeatures.COMMUNITY)&&u.default.shouldFetchPrompts(S,8*_.default.Millis.HOUR)&&(0,l.loadOnboardingPrompts)(S),this._openOnboardingIfIncomplete(S,n)}",
            "handleGuildDelete": "e=>{let{guild:t}=e;(0,I.discardOnboardingPromise)(t.id)}",
            "_openOnboardingIfIncomplete": "async(e,t)=>{if((0,I.isOnboardingActiveForGuild)(e)){(0,r.transitionTo)(T.Routes.CHANNEL(e,c.StaticChannelRoute.GUILD_ONBOARDING));return}let n=a.default.getGuild(e);if(null==n||!n.hasFeature(T.GuildFeatures.GUILD_ONBOARDING))return;let i=o.default.getSelfMember(e);!(null==i||(0,E.hasFlag)(i.flags??0,d.GuildMemberFlags.COMPLETED_ONBOARDING))&&(0,E.hasFlag)(i.flags??0,d.GuildMemberFlags.STARTED_ONBOARDING)&&(await (0,I.default)({guildId:e}),(0,r.transitionTo)(T.Routes.CHANNEL(e,t)))}"
        }
    }
}