{
    "exports": {
        "default": {
            "initializedCount": 0,
            "actions": {
                "GUILD_CREATE": "function R(e){let{guild:t}=e;t.unableToSyncDeletes&&C(t.id)}",
                "DELETED_ENTITY_IDS": "function N(e){let t=T.default.getGuild(e.guild_id)?.name;S.fileOnly(`received deleted guild entities (id: ${e.guild_id}, name: ${t})`),o.default.Emitter.batched(()=>{null!=e.channels&&function(e,t){let n=c.default.keys(I.default.getMutableBasicGuildChannelsForGuild(e));S.fileOnly(\"syncChannels\",{channelIdsInMemory:n,channelIdsFromServer:t}),n.forEach(n=>{!t.has(n)&&a.default.dispatch({type:\"CHANNEL_DELETE\",channel:{guild_id:e,id:n,parent_id:void 0}})})}(e.guild_id,new Set(e.channels)),null!=e.roles&&function(e,t){c.default.keys(T.default.getGuild(e)?.roles??{}).forEach(n=>{!t.has(n)&&a.default.dispatch({type:\"GUILD_ROLE_DELETE\",guildId:e,roleId:n})})}(e.guild_id,new Set(e.roles)),null!=e.emojis&&function(e,t){let n=l.default.getGuildEmoji(e),i=n.filter(e=>t.has(e.id));n.length!==i.length&&a.default.dispatch({type:\"GUILD_EMOJIS_UPDATE\",guildId:e,emojis:i})}(e.guild_id,new Set(e.emojis)),null!=e.stickers&&function(e,t){let n=u.default.getStickersByGuildId(e)??[],i=n.filter(e=>t.has(e.id));n.length!==i.length&&a.default.dispatch({type:\"GUILD_STICKERS_UPDATE\",guildId:e,stickers:i})}(e.guild_id,new Set(e.stickers))})}"
            },
            "stores": {
                "toJSON": "function(){return Array.from(this)}",
                "get": "function get() { [native code] }",
                "set": "function set() { [native code] }",
                "has": "function has() { [native code] }",
                "delete": "function delete() { [native code] }",
                "clear": "function clear() { [native code] }",
                "entries": "function entries() { [native code] }",
                "forEach": "function forEach() { [native code] }",
                "keys": "function keys() { [native code] }",
                "size": 0,
                "values": "function values() { [native code] }"
            },
            "_initialize": "_initialize(){a.default.subscribe(\"CONNECTION_OPEN\",O)}",
            "_terminate": "_terminate(){a.default.unsubscribe(\"CONNECTION_OPEN\",O)}"
        }
    }
}