{
    "exports": {
        "default": {
            "maybeShowPTTAlert": "maybeShowPTTAlert(e){if(u.default.getMode()!==c.InputModes.PUSH_TO_TALK||(0,d.isDismissibleContentDismissed)(i.DismissibleContent.CONSOLE_PTT_DISABLE_ALERT))return Promise.resolve();let t={[c.PlatformTypes.XBOX]:g.default.Messages.PTT_NOT_SUPPORTED_XBOX,[c.PlatformTypes.PLAYSTATION]:g.default.Messages.PTT_NOT_SUPPORTED_PLAYSTATION,[c.PlatformTypes.PLAYSTATION_STAGING]:g.default.Messages.PTT_NOT_SUPPORTED_PLAYSTATION},n=t[e];return null==n?Promise.resolve():new Promise(e=>{let t=()=>{(0,d.markDismissibleContentAsDismissed)(i.DismissibleContent.CONSOLE_PTT_DISABLE_ALERT),e()},o=e=>(0,s.jsx)(a.default,{...e,title:n,body:g.default.Messages.PTT_NOT_SUPPORTED_ALERT_BODY,onConfirm:t,titleClassName:m.title});(0,r.hasModalOpen)(v)?(0,r.updateModal)(v,o):(0,r.openModal)(o,{modalKey:v})})}",
            "showSelfDismissableAlert": "showSelfDismissableAlert(e){let{title:t,body:n,errorCodeMessage:i,reconnectPlatformType:d}=e,u=(0,s.jsx)(f.SelfDismissibleAlertBody,{body:n,errorCodeMessage:i,dismissCallback:()=>(0,r.closeModal)(h)});function g(){null!=d&&((0,o.default)(d),l.default.track(c.AnalyticEvents.ACCOUNT_LINK_STEP,{previous_step:_.GAME_CONSOLE_ALERT_MODAL_LOCATION,current_step:\"desktop oauth\",platform_type:d}))}let m=e=>(0,s.jsx)(a.default,{...e,title:t,body:u,onConfirm:g});(0,r.hasModalOpen)(h)?(0,r.updateModal)(h,m):(0,r.openModal)(m,{modalKey:h})}"
        }
    }
}