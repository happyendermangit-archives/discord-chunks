{
    "exports": {
        "uploadRtcLogFiles": "async function c(e,t){let n;if(null==u.default.fileManager.readLogFiles)throw new i.UploadVoiceDebugLogsError(i.UploadErrorCodes.GENERAL);let a=[];try{a=(a=await u.default.fileManager.readLogFiles(e)).map(e=>(0,l.transformNativeFile)(e,\"application/octet-stream\"))}catch(e){throw d.error(`uploadDebugFiles: read error '${e}'`),new i.UploadVoiceDebugLogsError(i.UploadErrorCodes.READ)}if(0===a.length)throw new i.UploadVoiceDebugLogsError(i.UploadErrorCodes.NO_FILE);try{let e={extraInfo:t,mediaEngineState:s.default.getState()};n=await r.default.post({url:o.Endpoints.DEBUG_LOGS(o.DebugLogCategory.RTC),attachments:[...a.map(e=>({name:e.name,file:e,filename:e.name})),{name:\"media_engine_state.json\",filename:\"media_engine_state.json\",file:new Blob([JSON.stringify(e,void 0,2)])}]})}catch(e){if(429===e.status)throw new i.UploadVoiceDebugLogsError(i.UploadErrorCodes.PROGRESS);throw d.error(`Debug log upload error: status: ${e.status}, message: ${e.message}`),new i.UploadVoiceDebugLogsError(i.UploadErrorCodes.UPLOAD)}let c=a.length+1;if(\"success_count\"in n.body&&n.body.success_count!==c)throw d.error(`Debug log upload: stored files ${n.body.success_count} !== ${c}`),new i.UploadVoiceDebugLogsError(i.UploadErrorCodes.GENERAL);if(\"store_success\"in n.body&&!n.body.store_success||\"id_match\"in n.body&&!n.body.id_match||\"all_success\"in n.body&&!n.body.all_success)throw d.error(`Debug log upload: store_success: ${n.body.store_success} / id_match: ${n.body.id_match} / all_success: ${n.body.all_success}`),new i.UploadVoiceDebugLogsError(i.UploadErrorCodes.GENERAL)}"
    }
}