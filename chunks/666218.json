{
    "exports": {
        "useStickerSuggestionResults": "(e,t,n)=>{let a=(0,u.useHasSendableSticker)(n),s=(0,l.useStateFromStores)([c.default],()=>c.default.getCurrentUser());return i.useMemo(()=>{let i=(0,m.getQueriesFromUserInput)(e);if(t||null==e||\"\"===e||i.length>h.MAX_NUM_USER_INPUT_WORDS||!a)return[];let l=[],o=[],u=(0,m.removePunctuation)(e),d=u===i[0]?i:[u,...i];f.default.queryStickers(d,!1).forEach(e=>{let{sticker:t}=e,i=(0,r.getStickerSendability)(t,s,n),a={sticker:t,sendability:i};i===r.StickerSendability.SENDABLE?l.push(a):i===r.StickerSendability.SENDABLE_WITH_PREMIUM&&o.push(a)});let c=[];return l.length>0&&(c=l.slice(0,h.MAX_NUM_SUGGESTED_STICKERS),0!==o.length&&(c.length===h.MAX_NUM_SUGGESTED_STICKERS&&c.pop(),c.push(o[0]))),c},[e,n,a,t,s])}",
        "useTextChangeHandler": "e=>{let{setTextInputValue:t,setHasDismissed:n,setHasSelection:a,setFocusedSuggestionType:l,delayBeforeSuggestions:r}=e,o=i.useRef(null),u=i.useRef(!1),c=i.useRef(!1),f=i.useMemo(()=>s()(t,r??h.DELAY_BEFORE_SUGGESTIONS_MS),[t,r]);return{handleTextChange:async e=>{if(null==e||\"\"===e)f.cancel(),t?.(\"\"),n?.(!1),a?.(!1),l?.(null),o.current=null,u.current=!1;else if(!u.current&&e.trim()!==o.current?.trim()){if(o.current=e,(0,m.getQueriesFromUserInput)(e).length>h.MAX_NUM_USER_INPUT_WORDS){u.current=!0,f.cancel(),t(\"\");return}if(!0===c.current)return;!d.default.hasLoadedStickerPacks&&(c.current=!0,await E(),c.current=!1),f(o.current)}},debouncedSetTextInputValue:f}}"
    }
}