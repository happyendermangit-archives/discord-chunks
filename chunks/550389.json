{
    "exports": {
        "default": {
            "createApplication": "async createApplication(e){let{name:t,guildId:n,type:s,teamId:l}=e,o=(await i.default.post({url:r.Endpoints.APPLICATIONS,body:{name:t,type:s,guild_id:n,team_id:l}})).body;return null!=n&&null!=s&&a.default.dispatch({type:\"APPLICATION_FETCH_SUCCESS\",application:o}),o}",
            "getApplicationsForGuild": "async getApplicationsForGuild(e){let{includeTeam:t,...n}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},s=(await i.default.get({url:r.Endpoints.GUILD_APPLICATIONS(e),query:{...n,include_team:t}})).body;return a.default.dispatch({type:\"APPLICATIONS_FETCH_SUCCESS\",applications:s}),s}",
            "transferApplication": "async transferApplication(e){let{applicationId:t,teamId:n}=e,s=(await i.default.post({url:r.Endpoints.APPLICATION_OWNER_TRANSFER(t),body:{team_id:n}})).body;return a.default.dispatch({type:\"APPLICATION_FETCH_SUCCESS\",application:s}),s}",
            "fetchApplications": "async fetchApplications(e){let t=!(arguments.length>1)||void 0===arguments[1]||arguments[1],n=e;if(!t&&(n=e.filter(e=>{let t=l.default.getApplication(e),n=(0,s.hasFlag)(t?.flags??0,r.ApplicationFlags.EMBEDDED)&&t?.embeddedActivityConfig?.supported_platforms==null;return!(null!=t&&!n)&&!l.default.isFetchingApplication(e)&&!l.default.didFetchingApplicationFail(e)&&e.length>0})),n.length>0){let e;a.default.dispatch({type:\"APPLICATIONS_FETCH\",applicationIds:n});try{e=await i.default.get({url:r.Endpoints.APPLICATIONS_PUBLIC,query:new URLSearchParams(n.map(e=>[\"application_ids\",e])).toString(),oldFormErrors:!0})}catch(e){throw a.default.dispatch({type:\"APPLICATIONS_FETCH_FAIL\",applicationIds:n}),e}a.default.dispatch({type:\"APPLICATIONS_FETCH_SUCCESS\",applications:e.body})}}",
            "fetchApplication": "fetchApplication(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return a.default.dispatch({type:\"APPLICATION_FETCH\",applicationId:e}),i.default.get({url:r.Endpoints.APPLICATION_PUBLIC(e),query:{with_guild:t},oldFormErrors:!0}).then(e=>(a.default.dispatch({type:\"APPLICATION_FETCH_SUCCESS\",application:e.body}),e.body)).catch(t=>(a.default.dispatch({type:\"APPLICATION_FETCH_FAIL\",applicationId:e}),Promise.reject(t)))}"
        }
    }
}