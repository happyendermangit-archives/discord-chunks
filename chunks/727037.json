{
    "exports": {
        "ReflectionBinaryReader": "class u{constructor(e){this.info=e}prepare(){var e;if(!this.fieldNoToField){let t=null!==(e=this.info.fields)&&void 0!==e?e:[];this.fieldNoToField=new Map(t.map(e=>[e.no,e]))}}read(e,t,n,o){this.prepare();let i=void 0===o?e.len:e.pos+o;for(;e.pos<i;){let[o,i]=e.tag(),u=this.fieldNoToField.get(o);if(!u){let a=n.readUnknownField;if(\"throw\"==a)throw Error(`Unknown field ${o} (wire type ${i}) for ${this.info.typeName}`);let u=e.skip(i);!1!==a&&(!0===a?r.UnknownFieldHandler.onRead:a)(this.info.typeName,t,o,i,u);continue}let s=t,l=u.repeat,c=u.localName;switch(u.oneof&&(s=s[u.oneof]).oneofKind!==c&&(s=t[u.oneof]={oneofKind:c}),u.kind){case\"scalar\":case\"enum\":let d=\"enum\"==u.kind?a.ScalarType.INT32:u.T,f=\"scalar\"==u.kind?u.L:void 0;if(l){let t=s[c];if(i==r.WireType.LengthDelimited&&d!=a.ScalarType.STRING&&d!=a.ScalarType.BYTES){let n=e.uint32()+e.pos;for(;e.pos<n;)t.push(this.scalar(e,d,f))}else t.push(this.scalar(e,d,f))}else s[c]=this.scalar(e,d,f);break;case\"message\":if(l){let t=s[c],r=u.T().internalBinaryRead(e,e.uint32(),n);t.push(r)}else s[c]=u.T().internalBinaryRead(e,e.uint32(),n,s[c]);break;case\"map\":let[p,h]=this.mapEntry(u,e,n);s[c][p]=h}}}mapEntry(e,t,n){let r,o,u=t.uint32(),s=t.pos+u;for(;t.pos<s;){let[i,u]=t.tag();switch(i){case 1:r=e.K==a.ScalarType.BOOL?t.bool().toString():this.scalar(t,e.K,a.LongType.STRING);break;case 2:switch(e.V.kind){case\"scalar\":o=this.scalar(t,e.V.T,e.V.L);break;case\"enum\":o=t.int32();break;case\"message\":o=e.V.T().internalBinaryRead(t,t.uint32(),n)}break;default:throw Error(`Unknown field ${i} (wire type ${u}) in map entry for ${this.info.typeName}#${e.name}`)}}if(void 0===r){let t=(0,i.reflectionScalarDefault)(e.K);r=e.K==a.ScalarType.BOOL?t.toString():t}if(void 0===o)switch(e.V.kind){case\"scalar\":o=(0,i.reflectionScalarDefault)(e.V.T,e.V.L);break;case\"enum\":o=0;break;case\"message\":o=e.V.T().create()}return[r,o]}scalar(e,t,n){switch(t){case a.ScalarType.INT32:return e.int32();case a.ScalarType.STRING:return e.string();case a.ScalarType.BOOL:return e.bool();case a.ScalarType.DOUBLE:return e.double();case a.ScalarType.FLOAT:return e.float();case a.ScalarType.INT64:return(0,o.reflectionLongConvert)(e.int64(),n);case a.ScalarType.UINT64:return(0,o.reflectionLongConvert)(e.uint64(),n);case a.ScalarType.FIXED64:return(0,o.reflectionLongConvert)(e.fixed64(),n);case a.ScalarType.FIXED32:return e.fixed32();case a.ScalarType.BYTES:return e.bytes();case a.ScalarType.UINT32:return e.uint32();case a.ScalarType.SFIXED32:return e.sfixed32();case a.ScalarType.SFIXED64:return(0,o.reflectionLongConvert)(e.sfixed64(),n);case a.ScalarType.SINT32:return e.sint32();case a.ScalarType.SINT64:return(0,o.reflectionLongConvert)(e.sint64(),n)}}}"
    }
}