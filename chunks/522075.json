{
    "exports": {
        "Database": "class s{static async open(e,t){return new s(await r.Host.open(e,t))}static openSyncUnsafe(e,t){return new s(r.Host.openSyncUnsafe(e,t))}static delete(e){return r.Host.delete(e)}constructor(e){this.raw=e,this.name=e.name,this.lastState=a.DatabaseState.Open,this.handle=e.handle,this.databaseStateCallback=o.Runtime.addDatabaseStateCallback((e,t)=>{this.handle===e&&(this.lastState=t)})}close(){this.lastState=a.DatabaseState.Closed,this.raw?.close(),this.raw=null,o.Runtime.removeCompletionCallback(this.databaseStateCallback)}disable(e){return null==this.raw?Promise.resolve():(this.lastState=a.DatabaseState.Disabled,this.execute({type:\"db.disable\",handle:0,reason:e}))}execute(e,t){if(null==this.raw)throw Error(`database is no longer open (database: ${this}`);let n=\"key\"in e?e.key[0]:e.table,r=()=>o.Runtime.executeAsync(t??e.type,t=>{this.raw.execute(t,{...e,handle:0})});return null===t?r():i.default.timeAsync(\"\\uD83D\\uDCBE\",`${t??e.type} ${n??\"\"}`,r)}executeSync(e){if(null==this.raw)throw Error(`database is no longer open (database: ${this}`);let t=\"key\"in e?e.key[0]:e.table;return i.default.time(\"\\uD83D\\uDCBE\",`SYNC: ${e.type} ${t??\"\"}`,()=>this.raw.execute(null,{...e,handle:0},{synchronous:!0}))}fullVacuum(){return this.execute({type:\"db.vacuum\",handle:0,complete:!0})}fsInfo(){return this.execute({type:\"db.fs_info\",handle:0})}incrementalVacuum(){return this.execute({type:\"db.vacuum\",handle:0,complete:!1})}instantaneousState(){return null==this.raw?a.DatabaseState.Closed:this.lastState=this.executeSync({type:\"db.state\"})}async instantaneousStateAsync(){return null==this.raw?a.DatabaseState.Closed:this.lastState=await this.execute({type:\"db.state\"})}state(){return this.lastState}transaction(e,t){let n=new _(this);return Promise.resolve(e(n)).then(()=>n.operations.length>0?this.execute({type:\"db.transaction\",operations:n.complete()},t):Promise.resolve())}toString(){return`[Database #${this.handle}: ${this.name}]`}}"
    }
}