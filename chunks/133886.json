{
    "exports": {
        "LocalizedStringDictionary": "class i{getStringForLocale(e,t){let n=this.getStringsForLocale(t)[e];if(!n)throw Error(`Could not find intl message ${e} in ${t} locale`);return n}getStringsForLocale(e){let t=this.strings[e];return!t&&(t=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:\"en-US\";if(t[e])return t[e];let r=function(e){return Intl.Locale?new Intl.Locale(e).language:e.split(\"-\")[0]}(e);if(t[r])return t[r];for(let e in t)if(e.startsWith(r+\"-\"))return t[e];return t[n]}(e,this.strings,this.defaultLocale),this.strings[e]=t),t}static getGlobalDictionaryForPackage(e){if(\"undefined\"==typeof window)return null;let t=window[a];if(void 0===r){let e=window[o];if(!e)return null;for(let n in r={},e)r[n]=new i({[t]:e[n]},t)}let n=null==r?void 0:r[e];if(!n)throw Error(`Strings for package \"${e}\" were not included by LocalizedStringProvider. Please add it to the list passed to createLocalizedStringDictionary.`);return n}constructor(e,t=\"en-US\"){this.strings={...e},this.defaultLocale=t}}",
        "LocalizedStringFormatter": "class l{format(e,t){let n=this.strings.getStringForLocale(e,this.locale);return\"function\"==typeof n?n(t,this):n}plural(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:\"cardinal\",r=t[\"=\"+e];if(r)return\"function\"==typeof r?r():r;let a=this.locale+\":\"+n,o=u.get(a);return!o&&(o=new Intl.PluralRules(this.locale,{type:n}),u.set(a,o)),\"function\"==typeof(r=t[o.select(e)]||t.other)?r():r}number(e){let t=s.get(this.locale);return!t&&(t=new Intl.NumberFormat(this.locale),s.set(this.locale,t)),t.format(e)}select(e,t){let n=e[t]||e.other;return\"function\"==typeof n?n():n}constructor(e,t){this.locale=e,this.strings=t}}"
    }
}