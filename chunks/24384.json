{
    "exports": {
        "fetchCommand": "function T(e,t,n){r.default.dispatch({type:\"APPLICATION_COMMAND_FETCH\",channelId:t,commandId:n,guildId:e})}",
        "fetchCommands": "function A(e,t,n){r.default.dispatch({type:\"APPLICATION_COMMANDS_FETCH\",channelId:t,commandIds:n,guildId:e})}",
        "fetchCommandsForApplication": "function I(e){let{guildId:t,channelId:n,applicationId:a}=e;r.default.dispatch({type:\"APPLICATION_COMMANDS_FETCH_FOR_APPLICATION\",channelId:n,guildId:t,applicationId:a})}",
        "performAutocomplete": "function p(e,t,n){l()(null!=t.autocomplete,\"Missing autocomplete context\");let{query:a,name:c}=t.autocomplete,E=o.default.fromTimestamp(Date.now());r.default.dispatch({type:\"APPLICATION_COMMAND_AUTOCOMPLETE_REQUEST\",nonce:E,channelId:t.channel.id,query:a,name:c}),null==d.default.getAutocompleteChoices(t.channel.id,c,a)&&i.default.post({url:f.Endpoints.INTERACTIONS,body:{type:s.InteractionTypes.APPLICATION_COMMAND_AUTOCOMPLETE,application_id:e.applicationId,guild_id:t.guild?.id,channel_id:t.channel.id,session_id:u.default.getSessionId(),data:n,nonce:E},timeout:3e3}).catch(()=>{r.default.dispatch({type:\"INTERACTION_FAILURE\",nonce:E})})}",
        "querySearchManager": "(e,t,n,a,l)=>{r.default.dispatch({type:\"APPLICATION_COMMAND_SEARCH_STORE_QUERY\",context:e,query:t,limit:n,commandType:a,applicationId:l})}",
        "setActiveCommand": "function E(e){let{channelId:t,command:n,section:a,location:i,initialValues:s,triggerSection:u,queryLength:o}=e;null!=n&&l()(n.inputType!==c.ApplicationCommandInputType.PLACEHOLDER,\"command should not be placeholder\"),r.default.dispatch({type:\"APPLICATION_COMMAND_SET_ACTIVE_COMMAND\",channelId:t,command:n,section:a,initialValues:s,location:i,triggerSection:u,queryLength:o})}",
        "setPreferredCommandId": "function _(e,t){r.default.dispatch({type:\"APPLICATION_COMMAND_SET_PREFERRED_COMMAND\",channelId:e,commandId:t})}",
        "updateApplicationGuildCommandPermissions": "function S(e,t,n,a){return i.default.put({body:{permissions:a},url:f.Endpoints.APPLICATION_BOT_GUILD_COMMAND_PERMISSIONS(e,t,n)})}",
        "updateOptionStates": "function h(e,t){r.default.dispatch({type:\"APPLICATION_COMMAND_UPDATE_OPTIONS\",channelId:e,changedOptionStates:t})}",
        "updateOptionValidationStates": "function g(e,t){h(e,Object.fromEntries(Object.entries(t).map(e=>{let[t,n]=e;return[t,{lastValidationResult:n}]})))}",
        "updateRegistry": "function C(e,t,n){r.default.dispatch({type:\"APPLICATION_COMMAND_REGISTRY_UPDATE\",applications:t,commands:e,channelId:n})}"
    }
}