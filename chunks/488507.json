{
    "exports": {
        "default": {
            "initializedCount": 0,
            "actions": {
                "OVERLAY_FOCUSED": "function y(e){if(c.verbose(\"OVERLAY_FOCUSED\",e),P.gameSetAllUnfocused(),null==e.pid)return;let _=P.getByPid(e.pid);if(null==_){c.error(\"OVERLAY_FOCUSED: Game not found\",e,P.debug);return}_.gameSetFocused(!0)}",
                "OVERLAY_NOTIFICATION_EVENT": "function p(e){var _;c.verbose(\"OVERLAY_NOTIFICATION_EVENT\",e);let E=P.getByName(null!==(_=e.gameName)&&void 0!==_?_:e.gameId);if(null==E){c.error(\"OVERLAY_NOTIFICATION_EVENT: Game not found.\",e,P.debug);return}E.notificationAnalytics.increment(e.notificationType,e.action)}",
                "OVERLAY_SET_UI_LOCKED": "function G(e){let _=P.getByPid(e.pid);if(c.verbose(\"OVERLAY_SET_UI_LOCKED\",_),null==_){c.error(\"OVERLAY_SET_UI_LOCKED: Unable to find game\",e,P.debug);return}_.setLocked(e.locked)}",
                "OVERLAY_WIDGET_CHANGED": "function g(e){var _;c.verbose(\"OVERLAY_WIDGET_CHANGED\",e);let E=P.getByName(null!==(_=e.gameName)&&void 0!==_?_:e.gameId);if(null==E){c.error(\"OVERLAY_WIDGET_CHANGED: Game not found\",e,P.debug);return}let t=E.widgetAnalytics.getByWidget(e.widgetType);null!=t&&(!t.initialized&&(t.initialized=!0,t.pinned=e.pinned),t.pinned!==e.pinned&&++t.pinnedToggledCount,t.pinned=e.pinned,t.visibleDuration.toggle(e.visible))}",
                "OVERLAY_MESSAGE_EVENT_ACTION": "function f(e){var _;c.verbose(\"OVERLAY_MESSAGE_EVENT_ACTION\",e);let E=P.getByName(null!==(_=e.gameName)&&void 0!==_?_:e.gameId);if(null==E){c.error(\"OVERLAY_MESSAGE_EVENT_ACTION: Game not found\",e,P.debug);return}switch(e.eventType){case\"ack\":++E.overlayMessageAckCount;break;case\"create\":++E.overlayMessageCreateCount}}",
                "RUNNING_GAMES_CHANGE": "function m(e){for(let _ of(c.verbose(\"handleRunningGamesChange\",e),e.added)){P.incrementConcurrentGameCount();let e=P.create(_);c.verbose(\"handleRunningGamesChange added\",_,e)}for(let _ of e.removed)P.destroy(_),c.verbose(\"handleRunningGamesChange removed\",_)}",
                "SOUNDBOARD_SET_OVERLAY_ENABLED": "function B(e){var _;c.verbose(\"SOUNDBOARD_SET_OVERLAY_ENABLED\",e);let E=P.getByPid(e.pid);if(null==E){c.error(\"SOUNDBOARD_SET_OVERLAY_ENABLED: Game not found\",e,P.debug);return}E.setSoundboardShown(e.enabled,!!e.enabled&&null!==(_=e.keepOpen)&&void 0!==_&&_)}",
                "MESSAGE_ACKED": "function H(e){c.verbose(\"MESSAGE_ACKED\",e),P.desktopMessageEvent(\"ack\")}",
                "MESSAGE_CREATE": "function v(e){e.message.state===C.MessageStates.SENDING&&P.desktopMessageEvent(\"created\")}",
                "WINDOW_FOCUS": "function w(e){c.verbose(\"WINDOW_FOCUS\",e);let _=(0,l.getMainWindowId)();if(e.windowId!==_){c.verbose(\"WINDOW_FOCUS: Not main window\",{action:e,mainWindowId:_});return}P.desktopSetFocused(e.focused)}",
                "RTC_CONNECTION_STATE": "handleRTCConnectionState(e){var _;let E=(null!==(_=e.channelId)&&void 0!==_?_:\"unknown\")+e.context;switch(e.state){case C.RTCConnectionStates.RTC_CONNECTED:F.connections.add(E);break;case C.RTCConnectionStates.DISCONNECTED:F.connections.delete(E)}let t=F.hasConnection();F.previousHasConnection!==t&&(P.toggleRtcConnection(t),F.previousHasConnection=t)}",
                "AUDIO_TOGGLE_SELF_MUTE": "function b(e){null!=(0,u.default)()&&(c.verbose(\"AUDIO_TOGGLE_SELF_MUTE\",e),P.handleMuteToggled())}"
            },
            "stores": {
                "toJSON": "function(){return Array.from(this)}",
                "get": "function get() { [native code] }",
                "set": "function set() { [native code] }",
                "has": "function has() { [native code] }",
                "delete": "function delete() { [native code] }",
                "clear": "function clear() { [native code] }",
                "entries": "function entries() { [native code] }",
                "forEach": "function forEach() { [native code] }",
                "keys": "function keys() { [native code] }",
                "size": 0,
                "values": "function values() { [native code] }"
            }
        }
    }
}