{
    "exports": {
        "default": "class V extends o.default{_initialize(){_.default.addChangeListener(this.handleSelectedChannelUpdate),l.default.subscribe(\"EMBEDDED_ACTIVITY_LAUNCH_FAIL\",this.handleActivityLaunchFail),l.default.subscribe(\"EMBEDDED_ACTIVITY_OPEN\",w),l.default.subscribe(\"EMBEDDED_ACTIVITY_CLOSE\",F),l.default.subscribe(\"EMBEDDED_ACTIVITY_INBOUND_UPDATE\",G),l.default.subscribe(\"EMBEDDED_ACTIVITY_DEFERRED_OPEN\",this.handleDeferredOpen),l.default.subscribe(\"RPC_APP_DISCONNECTED\",this.handleRPCDisconnect),l.default.subscribe(\"MEDIA_SESSION_JOINED\",B)}_terminate(){_.default.removeChangeListener(this.handleSelectedChannelUpdate),l.default.unsubscribe(\"EMBEDDED_ACTIVITY_LAUNCH_FAIL\",this.handleActivityLaunchFail),l.default.unsubscribe(\"EMBEDDED_ACTIVITY_OPEN\",w),l.default.unsubscribe(\"EMBEDDED_ACTIVITY_CLOSE\",F),l.default.unsubscribe(\"EMBEDDED_ACTIVITY_INBOUND_UPDATE\",G),l.default.unsubscribe(\"EMBEDDED_ACTIVITY_DEFERRED_OPEN\",this.handleDeferredOpen),l.default.unsubscribe(\"RPC_APP_DISCONNECTED\",this.handleRPCDisconnect),l.default.unsubscribe(\"MEDIA_SESSION_JOINED\",B)}constructor(...e){super(...e),this.handleSelectedChannelUpdate=()=>{let e=_.default.getVoiceChannelId();for(let{channelId:t,applicationId:n}of x.default.getSelfEmbeddedActivities().values())(0,L.default)(t)&&t!==e&&this.leaveActivity({channelId:t,applicationId:n});if(null!=e){let t=x.default.getEmbeddedActivitiesForChannel(e),n=m.default.getId();t.forEach(e=>{e.userIds.has(n)&&null==x.default.getSelfEmbeddedActivityForChannel(e.channelId)&&(0,g.disconnectEmbeddedActivity)(e.channelId,e.applicationId)})}},this.handleActivityLaunchFail=e=>{let{error:t,guildId:n}=e;if(null==n)return;let i=k.default.Messages.EMBEDDED_ACTIVITIES_LAUNCH_FAIL_GENERIC;switch(t.code){case b.AbortCodes.INVALID_ACTIVITY_LAUNCH_NO_ACCESS:i=k.default.Messages.EMBEDDED_ACTIVITIES_LAUNCH_FAIL_ACCESS;break;case b.AbortCodes.INVALID_ACTIVITY_LAUNCH_PREMIUM_TIER:i=k.default.Messages.EMBEDDED_ACTIVITIES_LAUNCH_FAIL_PREMIUM;break;case b.AbortCodes.INVALID_ACTIVITY_LAUNCH_CONCURRENT_ACTIVITIES:i=k.default.Messages.EMBEDDED_ACTIVITIES_LAUNCH_FAIL_CONCURRENT;break;case b.AbortCodes.INVALID_PERMISSIONS:i=k.default.Messages.EMBEDDED_ACTIVITIES_INVALID_PERMISSIONS;break;case b.AbortCodes.INVALID_ACTIVITY_LAUNCH_AFK_CHANNEL:i=k.default.Messages.EMBEDDED_ACTIVITIES_INVALID_CHANNEL;break;case b.AbortCodes.INVALID_ACTIVITY_LAUNCH_AGE_GATED:i=k.default.Messages.EMBEDDED_ACTIVITIES_LAUNCH_FAIL_AGE_GATE;break;case b.AbortCodes.INVALID_ACTIVITY_LAUNCH_DEV_PREVIEW_GUILD_SIZE:i=k.default.Messages.EMBEDDED_ACTIVITIES_LAUNCH_FAIL_GUILD_SIZE}this.showLaunchErrorModal(i)},this.superHandleRPCDisconnect=e=>{let{reason:t,application:n}=e,i=n.id;if(null!=i&&null!=t){for(let{applicationId:e,channelId:t}of x.default.getSelfEmbeddedActivities().values())e===i&&this.leaveActivity({channelId:t,applicationId:i});t.code!==b.RPCCloseCodes.CLOSE_NORMAL&&this.showErrorModal(t,i)}},this.handleDeferredOpen=async e=>{let t,{channelId:n,applicationId:i,analyticsLocations:a}=e,s=h.default.getChannel(n);if(void 0===s||p.GUILD_VOCAL_CHANNEL_TYPES.has(s?.type)&&_.default.getVoiceChannelId()!==n)return;let l=x.default.getSelfEmbeddedActivityForChannel(n);if(l?.applicationId===i)return;let r=await u.default.fetchApplication(i);if(!(0,O.getIsActivitiesEnabledForCurrentPlatform)(s)){this.showLaunchErrorModal(k.default.Messages.EMBEDDED_ACTIVITIES_NOT_AVAILABLE_ON_OS);return}if(!(0,v.default)(r?.embedded_activity_config?.supported_platforms)){this.showLaunchErrorModal(k.default.Messages.EMBEDDED_ACTIVITIES_APPLICATION_UNSUPPORTED_OS);return}let o=l?.applicationId;null!=o&&(await u.default.fetchApplication(o),t=d.default.getApplication(o));let c=s?.getGuildId()??void 0,{activityConfigs:f,applications:m}=await (0,g.fetchShelf)({guildId:c}),E=(0,T.default)({applicationId:i,activityConfigs:f,applications:m});if(null==E){let e=await (0,g.fetchShelf)({guildId:c,force:!0});E=(0,T.default)({applicationId:i,activityConfigs:e.activityConfigs,applications:e.applications})}let I=x.default.getEmbeddedActivitiesForChannel(n).find(e=>e.applicationId===i),C=I?.userIds.size??0;C>0?(0,A.maybeJoinEmbeddedActivity)({channelId:n,applicationId:i,instanceId:I?.instanceId,inputApplication:null,analyticsLocations:a,embeddedActivitiesManager:this}):await (0,N.default)({activityItem:E,currentEmbeddedApplication:t,channelId:n,guildId:c,embeddedActivitiesManager:this,analyticsLocations:a})}}}",
        "getActiveAnalyticsSessionIDs": "function H(e){return D[e]}"
    }
}