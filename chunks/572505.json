{
    "exports": {
        "NON_TOKEN_TYPE": "NON_TOKEN",
        "Token": "class i{constructor(e,t){e instanceof i?(this.match=[...e.match],this.start=e.start,this.type=e.type,null!=e._data&&(this._data=e._data)):(null!=e?(this.match=[...e],this.start=\"string\"==typeof e?0:e.index??0):(this.match=[],this.start=0),this.type=t)}get end(){return this.start+this.length}get length(){return this.match[0].length}valueOf(){return this.match[0]}getFullMatch(){return this.match[0]}getMatch(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;return this.match[e]}setData(e,t){null==this._data&&(this._data=new Map),this._data.set(e,t)}getData(e){if(null!=this._data)return this._data.get(e)}}",
        "default": "class u{constructor(e=[],t){this._rules=[],this._followers={},this._nonTokenType=a,this.reset(t),e.forEach(e=>this.addRule(e))}reset(e){this._rules=[],this._followers={},this._nonTokenType=e??a}addRule(e){let t;let{type:n,follows:s,validator:a}=e,{regex:r}=e;if(\"^\"!==r.source.charAt(0)&&(r=RegExp(`^${r.source}`,r.flags)),null!=a&&(t=new Map),null==s){this._rules.push({regex:r,type:n,validator:a,cache:t});return}s.forEach(e=>{null==this._followers[e]&&(this._followers[e]=[]),this._followers[e].push({regex:r,type:n,validator:a,cache:t})})}tokenize(e){let t,n=e,a=\"\",r=0,u=[];for(;n.length>0;){let e=this._getMatch(n,t,r+a.length);null!=e?(null!=a&&\"\"!==a&&u.push(new i(l(a.match(s),r),this._nonTokenType)),t=e,u.push(e),r+=t.length+a.length,n=n.substring(t.length),a=\"\"):(a+=n[0],n=n.substring(1))}return null!=a&&\"\"!==a&&u.push(new i(l(a.match(s),r),this._nonTokenType)),u}clearCache(){for(let e in this._rules.forEach(e=>e.cache?.clear()),this._followers)this._followers[e].forEach(e=>e.cache?.clear())}_getMatch(e,t,n){let s;let a=null!=t?t.type:null;return t?.end===n&&(s=r(e,this._followers[String(a)],n)),null==s&&(s=r(e,this._rules,n)),s}}"
    }
}