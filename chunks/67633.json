{
    "exports": {
        "default": {
            "initializedCount": 0,
            "actions": {
                "POST_CONNECTION_OPEN": "function h(){(0,d.shouldReadWriteAudioSettings)()&&(s.default.get(R(I.default.getId()))||N.PreloadedUserSettingsActionCreators.updateAsync(\"audioContextSettings\",e=>{let t=!1;for(let[n,i]of Object.entries(T.default.getState().settingsByContext)){let r=(0,A.coerceAudioContextForProto)(n);if(null==r)continue;let o=e[r],a=String(Date.now()),s={};for(let[e,t]of Object.entries(i.localMutes))s[e]={muted:t,volume:C(n),modifiedAt:a,soundboardMuted:!1};for(let[e,t]of Object.entries(i.localVolumes))s[e]={muted:!1,modifiedAt:a,...s[e],volume:(0,A.snapVolumeToDefault)(t,n)};let _=Object.keys(o).length;for(let[e,[n,i]]of Object.entries(s).entries()){if(300-_-(e+1)<=0)break;null==o[n]&&(t=!0,o[n]=i)}}return s.default.set(R(I.default.getId()),!0),t},N.UserSettingsDelay.AUTOMATED))}",
                "AUDIO_SET_LOCAL_VOLUME": "function p(e){var t,n,i;let{context:r,userId:o,volume:a}=e;if(o===I.default.getId()||!(0,d.shouldReadWriteAudioSettings)())return;let s=l.default.getRemoteSessionId();null!=s&&D(s,o,r,{muted:T.default.isLocalMute(o,r),volume:a}),t=r,n=o,i=a,(0,S.updatePendingSettings)(t,n,{volume:i}),L()}",
                "AUDIO_TOGGLE_LOCAL_MUTE": "function f(e){let{context:t,userId:n}=e;if(n!==I.default.getId()){if((0,d.shouldReadWriteAudioSettings)()){var i,r,o;i=t,r=n,o=T.default.isLocalMute(n,t),(0,S.updatePendingSettings)(i,r,{muted:o}),L.cancel(),m()}}}",
                "AUDIO_TOGGLE_LOCAL_SOUNDBOARD_MUTE": "function P(e){let{context:t,userId:n}=e;if(n!==I.default.getId()){if((0,d.shouldReadWriteAudioSettings)()){var i,r,o;i=t,r=n,o=u.default.isLocalSoundboardMuted(n),(0,S.updatePendingSettings)(i,r,{soundboardMuted:o}),L.cancel(),m()}}}"
            },
            "stores": {
                "toJSON": "function(){return Array.from(this)}",
                "get": "function get() { [native code] }",
                "set": "function set() { [native code] }",
                "has": "function has() { [native code] }",
                "delete": "function delete() { [native code] }",
                "clear": "function clear() { [native code] }",
                "entries": "function entries() { [native code] }",
                "forEach": "function forEach() { [native code] }",
                "keys": "function keys() { [native code] }",
                "size": 0,
                "values": "function values() { [native code] }"
            }
        }
    }
}