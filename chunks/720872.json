{
    "exports": {
        "PasswordResetResult": {
            "MFA": "MFA",
            "SUCCESS": "SUCCESS"
        },
        "default": {
            "startSession": "startSession(e){l.default.wait(()=>{l.default.dispatch({type:\"START_SESSION\",token:e})})}",
            "setLoginCredentials": "setLoginCredentials(e,t){l.default.dispatch({type:\"SET_LOGIN_CREDENTIALS\",login:e,password:t})}",
            "login": "login(e){let{login:t,password:n,loginCode:s,undelete:i,source:r,giftCodeSKUId:o,invite:u,isMultiAccount:d}=e;l.default.dispatch({type:\"LOGIN\",login:t,loginMethod:null!=s&&\"\"!==s?y.LoginMethods.LOGIN_CODE:y.LoginMethods.PASSWORD}),this.setLoginCredentials(t,n??s??void 0),p.default.post({url:y.Endpoints.LOGIN,body:{login:t,password:n,undelete:i,login_code:s,login_source:r,gift_code_sku_id:o},retries:2,oldFormErrors:!0,trackedActionData:{event:a.NetworkActionNames.USER_LOGIN,properties:{invite_code:u?.code,is_multi_account:d}},...d?{headers:{authorization:\"\"}}:{}}).then(e=>{let{body:{mfa:t,sms:n,webauthn:s,ticket:i,token:r,backup:a,user_id:o,required_actions:u,totp:f}}=e;l.default.dispatch({type:\"LOGIN_ATTEMPTED\",user_id:o,required_actions:u}),t?l.default.dispatch({type:\"LOGIN_MFA_STEP\",ticket:i,sms:n,webauthn:s,totp:f,backup:a}):d?this.switchAccountToken(r):l.default.dispatch({type:\"LOGIN_SUCCESS\",token:r})},e=>{if(null!=e.body&&e.body?.suspended_user_token!=null){l.default.dispatch({type:\"LOGIN_SUSPENDED_USER\",suspendedUserToken:e.body?.suspended_user_token});return}let s=e.body?.code;s===y.AbortCodes.ACCOUNT_SCHEDULED_FOR_DELETION&&null!=n&&\"\"!==n?l.default.dispatch({type:\"LOGIN_ACCOUNT_SCHEDULED_FOR_DELETION\",credentials:{login:t,password:n}}):s===y.AbortCodes.ACCOUNT_DISABLED&&null!=n&&\"\"!==n?l.default.dispatch({type:\"LOGIN_ACCOUNT_DISABLED\",credentials:{login:t,password:n}}):s===y.AbortCodes.PHONE_VERIFICATION_REQUIRED?l.default.dispatch({type:\"LOGIN_PHONE_IP_AUTHORIZATION_REQUIRED\"}):l.default.dispatch({type:\"LOGIN_FAILURE\",error:new f.V6OrEarlierAPIError(e)})})}",
            "loginMFAv2": "loginMFAv2(e){let t,{code:n,ticket:s,source:i,giftCodeSKUId:r,isMultiAccount:o,mfaType:u}=e;return t=\"webauthn\"===u?y.Endpoints.LOGIN_WEBAUTHN:\"sms\"===u?y.Endpoints.LOGIN_SMS:y.Endpoints.LOGIN_MFA,p.default.post({url:t,body:{code:n,ticket:s,login_source:i,gift_code_sku_id:r},retries:2,oldFormErrors:!0,trackedActionData:{event:a.NetworkActionNames.USER_LOGIN_MFA}}).then(e=>{o?this.switchAccountToken(e.body.token):l.default.dispatch({type:\"LOGIN_SUCCESS\",token:e.body.token})}).catch(e=>{if(null!=e.body&&null!=e.body.suspended_user_token){l.default.dispatch({type:\"LOGIN_SUSPENDED_USER\",suspendedUserToken:e.body.suspended_user_token});return}if(e.body?.code===y.AbortCodes.MFA_INVALID_CODE)throw Error(e.body.message);throw e})}",
            "loginToken": "loginToken(e){let t=!(arguments.length>1)||void 0===arguments[1]||arguments[1];return l.default.dispatch({type:\"LOGIN\"}),new Promise(n=>{setImmediate(()=>{l.default.dispatch({type:\"LOGIN_SUCCESS\",token:e}),t&&this.startSession(e),n()})})}",
            "loginReset": "loginReset(e){l.default.dispatch({type:\"LOGIN_RESET\",isMultiAccount:e})}",
            "loginStatusReset": "loginStatusReset(){l.default.dispatch({type:\"LOGIN_STATUS_RESET\"})}",
            "logoutInternal": "logoutInternal(e){C(e)}",
            "logout": "logout(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:y.Routes.DEFAULT_LOGGED_OUT,t=arguments.length>1?arguments[1]:void 0;return p.default.post({url:y.Endpoints.LOGOUT,body:{provider:(0,I.getDevicePushProvider)(),token:d.default.get(y.DEVICE_TOKEN),voip_provider:I.DEVICE_PUSH_VOIP_PROVIDER,voip_token:d.default.get(y.DEVICE_VOIP_TOKEN)},oldFormErrors:!0,trackedActionData:{event:a.NetworkActionNames.USER_LOGOUT},...null!=t&&{headers:{authorization:o.default.getToken(t)??\"\"}}}).finally(()=>{(null==t||t===h.default.getId())&&A(e)})}",
            "switchAccountToken": "switchAccountToken(e){let t=!(arguments.length>1)||void 0===arguments[1]||arguments[1],n=h.default.getToken();T.log(\"Switching accounts\",{wasLoggedIn:null!=n,tokenHasChanged:e!==n}),C({isSwitchingAccount:!0});let s=this.loginToken(e,!0).then(()=>{let t=h.default.getToken();T.log(\"Switched accounts finished\",{isCorrectToken:e===t})});return t&&(0,m.transitionTo)(y.Routes.ME),s}",
            "verifySSOToken": "verifySSOToken(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:y.Routes.DEFAULT_LOGGED_OUT;return u.default.get({url:y.Endpoints.ME,oldFormErrors:!0}).catch(()=>A(e))}",
            "verify": "verify(e){null!=e?p.default.post({url:y.Endpoints.VERIFY,body:{token:e},oldFormErrors:!0,trackedActionData:{event:a.NetworkActionNames.USER_VERIFY}}).then(e=>{l.default.dispatch({type:\"LOGIN_SUCCESS\",token:e.body.token}),l.default.dispatch({type:\"VERIFY_SUCCESS\",verifyingUserId:e.body.user_id})},e=>l.default.dispatch({type:\"VERIFY_FAILURE\",errors:e.body})):l.default.dispatch({type:\"VERIFY_FAILURE\",errors:{}})}",
            "authorizePayment": "async authorizePayment(e){try{await p.default.post({url:y.Endpoints.AUTHORIZE_PAYMENT,body:{token:e},oldFormErrors:!0,trackedActionData:{event:a.NetworkActionNames.AUTHORIZE_PAYMENT}}),l.default.dispatch({type:\"VERIFY_SUCCESS\"})}catch(e){l.default.dispatch({type:\"VERIFY_FAILURE\",errors:{}})}}",
            "authorizeIPAddress": "async authorizeIPAddress(e){if(null==e){l.default.dispatch({type:\"VERIFY_FAILURE\",errors:{}});return}try{await p.default.post({url:y.Endpoints.AUTHORIZE_IP,body:{token:e},oldFormErrors:!0,trackedActionData:{event:a.NetworkActionNames.AUTHORIZE_IP}}),l.default.dispatch({type:\"VERIFY_SUCCESS\"})}catch(e){l.default.dispatch({type:\"VERIFY_FAILURE\",errors:{}})}}",
            "verifyResend": "()=>p.default.post({url:y.Endpoints.VERIFY_RESEND,oldFormErrors:!0,trackedActionData:{event:a.NetworkActionNames.USER_VERIFY_RESEND}})",
            "resetPassword": "async resetPassword(e,t,n){l.default.dispatch({type:\"LOGIN\"});let s={token:e,password:t,source:n},i=d.default.get(y.DEVICE_TOKEN),r=(0,I.getDevicePushProvider)();null!=r&&null!=i&&(s.push_provider=r,s.push_token=i);let o=d.default.get(y.DEVICE_VOIP_TOKEN);null!=I.DEVICE_PUSH_VOIP_PROVIDER&&null!=o&&(s.push_voip_provider=I.DEVICE_PUSH_VOIP_PROVIDER,s.push_voip_token=o);try{let{body:{mfa:e,sms:t,webauthn:n,ticket:i,token:r,backup:o,totp:u}}=await p.default.post({url:y.Endpoints.RESET_PASSWORD,body:s,oldFormErrors:!0,trackedActionData:{event:a.NetworkActionNames.USER_RESET_PASSWORD}});return{result:e?\"MFA\":\"SUCCESS\",sms:t,webauthn:n,ticket:i,token:r,backup:o,totp:u}}catch(e){throw l.default.dispatch({type:\"LOGIN_FAILURE\",error:new f.V6OrEarlierAPIError(e)}),e}}",
            "resetPasswordMFAv2": "async resetPasswordMFAv2(e){let{method:t,code:n,ticket:s,password:i,token:r,source:o}=e;return l.default.dispatch({type:\"LOGIN_MFA\"}),(await p.default.post({url:y.Endpoints.RESET_PASSWORD,body:{code:n,ticket:s,password:i,token:r,source:o,method:t},oldFormErrors:!0,trackedActionData:{event:a.NetworkActionNames.USER_RESET_PASSWORD,properties:{mfa:!0}}})).body.token}",
            "forgotPassword": "async forgotPassword(e){this.setLoginCredentials(e),l.default.dispatch({type:\"FORGOT_PASSWORD_REQUEST\"});try{await p.default.post({url:y.Endpoints.FORGOT_PASSWORD,body:{login:e},oldFormErrors:!0,trackedActionData:{event:a.NetworkActionNames.FORGOT_PASSWORD}}),l.default.dispatch({type:\"FORGOT_PASSWORD_SENT\"})}catch(t){let e=new f.V6OrEarlierAPIError(t);throw e.code===y.AbortCodes.PHONE_VERIFICATION_REQUIRED?l.default.dispatch({type:\"LOGIN_PASSWORD_RECOVERY_PHONE_VERIFICATION\"}):l.default.dispatch({type:\"LOGIN_FAILURE\",error:e}),t}}",
            "setFingerprint": "setFingerprint(e){l.default.dispatch({type:\"FINGERPRINT\",fingerprint:e})}",
            "getExperiments": "getExperiments(e){l.default.dispatch({type:\"EXPERIMENTS_FETCH\",withGuildExperiments:e})}",
            "getLocationMetadata": "()=>null!=S?S:(clearTimeout(s),s=setTimeout(()=>{l.default.dispatch({type:\"SET_CONSENT_REQUIRED\",consentRequired:!0})},5e3),S=u.default.get({url:y.Endpoints.AUTH_LOCATION_METADATA,retries:2,oldFormErrors:!0}).then(e=>{if(clearTimeout(s),null==E.default.getAuthenticationConsentRequired()){let t=e?.body?.consent_required??!0;l.default.dispatch({type:\"SET_CONSENT_REQUIRED\",consentRequired:t})}if(l.default.dispatch({type:\"SET_LOCATION_METADATA\",countryCode:e?.body?.country_code??void 0}),S=null,e?.body?.promotional_email_opt_in!=null){let t=e.body.promotional_email_opt_in;(0,_.setPromoEmailConsentState)({required:t.required,checked:t.pre_checked,preChecked:t.pre_checked})}},()=>{clearTimeout(s),l.default.dispatch({type:\"SET_CONSENT_REQUIRED\",consentRequired:!0}),S=null}))",
            "closeSuspendedUser": "closeSuspendedUser(){l.default.dispatch({type:\"CLOSE_SUSPENDED_USER\"})}"
        }
    }
}