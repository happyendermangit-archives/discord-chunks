{
    "exports": {
        "generateRsaKeyPair": "function l(){return window.crypto.subtle.generateKey({name:\"RSA-OAEP\",modulusLength:2048,publicExponent:new Uint8Array([1,0,1]),hash:\"SHA-256\"},!0,[\"decrypt\"])}",
        "serializePublicKey": "async function i(e){a(null!=e.publicKey,\"public key cannot be null\");let t=await window.crypto.subtle.exportKey(\"spki\",e.publicKey);return btoa(String.fromCharCode(...new Uint8Array(t)))}",
        "publicKeyFingerprint": "async function o(e){a(null!=e.publicKey,\"public key cannot be null\");let t=await window.crypto.subtle.exportKey(\"spki\",e.publicKey);return c(t)}",
        "decryptEncodedCiphertext": "async function E(e,t){let n=new TextDecoder,s=await f(e,d(t));return n.decode(s)}",
        "decryptNonce": "async function h(e,t){let n=await f(e,d(t));return u(n)}",
        "decodeEncodedUserRecord": "async function _(e,t){t=await E(e,t);let n=t.match(/^(\\d+):(\\d{1,4}):([a-zA-Z0-9_]+):(.*)$/);if(null==n)throw Error(\"Invalid encoded user record.\");let[,s,a,l,i]=n;return new r.default({id:s,discriminator:a,avatar:\"0\"===l?null:l,username:i})}"
    }
}