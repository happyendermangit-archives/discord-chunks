{
    "exports": {
        "MessageTypes": {
            "0": "DEFAULT",
            "1": "RECIPIENT_ADD",
            "2": "RECIPIENT_REMOVE",
            "3": "CALL",
            "4": "CHANNEL_NAME_CHANGE",
            "5": "CHANNEL_ICON_CHANGE",
            "6": "CHANNEL_PINNED_MESSAGE",
            "7": "USER_JOIN",
            "8": "GUILD_BOOST",
            "9": "GUILD_BOOST_TIER_1",
            "10": "GUILD_BOOST_TIER_2",
            "11": "GUILD_BOOST_TIER_3",
            "12": "CHANNEL_FOLLOW_ADD",
            "13": "GUILD_STREAM",
            "14": "GUILD_DISCOVERY_DISQUALIFIED",
            "15": "GUILD_DISCOVERY_REQUALIFIED",
            "16": "GUILD_DISCOVERY_GRACE_PERIOD_INITIAL_WARNING",
            "17": "GUILD_DISCOVERY_GRACE_PERIOD_FINAL_WARNING",
            "18": "THREAD_CREATED",
            "19": "REPLY",
            "20": "CHAT_INPUT_COMMAND",
            "21": "THREAD_STARTER_MESSAGE",
            "22": "GUILD_INVITE_REMINDER",
            "23": "CONTEXT_MENU_COMMAND",
            "24": "AUTO_MODERATION_ACTION",
            "25": "ROLE_SUBSCRIPTION_PURCHASE",
            "26": "INTERACTION_PREMIUM_UPSELL",
            "27": "STAGE_START",
            "28": "STAGE_END",
            "29": "STAGE_SPEAKER",
            "30": "STAGE_RAISE_HAND",
            "31": "STAGE_TOPIC",
            "32": "GUILD_APPLICATION_PREMIUM_SUBSCRIPTION",
            "33": "PRIVATE_CHANNEL_INTEGRATION_ADDED",
            "34": "PRIVATE_CHANNEL_INTEGRATION_REMOVED",
            "35": "PREMIUM_REFERRAL",
            "36": "GUILD_INCIDENT_ALERT_MODE_ENABLED",
            "37": "GUILD_INCIDENT_ALERT_MODE_DISABLED",
            "38": "GUILD_INCIDENT_REPORT_RAID",
            "39": "GUILD_INCIDENT_REPORT_FALSE_ALARM",
            "40": "GUILD_DEADCHAT_REVIVE_PROMPT",
            "41": "CUSTOM_GIFT",
            "42": "GUILD_GAMING_STATS_PROMPT",
            "44": "PURCHASE_NOTIFICATION",
            "45": "VOICE_HANGOUT_INVITE",
            "DEFAULT": 0,
            "RECIPIENT_ADD": 1,
            "RECIPIENT_REMOVE": 2,
            "CALL": 3,
            "CHANNEL_NAME_CHANGE": 4,
            "CHANNEL_ICON_CHANGE": 5,
            "CHANNEL_PINNED_MESSAGE": 6,
            "USER_JOIN": 7,
            "GUILD_BOOST": 8,
            "GUILD_BOOST_TIER_1": 9,
            "GUILD_BOOST_TIER_2": 10,
            "GUILD_BOOST_TIER_3": 11,
            "CHANNEL_FOLLOW_ADD": 12,
            "GUILD_STREAM": 13,
            "GUILD_DISCOVERY_DISQUALIFIED": 14,
            "GUILD_DISCOVERY_REQUALIFIED": 15,
            "GUILD_DISCOVERY_GRACE_PERIOD_INITIAL_WARNING": 16,
            "GUILD_DISCOVERY_GRACE_PERIOD_FINAL_WARNING": 17,
            "THREAD_CREATED": 18,
            "REPLY": 19,
            "CHAT_INPUT_COMMAND": 20,
            "THREAD_STARTER_MESSAGE": 21,
            "GUILD_INVITE_REMINDER": 22,
            "CONTEXT_MENU_COMMAND": 23,
            "AUTO_MODERATION_ACTION": 24,
            "ROLE_SUBSCRIPTION_PURCHASE": 25,
            "INTERACTION_PREMIUM_UPSELL": 26,
            "STAGE_START": 27,
            "STAGE_END": 28,
            "STAGE_SPEAKER": 29,
            "STAGE_RAISE_HAND": 30,
            "STAGE_TOPIC": 31,
            "GUILD_APPLICATION_PREMIUM_SUBSCRIPTION": 32,
            "PRIVATE_CHANNEL_INTEGRATION_ADDED": 33,
            "PRIVATE_CHANNEL_INTEGRATION_REMOVED": 34,
            "PREMIUM_REFERRAL": 35,
            "GUILD_INCIDENT_ALERT_MODE_ENABLED": 36,
            "GUILD_INCIDENT_ALERT_MODE_DISABLED": 37,
            "GUILD_INCIDENT_REPORT_RAID": 38,
            "GUILD_INCIDENT_REPORT_FALSE_ALARM": 39,
            "GUILD_DEADCHAT_REVIVE_PROMPT": 40,
            "CUSTOM_GIFT": 41,
            "GUILD_GAMING_STATS_PROMPT": 42,
            "PURCHASE_NOTIFICATION": 44,
            "VOICE_HANGOUT_INVITE": 45
        },
        "MessageTypesSets": {
            "UNDELETABLE": {
                "toJSON": "function(){return Array.from(this)}",
                "has": "function has() { [native code] }",
                "add": "function add() { [native code] }",
                "delete": "function delete() { [native code] }",
                "clear": "function clear() { [native code] }",
                "entries": "function entries() { [native code] }",
                "forEach": "function forEach() { [native code] }",
                "size": 6,
                "values": "function values() { [native code] }",
                "keys": "function values() { [native code] }",
                "union": "function union() { [native code] }",
                "intersection": "function intersection() { [native code] }",
                "difference": "function difference() { [native code] }",
                "symmetricDifference": "function symmetricDifference() { [native code] }",
                "isSubsetOf": "function isSubsetOf() { [native code] }",
                "isSupersetOf": "function isSupersetOf() { [native code] }",
                "isDisjointFrom": "function isDisjointFrom() { [native code] }"
            },
            "GUILD_DISCOVERY_STATUS": {
                "toJSON": "function(){return Array.from(this)}",
                "has": "function has() { [native code] }",
                "add": "function add() { [native code] }",
                "delete": "function delete() { [native code] }",
                "clear": "function clear() { [native code] }",
                "entries": "function entries() { [native code] }",
                "forEach": "function forEach() { [native code] }",
                "size": 4,
                "values": "function values() { [native code] }",
                "keys": "function values() { [native code] }",
                "union": "function union() { [native code] }",
                "intersection": "function intersection() { [native code] }",
                "difference": "function difference() { [native code] }",
                "symmetricDifference": "function symmetricDifference() { [native code] }",
                "isSubsetOf": "function isSubsetOf() { [native code] }",
                "isSupersetOf": "function isSupersetOf() { [native code] }",
                "isDisjointFrom": "function isDisjointFrom() { [native code] }"
            },
            "USER_MESSAGE": {
                "toJSON": "function(){return Array.from(this)}",
                "has": "function has() { [native code] }",
                "add": "function add() { [native code] }",
                "delete": "function delete() { [native code] }",
                "clear": "function clear() { [native code] }",
                "entries": "function entries() { [native code] }",
                "forEach": "function forEach() { [native code] }",
                "size": 8,
                "values": "function values() { [native code] }",
                "keys": "function values() { [native code] }",
                "union": "function union() { [native code] }",
                "intersection": "function intersection() { [native code] }",
                "difference": "function difference() { [native code] }",
                "symmetricDifference": "function symmetricDifference() { [native code] }",
                "isSubsetOf": "function isSubsetOf() { [native code] }",
                "isSupersetOf": "function isSupersetOf() { [native code] }",
                "isDisjointFrom": "function isDisjointFrom() { [native code] }"
            },
            "REPLYABLE": {
                "toJSON": "function(){return Array.from(this)}",
                "has": "function has() { [native code] }",
                "add": "function add() { [native code] }",
                "delete": "function delete() { [native code] }",
                "clear": "function clear() { [native code] }",
                "entries": "function entries() { [native code] }",
                "forEach": "function forEach() { [native code] }",
                "size": 19,
                "values": "function values() { [native code] }",
                "keys": "function values() { [native code] }",
                "union": "function union() { [native code] }",
                "intersection": "function intersection() { [native code] }",
                "difference": "function difference() { [native code] }",
                "symmetricDifference": "function symmetricDifference() { [native code] }",
                "isSubsetOf": "function isSubsetOf() { [native code] }",
                "isSupersetOf": "function isSupersetOf() { [native code] }",
                "isDisjointFrom": "function isDisjointFrom() { [native code] }"
            },
            "LAZY_LOADED_MESSAGE_REFERENCES": {
                "toJSON": "function(){return Array.from(this)}",
                "has": "function has() { [native code] }",
                "add": "function add() { [native code] }",
                "delete": "function delete() { [native code] }",
                "clear": "function clear() { [native code] }",
                "entries": "function entries() { [native code] }",
                "forEach": "function forEach() { [native code] }",
                "size": 2,
                "values": "function values() { [native code] }",
                "keys": "function values() { [native code] }",
                "union": "function union() { [native code] }",
                "intersection": "function intersection() { [native code] }",
                "difference": "function difference() { [native code] }",
                "symmetricDifference": "function symmetricDifference() { [native code] }",
                "isSubsetOf": "function isSubsetOf() { [native code] }",
                "isSupersetOf": "function isSupersetOf() { [native code] }",
                "isDisjointFrom": "function isDisjointFrom() { [native code] }"
            },
            "AVAILABLE_IN_GUILD_FEED": {
                "toJSON": "function(){return Array.from(this)}",
                "has": "function has() { [native code] }",
                "add": "function add() { [native code] }",
                "delete": "function delete() { [native code] }",
                "clear": "function clear() { [native code] }",
                "entries": "function entries() { [native code] }",
                "forEach": "function forEach() { [native code] }",
                "size": 2,
                "values": "function values() { [native code] }",
                "keys": "function values() { [native code] }",
                "union": "function union() { [native code] }",
                "intersection": "function intersection() { [native code] }",
                "difference": "function difference() { [native code] }",
                "symmetricDifference": "function symmetricDifference() { [native code] }",
                "isSubsetOf": "function isSubsetOf() { [native code] }",
                "isSupersetOf": "function isSupersetOf() { [native code] }",
                "isDisjointFrom": "function isDisjointFrom() { [native code] }"
            },
            "DEADCHAT_PROMPTS": {
                "toJSON": "function(){return Array.from(this)}",
                "has": "function has() { [native code] }",
                "add": "function add() { [native code] }",
                "delete": "function delete() { [native code] }",
                "clear": "function clear() { [native code] }",
                "entries": "function entries() { [native code] }",
                "forEach": "function forEach() { [native code] }",
                "size": 2,
                "values": "function values() { [native code] }",
                "keys": "function values() { [native code] }",
                "union": "function union() { [native code] }",
                "intersection": "function intersection() { [native code] }",
                "difference": "function difference() { [native code] }",
                "symmetricDifference": "function symmetricDifference() { [native code] }",
                "isSubsetOf": "function isSubsetOf() { [native code] }",
                "isSupersetOf": "function isSupersetOf() { [native code] }",
                "isDisjointFrom": "function isDisjointFrom() { [native code] }"
            },
            "NON_COLLAPSIBLE": {
                "toJSON": "function(){return Array.from(this)}",
                "has": "function has() { [native code] }",
                "add": "function add() { [native code] }",
                "delete": "function delete() { [native code] }",
                "clear": "function clear() { [native code] }",
                "entries": "function entries() { [native code] }",
                "forEach": "function forEach() { [native code] }",
                "size": 1,
                "values": "function values() { [native code] }",
                "keys": "function values() { [native code] }",
                "union": "function union() { [native code] }",
                "intersection": "function intersection() { [native code] }",
                "difference": "function difference() { [native code] }",
                "symmetricDifference": "function symmetricDifference() { [native code] }",
                "isSubsetOf": "function isSubsetOf() { [native code] }",
                "isSupersetOf": "function isSupersetOf() { [native code] }",
                "isDisjointFrom": "function isDisjointFrom() { [native code] }"
            },
            "NON_PARSED": {
                "toJSON": "function(){return Array.from(this)}",
                "has": "function has() { [native code] }",
                "add": "function add() { [native code] }",
                "delete": "function delete() { [native code] }",
                "clear": "function clear() { [native code] }",
                "entries": "function entries() { [native code] }",
                "forEach": "function forEach() { [native code] }",
                "size": 3,
                "values": "function values() { [native code] }",
                "keys": "function values() { [native code] }",
                "union": "function union() { [native code] }",
                "intersection": "function intersection() { [native code] }",
                "difference": "function difference() { [native code] }",
                "symmetricDifference": "function symmetricDifference() { [native code] }",
                "isSubsetOf": "function isSubsetOf() { [native code] }",
                "isSupersetOf": "function isSupersetOf() { [native code] }",
                "isDisjointFrom": "function isDisjointFrom() { [native code] }"
            },
            "AUTOMOD_INCIDENT_ACTIONS": {
                "toJSON": "function(){return Array.from(this)}",
                "has": "function has() { [native code] }",
                "add": "function add() { [native code] }",
                "delete": "function delete() { [native code] }",
                "clear": "function clear() { [native code] }",
                "entries": "function entries() { [native code] }",
                "forEach": "function forEach() { [native code] }",
                "size": 4,
                "values": "function values() { [native code] }",
                "keys": "function values() { [native code] }",
                "union": "function union() { [native code] }",
                "intersection": "function intersection() { [native code] }",
                "difference": "function difference() { [native code] }",
                "symmetricDifference": "function symmetricDifference() { [native code] }",
                "isSubsetOf": "function isSubsetOf() { [native code] }",
                "isSupersetOf": "function isSupersetOf() { [native code] }",
                "isDisjointFrom": "function isDisjointFrom() { [native code] }"
            }
        }
    }
}