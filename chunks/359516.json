{
    "exports": {
        "VisibilityObserver": "class l{constructor(e=a){this._nodes=new WeakMap,this._components=new WeakMap,this._visibleComponents=new WeakSet,this._handleEntries=e=>{e.forEach(e=>{let t;if(null!=e.isIntersecting)t=e.isIntersecting;else{let{threshold:s}=this._options;t=null==s?e.intersectionRatio>0:Array.isArray(s)?s.some(t=>e.intersectionRatio>t):e.intersectionRatio>s}let s=this._nodes.get(e.target);if(null!=s){let e=!1;t?!this._visibleComponents.has(s)&&(this._visibleComponents.add(s),e=!0):this._visibleComponents.has(s)&&(this._visibleComponents.delete(s),e=!0),e&&s.forceUpdate()}})},this._options=e,null!=window.IntersectionObserver&&(this._observer=new window.IntersectionObserver(this._handleEntries,e))}isVisible(e){return null==this._observer||this._visibleComponents.has(e)}observe(e){let t=this._observer;if(null==t)return;this.unobserve(e);let s=(0,i.findDOMNode)(e);(0,r.isElement)(s,HTMLElement)&&(this._nodes.set(s,e),this._components.set(e,s),t.observe(s))}unobserve(e){let t=this._observer;if(null==t)return;let s=this._components.get(e);null!=s&&(this._nodes.delete(s),this._components.delete(e),this._visibleComponents.delete(e),t.unobserve(s))}}",
        "VisibilitySensor": "class u extends i.Component{static #e=this.defaultProps={active:!0,children:i.createElement(\"span\"),root:null,rootMargin:\"0px 0px 0px 0px\",threshold:[0,Number.MIN_VALUE]};constructor(e){super(e),this.isVisible=!1;let{root:t,rootMargin:s,threshold:i}=e;t?n.has(t)?this.elementId=n.get(t)||\"\":n.set(t,(0,r.v4)()):this.elementId=l;let u=this.getVisibilityObserverId();!o.has(u)&&o.set(u,new a.default({root:t,rootMargin:s,threshold:i}))}componentDidMount(){if(this.props.active){let e=this.getVisibilityObserver();e.observe(this),this.isVisible=e.isVisible(this),this.props.onChange(this.isVisible)}}componentDidUpdate(e){let t=this.getVisibilityObserver(),s=t.isVisible(this);this.props.active&&s!==this.isVisible&&this.props.onChange(s),!e.active&&this.props.active?t.observe(this):e.active&&!this.props.active&&t.unobserve(this),this.isVisible=s}componentWillUnmount(){this.getVisibilityObserver().unobserve(this)}getVisibilityObserverId(){let{rootMargin:e,threshold:t}=this.props;return`${this.elementId} ${e} ${t}`}getVisibilityObserver(){let e=this.getVisibilityObserverId(),t=o.get(e);if(!t)throw Error(`Visibility sensor with id ${e} not found.`);return t}render(){return i.Children.only(this.props.children)}}"
    }
}