{
    "exports": {
        "MediaSinkWantsLadder": "class r{constructor(e=i.defaultVideoQualityOptions){let{width:t,height:n}=e.videoBudget;if(t<=0||n<=0)throw Error(\"Invalid argument\");this.pixelBudget=t*n,this.ladder=r.calculateLadder(this.pixelBudget),this.orderedLadder=r.calculateOrderedLadder(this.ladder)}getMaxSinkValue(e){if(e<0)throw Error(\"getMaxSinkValue: Requested \"+e);let t=this.orderedLadder[0].wantValue;for(let{pixelCount:n,wantValue:i}of this.orderedLadder){if(n*e>this.pixelBudget)break;t=i}return t}getResolution(e){let t=null;for(let n of this.orderedLadder)if(e>=n.wantValue)t=n;else break;return{width:(t=t??this.orderedLadder[0]).width,height:t.height,budgetPortion:t.budgetPortion,mutedFramerate:t.mutedFramerate,framerate:t.framerate}}static calculateLadder(e){let t=new Set([0,4,8,10]),n=[];for(let i=1;i<4096;++i){let r=16*i/9;if(t.has(r%16)&&t.has(i%16)){let t=r*i;n.push({pixelCount:t,width:r,height:i,budgetPortion:t/e,wantValue:0})}}let o={},a=0,s=100;for(let t=1;t<=25;++t){let _=0,E=0,l=0;for(let i of n){if(i.pixelCount*t>e)break;_=i.width,E=i.height,l=i.budgetPortion}if(a!==_){let e=r.getMutedFramerate(s);o[s]={width:_,height:E,budgetPortion:l,mutedFramerate:e,framerate:i.VIDEO_QUALITY_FRAMERATE},s-=10,a=_}}return o}static getMutedFramerate(e){return e<=20?i.VIDEO_QUALITY_FRAMERATE_MUTED_2:i.VIDEO_QUALITY_FRAMERATE_MUTED}static calculateOrderedLadder(e){let t=[];for(let n of Object.keys(e).map(e=>Number(e)).sort((e,t)=>e-t)){if(0===n)continue;let i=e[n];t.push({pixelCount:i.width*i.height,wantValue:n,...i})}return t}}"
    }
}