{
    "exports": {
        "publicEncrypt": "function(t,e,s){p=t.padding?t.padding:s?1:4;var p,b,h=r(t);if(4===p)b=function(t,e){var s=t.modulus.byteLength(),r=e.length,u=i(\"sha1\").update(d.alloc(0)).digest(),a=u.length,p=2*a;if(r>s-p-2)throw Error(\"message too long\");var b=d.alloc(s-r-p-2),h=s-a-1,l=n(a),g=o(d.concat([u,b,d.alloc(1,1),e],h),c(l,h)),v=o(l,c(g,a));return new f(d.concat([d.alloc(1),v,g],s))}(h,e);else if(1===p)b=function(t,e,s){var r,i=e.length,c=t.modulus.byteLength();if(i>c-11)throw Error(\"message too long\");return r=s?d.alloc(c-i-3,255):function(t){for(var e,s=d.allocUnsafe(t),r=0,i=n(2*t),c=0;r<t;)c===i.length&&(i=n(2*t),c=0),(e=i[c++])&&(s[r++]=e);return s}(c-i-3),new f(d.concat([d.from([0,s?1:2]),r,d.alloc(1),e],c))}(h,e,s);else if(3===p){if((b=new f(e)).cmp(h.modulus)>=0)throw Error(\"data too long for modulus\")}else throw Error(\"unknown padding\");return s?a(b,h):u(b,h)}",
        "privateDecrypt": "function(t,e,s){d=t.padding?t.padding:s?1:4;var d,p,b=r(t),h=b.modulus.byteLength();if(e.length>h||new c(e).cmp(b.modulus)>=0)throw Error(\"decryption error\");p=s?u(new c(e),b):o(e,b);var l=a.alloc(h-p.length);if(p=a.concat([l,p],h),4===d)return function(t,e){var s=t.modulus.byteLength(),r=f(\"sha1\").update(a.alloc(0)).digest(),c=r.length;if(0!==e[0])throw Error(\"decryption error\");var o=e.slice(1,c+1),u=e.slice(c+1),d=i(o,n(u,c)),p=i(u,n(d,s-c-1));if(function(t,e){t=a.from(t),e=a.from(e);var s=0,r=t.length;t.length!==e.length&&(s++,r=Math.min(t.length,e.length));for(var n=-1;++n<r;)s+=t[n]^e[n];return s}(r,p.slice(0,c)))throw Error(\"decryption error\");for(var b=c;0===p[b];)b++;if(1!==p[b++])throw Error(\"decryption error\");return p.slice(b)}(b,p);if(1===d)return function(t,e,s){for(var r=e.slice(0,2),n=2,i=0;0!==e[n++];)if(n>=e.length){i++;break}var c=e.slice(2,n-1);if((\"0002\"!==r.toString(\"hex\")&&!s||\"0001\"!==r.toString(\"hex\")&&s)&&i++,c.length<8&&i++,i)throw Error(\"decryption error\");return e.slice(n)}(b,p,s);if(3===d)return p;else throw Error(\"unknown padding\")}",
        "privateEncrypt": "function(t,s){return e.publicEncrypt(t,s,!0)}",
        "publicDecrypt": "function(t,s){return e.privateDecrypt(t,s,!0)}"
    }
}