{
    "exports": {
        "default": "function S(e){let{applicationId:t,currentEmbeddedApplication:i,activityChannelId:s,locationObject:o,embeddedActivitiesManager:_,analyticsLocations:E}=e,I=u.default.getChannel(s),T=null==I?void 0:I.getGuildId(),C=null==T||\"\"===T,S=d.default.getCurrentUser();if(null==I||C&&!I.isPrivate()||null==s)return Promise.resolve(!1);if(r.default.getVoiceChannelId()===s&&(null==i?void 0:i.id)===t)return(0,A.default)(T,s),Promise.resolve(!0);let N=async function(){let{bypassChangeVcModal:e}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{bypassChangeVcModal:!1},i=(null==S?void 0:S.nsfwAllowed)==null;if(i){var u,r;let i=null!==(r=l.default.getApplication(t))&&void 0!==r?r:a.default.createFromServer(await n.default.fetchApplication(t));if((null===(u=i.embeddedActivityConfig)||void 0===u?void 0:u.requires_age_gate)===!0)return new Promise(n=>{(0,c.confirmActivityAgeGate)({application:i,onAgree:()=>{n(v(t,s,o,E,e))},onDisagree:()=>n(!1)})})}return v(t,s,o,E,e)};return null!=i?new Promise((e,t)=>{(0,f.default)(i,I,()=>{_.leaveActivity({channelId:s,applicationId:i.id}),N({bypassChangeVcModal:!0}).then(e).catch(t)},()=>e(!0))}):N()}"
    }
}