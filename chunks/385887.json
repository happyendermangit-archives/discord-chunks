{
    "exports": {
        "EditorUtils": {
            "above": "above(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{voids:r=!1,mode:n=\"lowest\",at:u=e.selection,match:a}=t;if(u){var o=Y.path(e,u);for(var[i,s]of Y.levels(e,{at:o,voids:r,match:a,reverse:\"lowest\"===n}))if(!Text.isText(i)){if(Range.isRange(u)){if(ea.isAncestor(s,u.anchor.path)&&ea.isAncestor(s,u.focus.path))return[i,s]}else if(!ea.equals(o,s))return[i,s]}}}",
            "addMark": "addMark(e,t,r){e.addMark(t,r)}",
            "after": "after(e,t){var r,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},u=Y.point(e,t,{edge:\"end\"}),a=Y.end(e,[]),{distance:o=1}=n,i=0;for(var s of Y.positions(e,J(J({},n),{},{at:{anchor:u,focus:a}}))){if(i>o)break;0!==i&&(r=s),i++}return r}",
            "before": "before(e,t){var r,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},u=Y.start(e,[]),a=Y.point(e,t,{edge:\"start\"}),{distance:o=1}=n,i=0;for(var s of Y.positions(e,J(J({},n),{},{at:{anchor:u,focus:a},reverse:!0}))){if(i>o)break;0!==i&&(r=s),i++}return r}",
            "deleteBackward": "deleteBackward(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{unit:r=\"character\"}=t;e.deleteBackward(r)}",
            "deleteForward": "deleteForward(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{unit:r=\"character\"}=t;e.deleteForward(r)}",
            "deleteFragment": "deleteFragment(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{direction:r=\"forward\"}=t;e.deleteFragment(r)}",
            "edges": "(e,t)=>[Y.start(e,t),Y.end(e,t)]",
            "end": "(e,t)=>Y.point(e,t,{edge:\"end\"})",
            "first": "first(e,t){var r=Y.path(e,t,{edge:\"start\"});return Y.node(e,r)}",
            "fragment": "fragment(e,t){var r=Y.range(e,t);return Node.fragment(e,r)}",
            "hasBlocks": "(e,t)=>t.children.some(t=>Element.isElement(t)&&Y.isBlock(e,t))",
            "hasInlines": "(e,t)=>t.children.some(t=>Text.isText(t)||Y.isInline(e,t))",
            "hasTexts": "(e,t)=>t.children.every(e=>Text.isText(e))",
            "insertBreak": "insertBreak(e){e.insertBreak()}",
            "insertSoftBreak": "insertSoftBreak(e){e.insertSoftBreak()}",
            "insertFragment": "insertFragment(e,t){e.insertFragment(t)}",
            "insertNode": "insertNode(e,t){e.insertNode(t)}",
            "insertText": "insertText(e,t){e.insertText(t)}",
            "isBlock": "(e,t)=>f.isElement(t)&&a.Editor.isBlock(e,t)",
            "isEditor": "isEditor(e){var t=Q.get(e);if(void 0!==t)return t;if(!(0,a.isPlainObject)(e))return!1;var r=\"function\"==typeof e.addMark&&\"function\"==typeof e.apply&&\"function\"==typeof e.deleteBackward&&\"function\"==typeof e.deleteForward&&\"function\"==typeof e.deleteFragment&&\"function\"==typeof e.insertBreak&&\"function\"==typeof e.insertSoftBreak&&\"function\"==typeof e.insertFragment&&\"function\"==typeof e.insertNode&&\"function\"==typeof e.insertText&&\"function\"==typeof e.isInline&&\"function\"==typeof e.isVoid&&\"function\"==typeof e.normalizeNode&&\"function\"==typeof e.onChange&&\"function\"==typeof e.removeMark&&\"function\"==typeof e.getDirtyPaths&&(null===e.marks||(0,a.isPlainObject)(e.marks))&&(null===e.selection||Range.isRange(e.selection))&&Node.isNodeList(e.children)&&eu.isOperationList(e.operations);return Q.set(e,r),r}",
            "isEnd": "isEnd(e,t,r){var n=Y.end(e,r);return el.equals(t,n)}",
            "isEdge": "(e,t,r)=>Y.isStart(e,t,r)||Y.isEnd(e,t,r)",
            "isEmpty": "isEmpty(e,t){var{children:r}=t,[n]=r;return 0===r.length||1===r.length&&Text.isText(n)&&\"\"===n.text&&!e.isVoid(t)}",
            "isInline": "(e,t)=>f.isElement(t)&&a.Editor.isInline(e,t)",
            "isNormalizing": "isNormalizing(e){var t=f.get(e);return void 0===t||t}",
            "isStart": "isStart(e,t,r){if(0!==t.offset)return!1;var n=Y.start(e,r);return el.equals(t,n)}",
            "isVoid": "(e,t)=>f.isElement(t)&&a.Editor.isVoid(e,t)",
            "last": "last(e,t){var r=Y.path(e,t,{edge:\"end\"});return Y.node(e,r)}",
            "leaf": "leaf(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},n=Y.path(e,t,r);return[Node.leaf(e,n),n]}",
            "levels": "*levels(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{at:r=e.selection,reverse:n=!1,voids:u=!1}=t,{match:a}=t;if(null==a&&(a=()=>!0),r){var o=[],i=Y.path(e,r);for(var[s,l]of Node.levels(e,i))if(a(s,l)&&(o.push([s,l]),!u&&Element.isElement(s)&&Y.isVoid(e,s)))break;n&&o.reverse(),yield*o}}",
            "marks": "marks(e){var{marks:t,selection:r}=e;if(!r)return null;if(t)return t;if(Range.isExpanded(r)){var[n]=Y.nodes(e,{match:Text.isText});if(!n)return{};var[u]=n;return g(u,K)}var{anchor:a}=r,{path:o}=a,[i]=Y.leaf(e,o);if(0===a.offset){var s=Y.previous(e,{at:o,match:Text.isText});if(!Y.above(e,{match:t=>Element.isElement(t)&&Y.isVoid(e,t)&&e.markableVoid(t)})){var l=Y.above(e,{match:t=>Element.isElement(t)&&Y.isBlock(e,t)});if(s&&l){var[c,f]=s,[,d]=l;ea.isAncestor(d,f)&&(i=c)}}}return g(i,$)}",
            "next": "next(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{mode:r=\"lowest\",voids:n=!1}=t,{match:u,at:a=e.selection}=t;if(!!a){var o=Y.after(e,a,{voids:n});if(o){var[,i]=Y.last(e,[]),s=[o.path,i];if(ea.isPath(a)&&0===a.length)throw Error(\"Cannot get the next node from the root node!\");if(null==u){if(ea.isPath(a)){var[l]=Y.parent(e,a);u=e=>l.children.includes(e)}else u=()=>!0}var[c]=Y.nodes(e,{at:s,match:u,mode:r,voids:n});return c}}}",
            "node": "node(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},n=Y.path(e,t,r);return[Node.get(e,n),n]}",
            "nodes": "*nodes(e){var t,r,n,u=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{at:a=e.selection,mode:o=\"all\",universal:i=!1,reverse:s=!1,voids:l=!1}=u,{match:c}=u;if(!c&&(c=()=>!0),a){if(G.isSpan(a))t=a[0],r=a[1];else{var f=Y.path(e,a,{edge:\"start\"}),d=Y.path(e,a,{edge:\"end\"});t=s?d:f,r=s?f:d}var D=Node.nodes(e,{reverse:s,from:t,to:r,pass:t=>{var[r]=t;return!l&&Element.isElement(r)&&Y.isVoid(e,r)}}),h=[];for(var[v,p]of D){var C=n&&0===ea.compare(p,n[1]);if(\"highest\"!==o||!C){if(!c(v,p)){if(i&&!C&&Text.isText(v))return;continue}if(\"lowest\"===o&&C){n=[v,p];continue}var g=\"lowest\"===o?n:[v,p];g&&(i?h.push(g):yield g),n=[v,p]}}\"lowest\"===o&&n&&(i?h.push(n):yield n),i&&(yield*h)}}",
            "normalize": "normalize(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{force:r=!1,operation:n}=t,u=e=>s.get(e)||[],a=e=>l.get(e)||new Set,o=e=>{var t=u(e).pop(),r=t.join(\",\");return a(e).delete(r),t};if(!!Y.isNormalizing(e)){if(r){var i=Array.from(Node.nodes(e),e=>{var[,t]=e;return t}),c=new Set(i.map(e=>e.join(\",\")));s.set(e,i),l.set(e,c)}0!==u(e).length&&Y.withoutNormalizing(e,()=>{for(var t of u(e))if(Node.has(e,t)){var r=Y.node(e,t),[a,i]=r;Element.isElement(a)&&0===a.children.length&&e.normalizeNode(r,{operation:n})}for(var s=u(e),l=s.length,c=0;0!==s.length;){if(!e.shouldNormalize({dirtyPaths:s,iteration:c,initialDirtyPathsLength:l,operation:n}))return;var f=o(e);if(Node.has(e,f)){var d=Y.node(e,f);e.normalizeNode(d,{operation:n})}c++,s=u(e)}})}}",
            "parent": "parent(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},n=Y.path(e,t,r),u=ea.parent(n);return Y.node(e,u)}",
            "path": "path(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},{depth:n,edge:u}=r;if(ea.isPath(t)){if(\"start\"===u){var[,a]=Node.first(e,t);t=a}else if(\"end\"===u){var[,o]=Node.last(e,t);t=o}}return Range.isRange(t)&&(t=\"start\"===u?Range.start(t):\"end\"===u?Range.end(t):ea.common(t.anchor.path,t.focus.path)),el.isPoint(t)&&(t=t.path),null!=n&&(t=t.slice(0,n)),t}",
            "hasPath": "(e,t)=>Node.has(e,t)",
            "pathRef": "pathRef(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},{affinity:n=\"forward\"}=r,u={current:t,affinity:n,unref(){var{current:t}=u;return Y.pathRefs(e).delete(u),u.current=null,t}};return Y.pathRefs(e).add(u),u}",
            "pathRefs": "pathRefs(e){var t=d.get(e);return!t&&(t=new Set,d.set(e,t)),t}",
            "point": "point(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},{edge:n=\"start\"}=r;if(ea.isPath(t)){if(\"end\"===n){var u,[,a]=Node.last(e,t);u=a}else{var[,o]=Node.first(e,t);u=o}var i=Node.get(e,u);if(!Text.isText(i))throw Error(\"Cannot get the \".concat(n,\" point in the node at path [\").concat(t,\"] because it has no \").concat(n,\" text node.\"));return{path:u,offset:\"end\"===n?i.text.length:0}}if(Range.isRange(t)){var[s,l]=Range.edges(t);return\"start\"===n?s:l}return t}",
            "pointRef": "pointRef(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},{affinity:n=\"forward\"}=r,u={current:t,affinity:n,unref(){var{current:t}=u;return Y.pointRefs(e).delete(u),u.current=null,t}};return Y.pointRefs(e).add(u),u}",
            "pointRefs": "pointRefs(e){var t=D.get(e);return!t&&(t=new Set,D.set(e,t)),t}",
            "positions": "*positions(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{at:r=e.selection,unit:n=\"offset\",reverse:u=!1,voids:a=!1}=t;if(r){var o=Y.range(e,r),[i,s]=Range.edges(o),l=u?s:i,c=!1,f=\"\",d=0,D=0,h=0;for(var[v,p]of Y.nodes(e,{at:r,reverse:u,voids:a})){if(Element.isElement(v)){if(!a&&e.isVoid(v)){yield Y.start(e,p);continue}if(e.isInline(v))continue;if(Y.hasInlines(e,v)){var C=ea.isAncestor(p,s.path)?s:Y.end(e,p),g=ea.isAncestor(p,i.path)?i:Y.start(e,p);f=Y.string(e,{anchor:g,focus:C},{voids:a}),c=!0}}if(Text.isText(v)){var E=ea.equals(p,l.path);for(E?(D=u?l.offset:v.text.length-l.offset,h=l.offset):(D=v.text.length,h=u?D:0),(E||c||\"offset\"===n)&&(yield{path:p,offset:h},c=!1);;){if(0===d){if(\"\"===f)break;d=function(e,t,r){if(\"character\"===t)return B(e,r);if(\"word\"===t)return F(e,r);if(\"line\"===t||\"block\"===t)return e.length;return 1}(f,n,u),f=b(f,d,u)[1]}if(h=u?h-d:h+d,(D-=d)<0){d=-D;break}d=0,yield{path:p,offset:h}}}}}}",
            "previous": "previous(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{mode:r=\"lowest\",voids:n=!1}=t,{match:u,at:a=e.selection}=t;if(!!a){var o=Y.before(e,a,{voids:n});if(o){var[,i]=Y.first(e,[]),s=[o.path,i];if(ea.isPath(a)&&0===a.length)throw Error(\"Cannot get the previous node from the root node!\");if(null==u){if(ea.isPath(a)){var[l]=Y.parent(e,a);u=e=>l.children.includes(e)}else u=()=>!0}var[c]=Y.nodes(e,{reverse:!0,at:s,match:u,mode:r,voids:n});return c}}}",
            "range": "(e,t,r)=>Range.isRange(t)&&!r?t:{anchor:Y.start(e,t),focus:Y.end(e,r||t)}",
            "rangeRef": "rangeRef(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},{affinity:n=\"forward\"}=r,u={current:t,affinity:n,unref(){var{current:t}=u;return Y.rangeRefs(e).delete(u),u.current=null,t}};return Y.rangeRefs(e).add(u),u}",
            "rangeRefs": "rangeRefs(e){var t=h.get(e);return!t&&(t=new Set,h.set(e,t)),t}",
            "removeMark": "removeMark(e,t){e.removeMark(t)}",
            "setNormalizing": "setNormalizing(e,t){f.set(e,t)}",
            "start": "(e,t)=>Y.point(e,t,{edge:\"start\"})",
            "string": "string(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},{voids:n=!1}=r,u=Y.range(e,t),[a,o]=Range.edges(u),i=\"\";for(var[s,l]of Y.nodes(e,{at:u,match:Text.isText,voids:n})){var c=s.text;ea.equals(l,o.path)&&(c=c.slice(0,o.offset)),ea.equals(l,a.path)&&(c=c.slice(a.offset)),i+=c}return i}",
            "unhangRange": "unhangRange(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},{voids:n=!1}=r,[u,a]=Range.edges(t);if(0!==u.offset||0!==a.offset||Range.isCollapsed(t)||ea.hasPrevious(a.path))return t;var o=Y.above(e,{at:a,match:t=>Element.isElement(t)&&Y.isBlock(e,t),voids:n}),i=o?o[1]:[],s={anchor:Y.start(e,u),focus:a},l=!0;for(var[c,f]of Y.nodes(e,{at:s,match:Text.isText,reverse:!0,voids:n})){if(l){l=!1;continue}if(\"\"!==c.text||ea.isBefore(f,i)){a={path:f,offset:c.text.length};break}}return{anchor:u,focus:a}}",
            "void": "void(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return Y.above(e,J(J({},t),{},{match:t=>Element.isElement(t)&&Y.isVoid(e,t)}))}",
            "withoutNormalizing": "withoutNormalizing(e,t){let n=d.isNormalizing(e);d.setNormalizing(e,!1);try{t()}finally{d.setNormalizing(e,n)}!1!==n&&d.normalize(e)}",
            "isComposing": "e=>!!S.get(e)",
            "getWindow": "getWindow(e){var t=F.get(e);if(!t)throw Error(\"Unable to find a host window element for this editor\");return t}",
            "findKey": "findKey(e,t){var r=O.get(t);return!r&&(r=new E,O.set(t,r)),r}",
            "findPath": "findPath(e,t){for(var r=[],n=t;;){var u=A.get(n);if(null==u){if(d.Editor.isEditor(n))return r;break}var a=m.get(n);if(null==a)break;r.unshift(a),n=u}throw Error(\"Unable to find the path for Slate node: \".concat(d.Scrubber.stringify(t)))}",
            "findDocumentOrShadowRoot": "t=>{var n,l;return null!==(l=null===(n=t.windowContext)||void 0===n?void 0:n.renderWindow.document)&&void 0!==l?l:e(t)}",
            "isFocused": "e=>!!j.get(e)",
            "isReadOnly": "e=>!!P.get(e)",
            "blur": "blur(e){var t=em.toDOMNode(e,e),r=em.findDocumentOrShadowRoot(e);j.set(e,!1),r.activeElement===t&&t.blur()}",
            "focus": "focus(e){!s.ReactEditor.isFocused(e)&&(s.ReactEditor.focus(e),s.ReactEditor.deselect(e))}",
            "deselect": "deselect(e){var{selection:t}=e,r=em.findDocumentOrShadowRoot(e).getSelection();r&&r.rangeCount>0&&r.removeAllRanges(),t&&d.Transforms.deselect(e)}",
            "hasDOMNode": "hasDOMNode(e,t){var r,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},{editable:u=!1}=n,a=em.toDOMNode(e,e);try{r=$(t)?t:t.parentElement}catch(e){if(!e.message.includes('Permission denied to access property \"nodeType\"'))throw e}return!!r&&r.closest(\"[data-slate-editor]\")===a&&(!u||!!r.isContentEditable||\"boolean\"==typeof r.isContentEditable&&r.closest('[contenteditable=\"false\"]')===a||!!r.getAttribute(\"data-slate-zero-width\"))}",
            "insertData": "insertData(e,t){e.insertData(t)}",
            "insertFragmentData": "(e,t)=>e.insertFragmentData(t)",
            "insertTextData": "(e,t)=>e.insertTextData(t)",
            "setFragmentData": "setFragmentData(e,t,r){e.setFragmentData(t,r)}",
            "toDOMNode": "toDOMNode(e,t){var r=k.get(e),n=d.Editor.isEditor(t)?b.get(e):null==r?void 0:r.get(em.findKey(e,t));if(!n)throw Error(\"Cannot resolve a DOM node from Slate node: \".concat(d.Scrubber.stringify(t)));return n}",
            "toDOMPoint": "toDOMPoint(e,t){var[r]=d.Editor.node(e,t.path),n=em.toDOMNode(e,r);d.Editor.void(e,{at:t})&&(t={path:t.path,offset:0});for(var u=Array.from(n.querySelectorAll(\"[data-slate-string], [data-slate-zero-width]\")),a=0,o=0;o<u.length;o++){var i=u[o],s=i.childNodes[0];if(null!=s&&null!=s.textContent){var{length:l}=s.textContent,c=i.getAttribute(\"data-slate-length\"),f=a+(null==c?l:parseInt(c,10)),D=u[o+1];if(t.offset===f&&null!=D&&D.hasAttribute(\"data-slate-mark-placeholder\")){var h,v,p=D.childNodes[0];h=[p instanceof U?p:D,null!==(v=D.textContent)&&void 0!==v&&v.startsWith(\"\\uFEFF\")?1:0];break}if(t.offset<=f){h=[s,Math.min(l,Math.max(0,t.offset-a))];break}a=f}}if(!h)throw Error(\"Cannot resolve a DOM point from Slate point: \".concat(d.Scrubber.stringify(t)));return h}",
            "toDOMRange": "toDOMRange(e,t){var{anchor:r,focus:n}=t,u=d.Range.isBackward(t),a=em.toDOMPoint(e,r),o=d.Range.isCollapsed(t)?a:em.toDOMPoint(e,n),i=em.getWindow(e).document.createRange(),[s,l]=u?o:a,[c,f]=u?a:o,D=!!($(s)?s:s.parentElement).getAttribute(\"data-slate-zero-width\"),h=!!($(c)?c:c.parentElement).getAttribute(\"data-slate-zero-width\");return i.setStart(s,D?1:l),i.setEnd(c,h?1:f),i}",
            "toSlateNode": "toSlateNode(e,t){var r=$(t)?t:t.parentElement;r&&!r.hasAttribute(\"data-slate-node\")&&(r=r.closest(\"[data-slate-node]\"));var n=r?w.get(r):null;if(!n)throw Error(\"Cannot resolve a Slate node from DOM node: \".concat(r));return n}",
            "findEventRange": "findEventRange(e,t){\"nativeEvent\"in t&&(t=t.nativeEvent);var r,{clientX:n,clientY:u,target:a}=t;if(null==n||null==u)throw Error(\"Cannot resolve a Slate range from a DOM event: \".concat(t));var o=em.toSlateNode(e,t.target),i=em.findPath(e,o);if(d.Element.isElement(o)&&d.Editor.isVoid(e,o)){var s=a.getBoundingClientRect(),l=e.isInline(o)?n-s.left<s.left+s.width-n:u-s.top<s.top+s.height-u,c=d.Editor.point(e,i,{edge:l?\"start\":\"end\"}),f=l?d.Editor.before(e,c):d.Editor.after(e,c);if(f)return d.Editor.range(e,f)}var{document:D}=em.getWindow(e);if(D.caretRangeFromPoint)r=D.caretRangeFromPoint(n,u);else{var h=D.caretPositionFromPoint(n,u);h&&((r=D.createRange()).setStart(h.offsetNode,h.offset),r.setEnd(h.offsetNode,h.offset))}if(!r)throw Error(\"Cannot resolve a Slate range from a DOM event: \".concat(t));return em.toSlateRange(e,r,{exactMatch:!1,suppressThrow:!1})}",
            "toSlatePoint": "(t,n,l)=>{let{exactMatch:i,suppressThrow:a,direction:r=\"forward\"}=l;!i&&(n=s(n,r));try{return e(t,n,{exactMatch:!0,suppressThrow:a})}catch(e){if(a)return null;throw e}}",
            "toSlateRange": "(e,t,n)=>{let i,a,s,r,o,{exactMatch:u,suppressThrow:c}=n;if(function(e){let t=e&&e.anchorNode&&d(e.anchorNode);return null!=t&&e instanceof t.Selection}(t)?(i=t.anchorNode,a=t.anchorOffset,s=t.focusNode,r=t.focusOffset,o=t.isCollapsed):(i=t.startContainer,a=t.startOffset,s=t.endContainer,r=t.endOffset,o=t.collapsed),null==i||null==s||null==a||null==r){if(c)return null;throw Error(\"Cannot resolve a Slate range from DOM range\")}let f=l.ReactEditor.toSlatePoint(e,[i,a],{exactMatch:u,suppressThrow:c}),m=o?f:l.ReactEditor.toSlatePoint(e,[s,r],{exactMatch:u,suppressThrow:c});return null!=f&&null!=m?{anchor:f,focus:m}:null}",
            "hasRange": "hasRange(e,t){var{anchor:r,focus:n}=t;return d.Editor.hasPath(e,r.path)&&d.Editor.hasPath(e,n.path)}",
            "hasTarget": "(e,t)=>X(t)&&em.hasDOMNode(e,t)",
            "hasEditableTarget": "(e,t)=>X(t)&&em.hasDOMNode(e,t,{editable:!0})",
            "hasSelectableTarget": "(e,t)=>em.hasEditableTarget(e,t)||em.isTargetInsideNonReadonlyVoid(e,t)",
            "isTargetInsideNonReadonlyVoid": "isTargetInsideNonReadonlyVoid(e,t){if(P.get(e))return!1;var r=em.hasTarget(e,t)&&em.toSlateNode(e,t);return d.Element.isElement(r)&&d.Editor.isVoid(e,r)}",
            "androidScheduleFlush": "androidScheduleFlush(e){var t;null===(t=M.get(e))||void 0===t||t()}",
            "androidPendingDiffs": "e=>I.get(e)",
            "richValue": "e=>e.children",
            "blocks": "e=>d.richValue(e).map((e,t)=>[e,[t]])",
            "isEditorEmpty": "isEditorEmpty(e){let t=d.richValue(e);return!(t.length>1)&&(0===t.length||\"line\"===t[0].type&&f.isEmpty(t[0]))}",
            "getFirstText": "getFirstText(e){let t=d.node(e,o.FIRST_TEXT_PATH);return m.isText(t[0])?t[0]:null}",
            "getCurrentBlock": "getCurrentBlock(e){return null==e.selection?null:this.getParentBlock(e,e.selection)}",
            "getCurrentElement": "getCurrentElement(e){return null==e.selection?null:this.getParentElement(e,e.selection)}",
            "getCurrentInline": "getCurrentInline(e){return null==e.selection?null:this.getParentInline(e,e.selection)}",
            "getCurrentVoid": "getCurrentVoid(e){return null==e.selection?null:this.getParentVoid(e,e.selection)}",
            "getCurrentText": "getCurrentText(e){let t=null!=e.selection?E.toPoint(e.selection):null;return null==t?null:d.node(e,t.path)}",
            "getParentBlock": "getParentBlock(e,t){var n;return null!==(n=d.above(e,{at:t,match:t=>f.isElement(t)&&d.isBlock(e,t),mode:\"lowest\"}))&&void 0!==n?n:null}",
            "getParentElement": "getParentElement(e,t){var n;return null!==(n=d.above(e,{at:t,match:e=>f.isElement(e),mode:\"lowest\"}))&&void 0!==n?n:null}",
            "getParentInline": "getParentInline(e,t){var n;return null!==(n=d.above(e,{at:t,match:t=>d.isInline(e,t),mode:\"lowest\"}))&&void 0!==n?n:null}",
            "getParentVoid": "getParentVoid(e,t){var n;return null!==(n=d.above(e,{at:t,match:t=>d.isVoid(e,t),mode:\"lowest\"}))&&void 0!==n?n:null}",
            "getSelectedVoid": "getSelectedVoid(e){let t;if(null==e.selection)return null;if(E.isExpanded(e.selection)){let[n,l]=E.edges(e.selection),i=d.after(e,n,{unit:\"offset\"}),a=d.before(e,l,{unit:\"offset\"});if(null==i||null==a||!h.equals(i,a))return null;t=i}else t=e.selection.anchor;return null==t?null:d.getParentVoid(e,t)}",
            "getSelectedText": "getSelectedText(e,t){let n=null;if(t){let t=s.ReactEditor.findDocumentOrShadowRoot(e),l=t.getSelection();if(null!=l&&l.rangeCount>0){let t=l.getRangeAt(0);null!=t&&(n=s.ReactEditor.toSlateRange(e,t,{exactMatch:!0,suppressThrow:!0}))}}else n=e.selection;return null==n?\"\":this.getTextFromRange(e,n)}",
            "getTextFromRange": "getTextFromRange(e,t){let[n,l]=E.edges(t),i=d.nodes(e,{at:t,mode:\"lowest\",match:e=>m.isText(e)}),a=\"\";for(let[e,t]of i){let i=p.equals(t,n.path)?n.offset:0,s=p.equals(t,l.path)?l.offset:0;a+=e.text.substring(i,s)}return a}",
            "areStylesDisabled": "areStylesDisabled(e){var t;if(!e.previewMarkdown)return!0;let n=d.richValue(e),l=n[0],i=(null==l?void 0:l.type)===\"line\"?l.children[0]:null;if(null==i||!m.isText(i))return!1;let a=e.chatInputType,s=i.text;return 1===n.length&&1===l.children.length&&(!0===a.sedReplace&&s.startsWith(\"s/\")||(null===(t=a.autocomplete)||void 0===t?void 0:t.reactions)===!0&&s.startsWith(\"+\"))}",
            "getSelectionOverlap": "getSelectionOverlap(e,t){if(null==e.selection)return{anchor:null,focus:null};if(p.isPath(t)){let n=d.range(e,t),[l]=d.node(e,t);if(f.isElement(l)){let l=d.before(e,t),i=d.after(e,t);t={anchor:null!=l?l:n.anchor,focus:null!=i?i:n.focus}}else t=n}let[n,l]=E.edges(t),i=null,a=null;return h.equals(e.selection.anchor,n)?i=\"start\":h.equals(e.selection.anchor,l)?i=\"end\":E.includes(t,e.selection.anchor)&&(i=\"inside\"),h.equals(e.selection.focus,n)?a=\"start\":h.equals(e.selection.focus,l)?a=\"end\":E.includes(t,e.selection.focus)&&(a=\"inside\"),{anchor:i,focus:a}}"
        },
        "NodeUtils": {
            "ancestor": "ancestor(e,t){var r=Node.get(e,t);if(Text.isText(r))throw Error(\"Cannot get the ancestor node at path [\".concat(t,\"] because it refers to a text node instead: \").concat(ev.stringify(r)));return r}",
            "ancestors": "*ancestors(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};for(var n of ea.ancestors(t,r)){var u=[Node.ancestor(e,n),n];yield u}}",
            "child": "child(e,t){if(Text.isText(e))throw Error(\"Cannot get the child of a text node: \".concat(ev.stringify(e)));var r=e.children[t];if(null==r)throw Error(\"Cannot get child at index `\".concat(t,\"` in node: \").concat(ev.stringify(e)));return r}",
            "children": "*children(e,t){for(var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},{reverse:n=!1}=r,u=Node.ancestor(e,t),{children:a}=u,o=n?a.length-1:0;n?o>=0:o<a.length;){var i=Node.child(u,o),s=t.concat(o);yield[i,s],o=n?o-1:o+1}}",
            "common": "common(e,t,r){var n=ea.common(t,r);return[Node.get(e,n),n]}",
            "descendant": "descendant(e,t){var r=Node.get(e,t);if(Y.isEditor(r))throw Error(\"Cannot get the descendant node at path [\".concat(t,\"] because it refers to the root editor node instead: \").concat(ev.stringify(r)));return r}",
            "descendants": "*descendants(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};for(var[r,n]of Node.nodes(e,t))0!==n.length&&(yield[r,n])}",
            "elements": "*elements(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};for(var[r,n]of Node.nodes(e,t))Element.isElement(r)&&(yield[r,n])}",
            "extractProps": "extractProps(e){if(Element.isAncestor(e)){var t=g(e,Z);return t}var t=g(e,ee);return t}",
            "first": "first(e,t){for(var r=t.slice(),n=Node.get(e,r);n&&!Text.isText(n)&&0!==n.children.length;){;n=n.children[0],r.push(0)}return[n,r]}",
            "fragment": "fragment(e,t){if(Text.isText(e))throw Error(\"Cannot get a fragment starting from a root text node: \".concat(ev.stringify(e)));return(0,o.produce)({children:e.children},e=>{var[r,n]=Range.edges(t);for(var[,u]of Node.nodes(e,{reverse:!0,pass:e=>{var[,r]=e;return!Range.includes(t,r)}})){if(!Range.includes(t,u)){var a=Node.parent(e,u),o=u[u.length-1];a.children.splice(o,1)}if(ea.equals(u,n.path)){var i=Node.leaf(e,u);i.text=i.text.slice(0,n.offset)}if(ea.equals(u,r.path)){var s=Node.leaf(e,u);s.text=s.text.slice(r.offset)}}Y.isEditor(e)&&(e.selection=null)}).children}",
            "get": "get(e,t){for(var r=e,n=0;n<t.length;n++){var u=t[n];if(Text.isText(r)||!r.children[u])throw Error(\"Cannot find a descendant at path [\".concat(t,\"] in node: \").concat(ev.stringify(e)));r=r.children[u]}return r}",
            "has": "has(e,t){for(var r=e,n=0;n<t.length;n++){var u=t[n];if(Text.isText(r)||!r.children[u])return!1;r=r.children[u]}return!0}",
            "isNode": "e=>Text.isText(e)||Element.isElement(e)||Y.isEditor(e)",
            "isNodeList": "isNodeList(e){if(!Array.isArray(e))return!1;var t=et.get(e);if(void 0!==t)return t;var r=e.every(e=>Node.isNode(e));return et.set(e,r),r}",
            "last": "last(e,t){for(var r=t.slice(),n=Node.get(e,r);n&&!Text.isText(n)&&0!==n.children.length;){;var u=n.children.length-1;n=n.children[u],r.push(u)}return[n,r]}",
            "leaf": "leaf(e,t){var r=Node.get(e,t);if(!Text.isText(r))throw Error(\"Cannot get the leaf node at path [\".concat(t,\"] because it refers to a non-leaf node: \").concat(ev.stringify(r)));return r}",
            "levels": "*levels(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};for(var n of ea.levels(t,r)){var u=Node.get(e,n);yield[u,n]}}",
            "matches": "(e,t)=>Element.isElement(e)&&Element.isElementProps(t)&&Element.matches(e,t)||Text.isText(e)&&Text.isTextProps(t)&&Text.matches(e,t)",
            "nodes": "*nodes(e){for(var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{pass:r,reverse:n=!1}=t,{from:u=[],to:a}=t,o=new Set,i=[],s=e;!(a&&(n?ea.isBefore(i,a):ea.isAfter(i,a)));){;if(!o.has(s)&&(yield[s,i]),!o.has(s)&&!Text.isText(s)&&0!==s.children.length&&(null==r||!1===r([s,i]))){o.add(s);var l=n?s.children.length-1:0;ea.isAncestor(i,u)&&(l=u[i.length]),i=i.concat(l),s=Node.get(e,i);continue}if(0===i.length)break;if(!n){var c=ea.next(i);if(Node.has(e,c)){i=c,s=Node.get(e,i);continue}}if(n&&0!==i[i.length-1]){i=ea.previous(i),s=Node.get(e,i);continue}i=ea.parent(i),s=Node.get(e,i),o.add(s)}}",
            "parent": "parent(e,t){var r=ea.parent(t),n=Node.get(e,r);if(Text.isText(n))throw Error(\"Cannot get the parent of path [\".concat(t,\"] because it does not exist in the root.\"));return n}",
            "string": "e=>Text.isText(e)?e.text:e.children.map(Node.string).join(\"\")",
            "texts": "*texts(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};for(var[r,n]of Node.nodes(e,t))Text.isText(r)&&(yield[r,n])}",
            "isType": "(e,t)=>a.Element.isElement(e)&&e.type===t",
            "isInTypes": "(e,t)=>a.Element.isElement(e)&&t.has(e.type)"
        },
        "ElementUtils": {
            "isAncestor": "e=>(0,a.isPlainObject)(e)&&Node.isNodeList(e.children)",
            "isElement": "e=>(0,a.isPlainObject)(e)&&Node.isNodeList(e.children)&&!Y.isEditor(e)",
            "isElementList": "e=>Array.isArray(e)&&e.every(e=>Element.isElement(e))",
            "isElementProps": "e=>void 0!==e.children",
            "isElementType": "function(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:\"type\";return H(e)&&e[r]===t}",
            "matches": "matches(e,t){for(var r in t)if(\"children\"!==r&&e[r]!==t[r])return!1;return!0}",
            "updateElement": "updateElement(e,t){let n=d.node(e,t[1]);return i(!d.isEditor(t[0]),\"Element is the root node\"),i(null!=n,\"Failed to find element\"),i(f.isElement(n[0]),\"Node at this path is no longer an element\"),i(n[0].type===t[0].type,\"Node at this path is a different type\"),n}",
            "markdown": "markdown(e,t,n){var l;let i=\"line\"===e.type&&(null===(l=e.codeBlockState)||void 0===l?void 0:l.wasInCodeBlock)===!0,a=e.children.map(e=>m.isText(e)?e.text:\" \"),s=a.join(\"\"),o=r.parse(s,null!=t?t:null,i,n);return{entries:o,serializedChildren:a}}",
            "isEmpty": "isEmpty(e){if(e.children.length>1)return!1;if(0===e.children.length)return!0;let t=e.children[0];return m.isText(t)&&0===t.text.length}"
        },
        "TextUtils": {
            "equals": "equals(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},{loose:n=!1}=r;function u(e){return g(e,eC)}return ep(n?g(e,eC):e,n?g(t,eC):t)}",
            "isText": "e=>(0,a.isPlainObject)(e)&&\"string\"==typeof e.text",
            "isTextList": "e=>Array.isArray(e)&&e.every(e=>Text.isText(e))",
            "isTextProps": "e=>void 0!==e.text",
            "matches": "matches(e,t){for(var r in t)if(\"text\"!==r&&(!e.hasOwnProperty(r)||e[r]!==t[r]))return!1;return!0}",
            "decorations": "decorations(e,t){var r=[eE({},e)];for(var n of t){var u=g(n,eg),[a,o]=Range.edges(n),i=[],s=0,l=a.offset,c=o.offset;for(var f of r){var{length:d}=f.text,D=s;if(s+=d,l<=D&&s<=c){Object.assign(f,u),i.push(f);continue}if(l!==c&&(l===s||c===D)||l>s||c<D||c===D&&0!==D){i.push(f);continue}var h=f,v=void 0,p=void 0;if(c<s){var C=c-D;p=eE(eE({},h),{},{text:h.text.slice(C)}),h=eE(eE({},h),{},{text:h.text.slice(0,C)})}if(l>D){var B=l-D;v=eE(eE({},h),{},{text:h.text.slice(0,B)}),h=eE(eE({},h),{},{text:h.text.slice(B)})}Object.assign(h,u),v&&i.push(v),i.push(h),p&&i.push(p)}r=i}return r}"
        },
        "PathUtils": {
            "ancestors": "ancestors(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{reverse:r=!1}=t,n=ea.levels(e,t);return n=r?n.slice(1):n.slice(0,-1)}",
            "common": "common(e,t){for(var r=[],n=0;n<e.length&&n<t.length;n++){var u=e[n];if(u!==t[n])break;r.push(u)}return r}",
            "compare": "compare(e,t){for(var r=Math.min(e.length,t.length),n=0;n<r;n++){if(e[n]<t[n])return -1;if(e[n]>t[n])return 1}return 0}",
            "endsAfter": "endsAfter(e,t){var r=e.length-1,n=e.slice(0,r),u=t.slice(0,r),a=e[r],o=t[r];return ea.equals(n,u)&&a>o}",
            "endsAt": "endsAt(e,t){var r=e.length,n=e.slice(0,r),u=t.slice(0,r);return ea.equals(n,u)}",
            "endsBefore": "endsBefore(e,t){var r=e.length-1,n=e.slice(0,r),u=t.slice(0,r),a=e[r],o=t[r];return ea.equals(n,u)&&a<o}",
            "equals": "(e,t)=>e.length===t.length&&e.every((e,r)=>e===t[r])",
            "hasPrevious": "e=>e[e.length-1]>0",
            "isAfter": "(e,t)=>1===ea.compare(e,t)",
            "isAncestor": "(e,t)=>e.length<t.length&&0===ea.compare(e,t)",
            "isBefore": "(e,t)=>-1===ea.compare(e,t)",
            "isChild": "(e,t)=>e.length===t.length+1&&0===ea.compare(e,t)",
            "isCommon": "(e,t)=>e.length<=t.length&&0===ea.compare(e,t)",
            "isDescendant": "(e,t)=>e.length>t.length&&0===ea.compare(e,t)",
            "isParent": "(e,t)=>e.length+1===t.length&&0===ea.compare(e,t)",
            "isPath": "e=>Array.isArray(e)&&(0===e.length||\"number\"==typeof e[0])",
            "isSibling": "isSibling(e,t){if(e.length!==t.length)return!1;var r=e.slice(0,-1),n=t.slice(0,-1);return e[e.length-1]!==t[t.length-1]&&ea.equals(r,n)}",
            "levels": "levels(e){for(var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{reverse:r=!1}=t,n=[],u=0;u<=e.length;u++)n.push(e.slice(0,u));return r&&n.reverse(),n}",
            "next": "next(e){if(0===e.length)throw Error(\"Cannot get the next path of a root path [\".concat(e,\"], because it has no next index.\"));var t=e[e.length-1];return e.slice(0,-1).concat(t+1)}",
            "operationCanTransformPath": "operationCanTransformPath(e){switch(e.type){case\"insert_node\":case\"remove_node\":case\"merge_node\":case\"split_node\":case\"move_node\":return!0;default:return!1}}",
            "parent": "parent(e){if(0===e.length)throw Error(\"Cannot get the parent path of the root path [\".concat(e,\"].\"));return e.slice(0,-1)}",
            "previous": "previous(e){if(0===e.length)throw Error(\"Cannot get the previous path of a root path [\".concat(e,\"], because it has no previous index.\"));var t=e[e.length-1];if(t<=0)throw Error(\"Cannot get the previous path of a first child path [\".concat(e,\"] because it would result in a negative index.\"));return e.slice(0,-1).concat(t-1)}",
            "relative": "relative(e,t){if(!ea.isAncestor(t,e)&&!ea.equals(e,t))throw Error(\"Cannot get the relative path of [\".concat(e,\"] inside ancestor [\").concat(t,\"], because it is not above or equal to the path.\"));return e.slice(t.length)}",
            "transform": "transform(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!e)return null;var n=[...e],{affinity:u=\"forward\"}=r;if(0===e.length)return n;switch(t.type){case\"insert_node\":var{path:a}=t;(ea.equals(a,n)||ea.endsBefore(a,n)||ea.isAncestor(a,n))&&(n[a.length-1]+=1);break;case\"remove_node\":var{path:o}=t;if(ea.equals(o,n)||ea.isAncestor(o,n))return null;ea.endsBefore(o,n)&&(n[o.length-1]-=1);break;case\"merge_node\":var{path:i,position:s}=t;ea.equals(i,n)||ea.endsBefore(i,n)?n[i.length-1]-=1:ea.isAncestor(i,n)&&(n[i.length-1]-=1,n[i.length]+=s);break;case\"split_node\":var{path:l,position:c}=t;if(ea.equals(l,n)){if(\"forward\"===u)n[n.length-1]+=1;else if(\"backward\"!==u)return null}else ea.endsBefore(l,n)?n[l.length-1]+=1:ea.isAncestor(l,n)&&e[l.length]>=c&&(n[l.length-1]+=1,n[l.length]-=c);break;case\"move_node\":var{path:f,newPath:d}=t;if(ea.equals(f,d))break;if(ea.isAncestor(f,n)||ea.equals(f,n)){var D=d.slice();return ea.endsBefore(f,d)&&f.length<d.length&&(D[f.length-1]-=1),D.concat(n.slice(f.length))}ea.isSibling(f,d)&&(ea.isAncestor(d,n)||ea.equals(d,n))?ea.endsBefore(f,n)?n[f.length-1]-=1:n[f.length-1]+=1:ea.endsBefore(d,n)||ea.equals(d,n)||ea.isAncestor(d,n)?(ea.endsBefore(f,n)&&(n[f.length-1]-=1),n[d.length-1]+=1):ea.endsBefore(f,n)&&(ea.equals(d,n)&&(n[d.length-1]+=1),n[f.length-1]-=1)}return n}",
            "isFirstEditorBlock": "e=>p.equals(e,o.FIRST_BLOCK_PATH)",
            "isFirstEditorText": "e=>p.equals(e,o.FIRST_TEXT_PATH)",
            "isFirstChild": "(e,t)=>p.equals(t,p.child(e,0))",
            "child": "(e,t)=>[...e,t]"
        },
        "PointUtils": {
            "compare": "compare(e,t){var r=ea.compare(e.path,t.path);if(0===r)return e.offset<t.offset?-1:e.offset>t.offset?1:0;return r}",
            "isAfter": "(e,t)=>1===el.compare(e,t)",
            "isBefore": "(e,t)=>-1===el.compare(e,t)",
            "equals": "(e,t)=>e.offset===t.offset&&ea.equals(e.path,t.path)",
            "isPoint": "e=>(0,a.isPlainObject)(e)&&\"number\"==typeof e.offset&&ea.isPath(e.path)",
            "transform": "transform(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return(0,o.produce)(e,e=>{if(null===e)return null;var{affinity:n=\"forward\"}=r,{path:u,offset:a}=e;switch(t.type){case\"insert_node\":case\"move_node\":e.path=ea.transform(u,t,r);break;case\"insert_text\":ea.equals(t.path,u)&&(t.offset<a||t.offset===a&&\"forward\"===n)&&(e.offset+=t.text.length);break;case\"merge_node\":ea.equals(t.path,u)&&(e.offset+=t.position),e.path=ea.transform(u,t,r);break;case\"remove_text\":ea.equals(t.path,u)&&t.offset<=a&&(e.offset-=Math.min(a-t.offset,t.text.length));break;case\"remove_node\":if(ea.equals(t.path,u)||ea.isAncestor(t.path,u))return null;e.path=ea.transform(u,t,r);break;case\"split_node\":if(ea.equals(t.path,u)){if(t.position===a&&null==n)return null;(t.position<a||t.position===a&&\"forward\"===n)&&(e.offset-=t.position,e.path=ea.transform(u,t,es(es({},r),{},{affinity:\"forward\"})))}else e.path=ea.transform(u,t,r)}})}",
            "start": "start(e){let[,t]=e;return{path:p.child(t,0),offset:0}}",
            "end": "end(e){let[t,n]=e,l=t.children[t.children.length-1];return{path:p.child(n,t.children.length-1),offset:m.isText(l)?l.text.length:0}}",
            "isAtStart": "isAtStart(e,t){return h.equals(e,this.start(t))}",
            "isAtEnd": "isAtEnd(e,t){return h.equals(e,this.end(t))}",
            "clamp": "clamp(e,t){let[n,l]=E.edges(t);return h.isBefore(e,n)&&(e=n),h.isAfter(e,l)&&(e=l),e}"
        },
        "RangeUtils": {
            "edges": "edges(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{reverse:r=!1}=t,{anchor:n,focus:u}=e;return Range.isBackward(e)===r?[n,u]:[u,n]}",
            "end": "end(e){var[,t]=Range.edges(e);return t}",
            "equals": "(e,t)=>el.equals(e.anchor,t.anchor)&&el.equals(e.focus,t.focus)",
            "includes": "includes(e,t){if(Range.isRange(t)){if(Range.includes(e,t.anchor)||Range.includes(e,t.focus))return!0;var[r,n]=Range.edges(e),[u,a]=Range.edges(t);return el.isBefore(r,u)&&el.isAfter(n,a)}var[o,i]=Range.edges(e),s=!1,l=!1;return el.isPoint(t)?(s=el.compare(t,o)>=0,l=0>=el.compare(t,i)):(s=ea.compare(t,o.path)>=0,l=0>=ea.compare(t,i.path)),s&&l}",
            "intersection": "intersection(e,t){var r=g(e,ef),[n,u]=Range.edges(e),[a,o]=Range.edges(t),s=el.isBefore(n,a)?a:n,l=el.isBefore(u,o)?u:o;return el.isBefore(l,s)?null:function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?ed(Object(r),!0).forEach(function(t){i(e,t,r[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):ed(Object(r)).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))})}return e}({anchor:s,focus:l},r)}",
            "isBackward": "isBackward(e){var{anchor:t,focus:r}=e;return el.isAfter(t,r)}",
            "isCollapsed": "isCollapsed(e){var{anchor:t,focus:r}=e;return el.equals(t,r)}",
            "isExpanded": "e=>!Range.isCollapsed(e)",
            "isForward": "e=>!Range.isBackward(e)",
            "isRange": "e=>(0,a.isPlainObject)(e)&&el.isPoint(e.anchor)&&el.isPoint(e.focus)",
            "points": "*points(e){yield[e.anchor,\"anchor\"],yield[e.focus,\"focus\"]}",
            "start": "start(e){var[t]=Range.edges(e);return t}",
            "transform": "transform(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return(0,o.produce)(e,e=>{if(null===e)return null;var n,u,{affinity:a=\"inward\"}=r;if(\"inward\"===a){var o=Range.isCollapsed(e);Range.isForward(e)?(n=\"forward\",u=o?n:\"backward\"):(n=\"backward\",u=o?n:\"forward\")}else\"outward\"===a?Range.isForward(e)?(n=\"backward\",u=\"forward\"):(n=\"forward\",u=\"backward\"):(n=a,u=a);var i=el.transform(e.anchor,t,{affinity:n}),s=el.transform(e.focus,t,{affinity:u});if(!i||!s)return null;e.anchor=i,e.focus=s})}",
            "toPoint": "e=>null==e||E.isExpanded(e)?null:e.anchor",
            "children": "children(e){let[t,n]=e,l=t.children[t.children.length-1];return{anchor:{path:p.child(n,0),offset:0},focus:{path:p.child(n,t.children.length-1),offset:m.isText(l)?l.text.length:0}}}",
            "clamp": "clamp(e,t){let[n,l]=E.edges(e),[i,a]=E.edges(t);return(h.isBefore(n,i)&&(n=i),h.isAfter(l,a)&&(l=a),E.isForward(e))?{anchor:n,focus:l}:{anchor:l,focus:n}}"
        },
        "SelectionUtils": {
            "equals": "(e,t)=>null==e&&null==t||null!=e&&null!=t&&E.equals(e,t)",
            "isValid": "isValid(e,t){if(null==t)return!1;let{anchor:n,focus:l}=t;if(!d.hasPath(e,n.path)||!d.hasPath(e,l.path))return!1;let[i]=d.node(e,n.path),[a]=d.node(e,l.path);return m.isText(i)&&m.isText(a)&&n.offset<=i.text.length&&l.offset<=a.text.length}"
        },
        "DOMUtils": {
            "getLineStart": "getLineStart(e,t,n){let l;let i=d.getParentElement(e,t);if(null==i)return null;let a=d.previous(e,{at:t,match:t=>d.isInline(e,t)&&!d.isVoid(e,t)&&t!==i[0]});null!=a&&(l=d.after(e,a[1])),null==l&&(l=d.start(e,i[1]));let s={anchor:l,focus:t},r=Array.from(d.positions(e,{at:s})),o=T(e,t,r,!0);if(n&&h.equals(t,o)&&!h.isAtEnd(t,i)){let n=d.after(e,t);if(null==n)return o;o=T(e,n,r,!0)}return o}",
            "getLineEnd": "getLineEnd(e,t,n){let l;let i=d.getParentElement(e,t);if(null==i)return null;let a=d.next(e,{at:t,match:t=>d.isInline(e,t)&&!d.isVoid(e,t)&&t!==i[0]});null!=a&&(l=d.before(e,a[1])),null==l&&(l=d.end(e,i[1]));let s={anchor:t,focus:l},r=Array.from(d.positions(e,{at:s})),o=T(e,t,r,!1);if(n&&h.equals(t,o)&&!h.isAtEnd(t,i)){let n=d.after(e,t);if(null==n)return o;o=T(e,n,r,!1)}return o}",
            "getLineActionRange": "getLineActionRange(e,t){let n=E.toPoint(e.selection);if(null==n)return null;if(t){let t=I.getLineStart(e,n,!1);return null==t?null:{anchor:t,focus:n}}{let t=I.getLineEnd(e,n,!0);return null==t?null:{anchor:n,focus:t}}}"
        }
    }
}