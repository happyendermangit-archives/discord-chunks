{
    "exports": {
        "default": {
            "initializedCount": 0,
            "actions": {
                "LOGOUT": "e=>this.handleLogout(e)"
            },
            "stores": {
                "toJSON": "function(){return Array.from(this)}",
                "get": "function get() { [native code] }",
                "set": "function set() { [native code] }",
                "has": "function has() { [native code] }",
                "delete": "function delete() { [native code] }",
                "clear": "function clear() { [native code] }",
                "entries": "function entries() { [native code] }",
                "forEach": "function forEach() { [native code] }",
                "keys": "function keys() { [native code] }",
                "size": 0,
                "values": "function values() { [native code] }"
            },
            "handleConnectionOpen": "()=>{var e,_,E;let n=I.default.getCurrentUser();if(null==n)return;if(null!=o){if(o!==t){let e=T.default.getUsers(),E=e.map(e=>{let{id:_}=e;return _});s.default.track(S.AnalyticEvents.MULTI_ACCOUNT_SWITCH_SUCCESS,{from_user_id:o,linked_user_ids:E}),null===(_=this.onSwitchSuccess)||void 0===_||_.call(this,n)}else s.default.track(S.AnalyticEvents.MULTI_ACCOUNT_SWITCH_FAILURE),null===(E=this.onSwitchError)||void 0===E||E.call(this,n);o=null}t=n.id;let i=r.default.getToken();null!=i&&\"\"!==i&&r.default.setToken(i,n.id),null===(e=this.onTokenSet)||void 0===e||e.call(this,n)}",
            "handleLogout": "e=>{if(e.isSwitchingAccount){var _;o=t,null===(_=this.onSwitchStart)||void 0===_||_.call(this)}else r.default.removeToken(t);t=null}",
            "onSwitchSuccess": "onSwitchSuccess(e){setTimeout(()=>{(0,t.showToast)((0,t.createToast)(i.default.Messages.SWITCH_ACCOUNTS_TOAST_LOGIN_SUCCESS.format({username:e.username}),t.ToastType.SUCCESS))},100)}",
            "onSwitchError": "onSwitchError(){(0,t.showToast)((0,t.createToast)(o.SWITCH_ACCOUNTS_TOAST_LOGIN_ERROR,t.ToastType.FAILURE))}",
            "onTokenSet": "onTokenSet(){(0,t.closeModal)(r.SWITCH_ACCOUNTS_MODAL_KEY)}",
            "_initialize": "_initialize(){i.default.subscribe(\"CONNECTION_OPEN\",()=>this.handleConnectionOpen()),this.handleConnectionOpen()}",
            "_terminate": "_terminate(){i.default.unsubscribe(\"CONNECTION_OPEN\",()=>this.handleConnectionOpen())}"
        }
    }
}