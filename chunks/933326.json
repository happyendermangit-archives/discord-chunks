{
    "exports": {
        "default": {
            "initializedCount": 0,
            "actions": {
                "POST_CONNECTION_OPEN": "()=>this.handleConnectionOpen()",
                "GUILD_DELETE": "e=>this.handleGuildDelete(e)",
                "GUILD_UNAVAILABLE": "e=>this.handleGuildUnavailable(e)",
                "INVITE_RESOLVE_SUCCESS": "e=>this.handleInviteResolveSuccess(e)",
                "CHANNEL_SELECT": "e=>this.handleChannelSelect(e)"
            },
            "stores": {
                "toJSON": "function(){return Array.from(this)}",
                "get": "function get() { [native code] }",
                "set": "function set() { [native code] }",
                "has": "function has() { [native code] }",
                "delete": "function delete() { [native code] }",
                "clear": "function clear() { [native code] }",
                "entries": "function entries() { [native code] }",
                "forEach": "function forEach() { [native code] }",
                "keys": "function keys() { [native code] }",
                "size": 0,
                "values": "function values() { [native code] }"
            },
            "getGuildEventUserCounts": "async getGuildEventUserCounts(e,t,n){let s=n.filter(n=>null==l[\"\".concat(e,\"-\").concat(t,\"-\").concat(n)]||Date.now()-l[\"\".concat(e,\"-\").concat(t,\"-\").concat(n)]>18e5);if(!(Date.now()-l[\"\".concat(e,\"-\").concat(t)]<18e5)||0!==s.length){l[\"\".concat(e,\"-\").concat(t)]=Date.now(),s.forEach(n=>l[\"\".concat(e,\"-\").concat(t,\"-\").concat(n)]=Date.now());try{await u.default.fetchGuildEventUserCounts(e,t,s)}catch(e){}}}",
            "getGuildEventUsers": "getGuildEventUsers(e,t,n){return u.default.fetchUsersForGuildEvent(e,t,n)}",
            "getGuildEventsForCurrentUser": "getGuildEventsForCurrentUser(e){return d(e)}",
            "handleConnectionOpen": "handleConnectionOpen(){o.clear(),l={};let e=(0,i.isInMainTabsExperiment)(),t=r.default.getLastSelectedGuildId();if(e&&null!=t){let e=a.default.getGuildScheduledEventsForGuild(t);e.forEach(e=>this.getGuildEventUserCounts(t,e.id,[]))}}",
            "handleGuildUnavailable": "handleGuildUnavailable(e){let{guildId:t}=e;o.delete(t),delete l[t]}",
            "handleGuildDelete": "handleGuildDelete(e){let{guild:t}=e,n=t.id;o.delete(n),delete l[n]}",
            "handleInviteResolveSuccess": "handleInviteResolveSuccess(e){var t;let{invite:n}=e,s=n.guild_scheduled_event,i=null===(t=n.guild)||void 0===t?void 0:t.id;null!=s&&null!=i&&d(i)}",
            "handleChannelSelect": "handleChannelSelect(e){let{guildId:t}=e;if(null==t)return;let n=a.default.getGuildScheduledEventsForGuild(t);n.forEach(e=>this.getGuildEventUserCounts(t,e.id,[]))}"
        }
    }
}