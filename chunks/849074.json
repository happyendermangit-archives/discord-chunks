{
    "exports": {
        "WebRTCStatsCalculator": "class s{update(e){for(let t in e.rtp.inbound){let n=e.rtp.inbound[t];for(let e of n)if(\"video\"===e.type){let t=this.getInboundBytesRecevierCalculator(e),n=this.getInboundFrameDecodeRateCalculator(e);e.bitrate=t.calculate(e),e.frameRateDecode=n.calculate(e)}}for(let t of e.rtp.outbound)if(\"video\"===t.type){let e=this.getOutboundBytesSentCalculator(t),n=this.getOutboundEncodeRateCalculator(t);t.bitrate=e.calculate(t),t.frameRateEncode=n.calculate(t)}}static getCalculatorOrCreate(e,t,n,i){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=e[t.ssrc];return null==s&&(s=new o(n,i,r),e[t.ssrc]=s),s}getInboundBytesRecevierCalculator(e){return s.getCalculatorOrCreate(this.inboundVideoBitrate,e,\"bytesReceived\",\"timestamp\",3)}getInboundFrameDecodeRateCalculator(e){return s.getCalculatorOrCreate(this.inboundDecodeFps,e,\"framesDecoded\",\"timestamp\",5)}getOutboundBytesSentCalculator(e){return s.getCalculatorOrCreate(this.outboundVideoBitrate,e,\"bytesSent\",\"timestamp\",3)}getOutboundEncodeRateCalculator(e){return s.getCalculatorOrCreate(this.outboundEncodeFps,e,\"framesEncoded\",\"timestamp\",5)}constructor(){this.inboundVideoBitrate={},this.inboundDecodeFps={},this.outboundVideoBitrate={},this.outboundEncodeFps={}}}"
    }
}