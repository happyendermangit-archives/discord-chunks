{
    "exports": {
        "isAdmin": "function S(e){return r.default.has(e.permissions,R.Permissions.ADMINISTRATOR)}",
        "getRoleRowData": "function O(e){var t,n;let s=arguments.length>1&&void 0!==arguments[1]&&arguments[1];let l=(n=e,r.default.has(n.permissions,R.Permissions.ADMINISTRATOR)?_.RowType.ADMINISTRATOR:_.RowType.ROLE);return{rowType:l,colorString:null!==(t=e.colorString)&&void 0!==t?t:(0,i.int2hex)(R.DEFAULT_ROLE_COLOR),name:e.name,id:e.id,disabled:S(e)||s,key:\"\".concat(l,\":\").concat(e.id),tags:e.tags}}",
        "sortRoles": "function I(e,t){let n=S(e)?0:1,r=S(t)?0:1;return n!==r?n-r:t.position-e.position}",
        "getNoRolesRow": "function A(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:T.default.Messages.PRIVATE_CHANNEL_ADD_MEMBERS_MODAL_NO_ROLES;return[{rowType:_.RowType.EMPTY_STATE,colorString:(0,i.int2hex)(R.DEFAULT_ROLE_COLOR),name:e,disabled:!0,id:\"EMPTY_STATE\"}]}",
        "isEveryoneRoleId": "function p(e,t){return c.default.castGuildIdAsEveryoneGuildRoleId(e)===t}",
        "isNotEveryoneRoleId": "function h(e,t){return!p(e,t)}",
        "getRolesRows": "function g(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:()=>!0;return null==e.roles?[]:Object.values(e.roles).filter(i=>!S(i)&&M(t,i.id,n)&&m(e,i)&&r(i.name)).sort(I).map(e=>O(e))}",
        "getRolesRowsWithPermissionDisabled": "function C(e,t,n){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:()=>!0;return null==e.roles?[]:Object.values(e.roles).filter(r=>!S(r)&&M(t,r.id,n)&&m(e,r)&&i(r.name)).sort(I).map(e=>O(e,r.default.has(e.permissions,n)))}",
        "getExistingRolesRows": "function w(e,t,n,r){var i,s,l,u;let a=[];if(null==e.roles)return a;return 0===(a=(i=e,s=t,l=n,u=r,Object.values(i.roles).filter(e=>S(e)||!M(s,e.id,l,u)&&m(i,e))).sort(I).map(e=>O(e))).length?A(T.default.Messages.CHANNEL_PERMISSIONS_NO_ROLES):a}",
        "getExistingRolesRowWithPermissionDisabled": "function v(e,t,n,i){var s,l,u,a;let o=[];if(null==e.roles)return o;return 0===(o=(s=e,l=t,u=n,a=i,Object.values(s.roles).filter(e=>{var t;return S(e)||!M(l,e.id,u,a)&&m(s,e)||r.default.has(r.default.combine(e.permissions,null===(t=l.permissionOverwrites[e.id])||void 0===t?void 0:t.allow),u)})).sort(I).map(e=>O(e,r.default.has(e.permissions,n)))).length?A(T.default.Messages.CHANNEL_PERMISSIONS_NO_ROLES):o}",
        "getMembersRows": "function G(e,t,n,r){let i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:()=>!0;return e.map(o.default.getUser).filter(f.isNotNullish).filter(e=>!n.isOwner(e)&&M(t,e.id,r)&&(i(L(e,n))||i(e.username)||i(e.discriminator))).map(e=>y(e,n)).sort(P)}",
        "getExistingMembersRows": "function H(e,t,n,r,i){var s,l,u,a,d;return(s=e,l=t,u=n,a=r,d=i,s.map(o.default.getUser).filter(f.isNotNullish).filter(e=>{var t;return!M(l,e.id,a,d)||(t=e,u.isOwner(t))})).map(e=>y(e,n)).sort(P)}",
        "getRowTypeLabel": "function U(e,t){switch(e){case _.RowType.ROLE:return T.default.Messages.PRIVATE_CHANNEL_ADD_MEMBERS_MODAL_ROW_ROLE;case _.RowType.OWNER:return T.default.Messages.PRIVATE_CHANNEL_ADD_MEMBERS_MODAL_ROW_OWNER;case _.RowType.ADMINISTRATOR:return T.default.Messages.PRIVATE_CHANNEL_ADD_MEMBERS_MODAL_ROW_ADMINISTRATOR;case _.RowType.MEMBER:return t?T.default.Messages.PRIVATE_CHANNEL_ADD_MEMBERS_MODAL_ROW_MEMBER:null;case _.RowType.USER:return T.default.Messages.USER;case _.RowType.GUILD:return T.default.Messages.SERVER;case _.RowType.EMPTY_STATE:return null}}",
        "getRemoveTooltipHint": "function B(e){switch(e){case _.RowType.ROLE:return T.default.Messages.CHANNEL_PERMISSIONS_ADD_MEMBERS_TOOLTIP;case _.RowType.OWNER:return T.default.Messages.CHANNEL_PERMISSIONS_ADD_MEMBERS_TOOLTIP_OWNER;case _.RowType.ADMINISTRATOR:return T.default.Messages.CHANNEL_PERMISSIONS_ADD_MEMBERS_TOOLTIP_ADMINISTRATOR;case _.RowType.MEMBER:return T.default.Messages.CHANNEL_PERMISSIONS_ADD_MEMBERS_TOOLTIP;case _.RowType.EMPTY_STATE:default:return null}}",
        "flipEveryonePermission": "function b(e,t,n){let i=e.permissionOverwrites[e.guild_id];null==i&&(i=E.default.makeEveryoneOverwrite(e.guild_id));let s={...i};return s.deny=r.default.remove(s.deny,t),s.allow=r.default.remove(s.allow,t),!n&&(s.deny=r.default.add(s.deny,t)),s}",
        "toggleChannelEveryonePermission": "function V(e,t,n){let r=b(e,t,n);(0,s.updatePermission)(e,r.id,r.allow,r.deny)}",
        "grantUserChannelAccess": "function k(e,t){let n=o.default.getCurrentUser();if(null==n)return;let i=e.permissionOverwrites[n.id];if(null==i){let i={id:n.id,type:l.PermissionOverwriteType.MEMBER,allow:r.default.add(E.default.NONE,t),deny:E.default.NONE};(0,s.savePermissionUpdates)(e.id,[i],!0)}else{let{allow:n,deny:l}=i;n=r.default.add(n,t),(0,s.updatePermission)(e,i.id,n,l)}}",
        "isPrivateGuildChannel": "function W(e,t){if(null==e)return!1;let n=e.permissionOverwrites[e.guild_id];return(null==t?void 0:t[e.guild_id])!=null&&(n=t[e.guild_id]),null!=n&&r.default.has(n.deny,e.accessPermissions)}",
        "hasCustomRoles": "function F(e){let t=Object.keys(e.roles);return 0!==t.length&&(1!==t.length||t[0]!==e.id)}",
        "canCreatePrivateChannel": "function x(e,t,n){return e===R.ChannelTypes.GUILD_TEXT||e===R.ChannelTypes.GUILD_ANNOUNCEMENT?t:!(0,u.isGuildVocalChannelType)(e)&&e!==R.ChannelTypes.GUILD_CATEGORY||t&&n}",
        "getPrivateChannelHintText": "function Y(e){switch(e){case R.ChannelTypes.GUILD_TEXT:case R.ChannelTypes.GUILD_ANNOUNCEMENT:return T.default.Messages.PRIVATE_TEXT_CHANNEL_CREATION_PERMISSION_MISSING_HINT.format();case R.ChannelTypes.GUILD_VOICE:return T.default.Messages.PRIVATE_VOICE_CHANNEL_CREATION_PERMISSION_MISSING_HINT.format();case R.ChannelTypes.GUILD_CATEGORY:return T.default.Messages.PRIVATE_CATEGORY_CREATION_PERMISSION_MISSING_HINT.format();default:return null}}",
        "extractPermissionOverwrites": "function j(e,t){let n=[];return Object.values(e).forEach(e=>{let{row:r}=e;null!=r.id&&\"\"!==r.id&&(r.rowType===_.RowType.ROLE?n.push((0,d.permissionOverwriteForRole)(r.id,t)):r.rowType===_.RowType.MEMBER&&n.push((0,d.permissionOverwriteForUser)(r.id,t)))}),n}"
    }
}