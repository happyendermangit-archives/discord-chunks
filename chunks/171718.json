{
    "exports": {
        "default": {
            "init": "init(){if(h)return;r=s.default.get(a.TOKEN_KEY),E=s.default.get(a.TOKENS_KEY)||{};let{decryptedToken:e,wasEncrypted:t}=S(r);d=t,i=e,f=l(Object.entries(E).map(e=>{let[t,n]=e,{decryptedToken:i,wasEncrypted:r}=S(n);return d=r||d,[t,i]}).filter(e=>{let[t,n]=e;return null!=n})),h=!0}",
            "getToken": "getToken(e){return(this.init(),null!=e)?f[e]:i}",
            "setToken": "setToken(e,t){if(null==e){this.removeToken(t);return}i=e,null!=t&&(f[t]=e),d?this.encryptAndStoreTokens():(r=i,E=f,_())}",
            "hideToken": "hideToken(){!p&&(p=!0,_())}",
            "showToken": "showToken(){p&&(p=!1,_())}",
            "removeToken": "removeToken(e){let t=i;null!=e&&(t=f[e],delete f[e],delete E[e]),t===i&&(i=null,r=null),_()}",
            "encryptAndStoreTokens": "encryptAndStoreTokens(){(null==u?void 0:u.isEncryptionAvailable())?(null!=i&&(r=m(i)),E=l(Object.entries(f).map(e=>{let[t,n]=e;return[t,m(n)]})),d=!0):(r=i,E=f),_()}"
        }
    }
}