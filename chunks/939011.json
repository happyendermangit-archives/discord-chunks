{
    "exports": {
        "setCurrentImpression": "e=>{a.setState(t=>({impressions:[...t.impressions,e]}))}",
        "cleanupImpression": "e=>{a.setState(t=>({impressions:t.impressions.filter(t=>t.sequenceId!==e.sequenceId)}))}",
        "setDebugTrackedData": "(e,t)=>{a.setState(()=>({debugTrackedData:{name:e,...t}}))}",
        "useImpressionStore": "function(){let t,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:e.getState,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Object.is,[,a]=(0,r.useReducer)(t=>t+1,0),u=e.getState(),s=(0,r.useRef)(u),c=(0,r.useRef)(n),l=(0,r.useRef)(i),f=(0,r.useRef)(!1),h=(0,r.useRef)();void 0===h.current&&(h.current=n(u));let p=!1;(s.current!==u||c.current!==n||l.current!==i||f.current)&&(t=n(u),p=!i(h.current,t)),o(()=>{p&&(h.current=t),s.current=u,c.current=n,l.current=i,f.current=!1});let d=(0,r.useRef)(u);o(()=>{let t=()=>{try{let t=e.getState(),n=c.current(t);!l.current(h.current,n)&&(s.current=t,h.current=n,a())}catch(t){f.current=!0,a()}},n=e.subscribe(t);return e.getState()!==d.current&&t(),n},[]);let v=p?t:h.current;return(0,r.useDebugValue)(v),v}",
        "getLocation": "function d(){let e={};return a.getState().impressions.forEach(t=>{t.type===r.ImpressionTypes.PAGE?e.page=t.name:e.section=t.name}),e}",
        "getImpressionStack": "function f(){return a.getState().impressions}"
    }
}