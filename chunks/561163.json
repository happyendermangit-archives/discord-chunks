{
    "exports": {
        "FormattedMessage": "class u{constructor(e,t,n){this.message=n?e:e.replace(l.UNSAFE_RE_ALL,\"\"),this.hasMarkdown=n,this.intlMessage=new(a())(this.message,t)}format(e){if(!this.hasMarkdown)return this.intlMessage.format(e);let[t,n]=this.getContext(e);return i(this.intlMessage.format(t),t,n)}astFormat(e){let[t,n]=this.getContext(e);return r(this.intlMessage.format(t),t,n)}plainFormat(e){return this.intlMessage.format(e)}getContext(e){let t=l.UNSAFE_RE.test(this.message),n={};if(t){let t=0;for(let[i,r]of Object.entries(e))this.message.includes(`!!{${i}}!!`)&&(n[++t]=r,e[i]=t)}return[e,n]}}",
        "default": "class I extends i.EventEmitter{constructor({initialLocale:e,getMessages:t,getLanguages:i}){super(),this.loadPromise=Promise.resolve(),this.resolveLanguageLoaded=()=>{},this._languages=[],this._chosenLocale=\"\",this._getParsedMessages=(e,t,n)=>{let{messages:i,defaultMessages:r,locale:o}=e,s=i[t]||r[t];if(\"object\"==typeof s)return n({messages:s,defaultMessages:r[t],locale:o});try{return(0,a.getMessage)(s,o)}catch(e){if(console.warn(`Failed parsing intl key '${String(t)}' in locale '${o}' defaulting to English`,e),\"string\"==typeof(s=r[t]))return(0,a.getMessage)(s,o)}return\"\"},this._handleNewListener=e=>{if(\"locale\"===e)this.emit(e,this._chosenLocale)},this.initialLanguageLoad=new Promise((e,t)=>{this.resolveLanguageLoaded=e}),Intl.__addLocaleData&&Intl.__addLocaleData(n(\"201688\")),this._languages=i(),this._provider=null!=window.Proxy?new u(this._getParsedMessages):new l(this._getParsedMessages),this.Messages=this._provider.getMessages(),this._getMessages=t,this.setLocale(e||this.getDefaultLocale()),this.on(\"newListener\",this._handleNewListener)}updateMessagesForExperiment(e,t){let n=this._fetchMessages(e);if(n instanceof Promise){n.then(n=>{this._applyMessagesForLocale(t(n),e)});return}this._applyMessagesForLocale(t(n),e)}setLocale(e){if(this._chosenLocale===e)return;this._requestedLocale=e;let t=this._chosenLocale;this._chosenLocale=e,this.loadPromise=this._loadMessagesForLocale(e),this.emit(\"locale\",this._chosenLocale,t)}setUpdateRules(e){(0,a.setUpdateRules)(e)}getLanguages(){return this._languages}getAvailableLocales(){return this._languages.filter(e=>{let{enabled:t}=e;return t}).map(e=>{let{code:t,name:n}=e;return{value:t,name:n,localizedName:this.Messages[t]??n}}).sort((e,t)=>{let{name:n}=e,{name:i}=t;return n=n.toLowerCase(),n<(i=i.toLowerCase())?-1:n>i?1:0})}getLocale(){return this._chosenLocale}getLocaleInfo(){return this._languages.find(e=>e.code===this._chosenLocale)}getDefaultLocale(){let e=_()??s,t=this._languages.filter(e=>{let{enabled:t}=e;return t}).map(e=>{let{code:t}=e;return t});if(t.includes(e))return e;let n=e.split(\"-\");return t.includes(n[0])?n[0]:\"zh\"===n[0]&&n.length>1&&\"Hant\"===n[1]?t.find(e=>\"zh-TW\"===e)??s:t.find(e=>e.split(\"-\")[0]===n[0])??s}_loadMessagesForLocale(e){let t=this._fetchMessages(e);return t instanceof Promise?t.then(t=>this._applyMessagesForLocale(t,e)):(this._applyMessagesForLocale(t,e),Promise.resolve())}_applyMessagesForLocale(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this._findMessages(s);this._requestedLocale===t&&(this._provider.refresh({messages:e,defaultMessages:n,locale:t}),this.resolveLanguageLoaded())}_findMessages(e){let t=this._fetchMessages(e);if(t instanceof Promise)throw Error(\"Messages are still loading.\");return t}_fetchMessages(e){let t=e===s?()=>{throw Error(`Error Loading ${s}`)}:()=>(console.warn(\"Unsupported Locale\",e),-1===e.indexOf(\"-\"))?this._fetchMessages(s):this._fetchMessages(e.split(\"-\")[0]);try{let n=this._getMessages(e);return n instanceof Promise?n.catch(t):n}catch(e){return t()}}}",
        "getSystemLocale": "function _(){let e;return(e=(Array.isArray(navigator.languages)?navigator.languages[0]:null)||navigator.language||navigator.browserLanguage||navigator.userLanguage)??\"\"}",
        "setUpdateRules": "function I(e){i=function(e,t){let n=_().parserFor(t(e)),i=_().reactFor(_().ruleOutput(e,\"react\"));return(e,t,r)=>{let o=!e.includes(\"\\n\\n\");return!o&&(e+=\"\\n\\n\"),i(n(e,{inline:o,context:t,unsafeContext:r}))}}(E.default,e),r=function(e){let t=_().parserFor(e);return(e,n,i)=>t(e+\"\\n\\n\",{inline:!1,context:n,unsafeContext:i})}(E.default)}"
    }
}