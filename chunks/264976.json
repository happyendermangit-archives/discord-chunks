{
    "exports": {
        "default": "class m{constructor(e){this.socket=e,this.queue=[],this.dispatchTimeout=null,this.nextDispatchTimeout=33,this.paused=!0,this.resumeAnalytics=(0,l.createResumeAnalytics)(),this.getDispatchHandler=null,this.flush=()=>{if(this.paused)return;clearTimeout(this.dispatchTimeout),this.dispatchTimeout=null;let e=Date.now(),t=0;for(;t<this.queue.length&&2===this.queue[t].status;t++);if(0===t)return;let n=this.queue.splice(0,t);this.dispatchMultiple(n);let s=Date.now()-e;s>100?(f.log(`Dispatched ${n.length} messages in ${s}ms`),this.nextDispatchTimeout=250):this.nextDispatchTimeout=33}}hasStuffToDispatchNow(){return this.queue.length>0&&2===this.queue[0].status}processFirstQueuedDispatch(e){let t=[];for(;this.queue.length>0&&e.has(this.queue[0].type)&&2===this.queue[0].status;)t.push(this.queue.shift());this.dispatchMultiple(t)}unpauseDispatchQueue(){for(let e of(this.paused=!1,this.queue))this.maybePreload(e);this.flush()}receiveDispatch(e,t,n){if(null==this.getDispatchHandler)throw Error(\"getDispatchHandler needs to be passed in first!\");let s={data:e,type:t,compressionAnalytics:n,status:0,preloadPromise:null,preloadedData:null};this.queue.push(s),!this.maybePreload(s)&&this.scheduleFlush(t)}maybePreload(e){if(this.paused&&!_.has(e.type))return!1;if(0===e.status){let t=this.getDispatchHandler(e.type)?.preload(e.data);if(e.status=null==t?2:1,e.preloadPromise=t,null!=t)return t.then(t=>{e.preloadedData=t,e.status=2,this.scheduleFlush(e.type)}).catch(t=>this.socket.resetSocketOnDispatchError({error:t,action:e.type})),!0}return!1}scheduleFlush(e){!this.paused&&(c.has(e)?(null!=this.dispatchTimeout&&clearTimeout(this.dispatchTimeout),this.flush()):null==this.dispatchTimeout&&(this.dispatchTimeout=setTimeout(this.flush,this.nextDispatchTimeout)))}dispatchMultiple(e){if(0===e.length)return;let t=\"none\",n=!1;try{this.socket.connectionState===d.default.RESUMING&&r.default.Emitter.pause(150),r.default.Emitter.batched(()=>{e.forEach(e=>{t=e.type,n=n||g.has(e.type),this.dispatchOne(e)}),u.default.flush()}),n&&r.default.Emitter.resume()}catch(e){this.socket.resetSocketOnDispatchError({error:e,action:t})}}dispatchOne(e){let{data:t,type:n,compressionAnalytics:s,preloadedData:i}=e,r=performance.now();if(this.socket.connectionState===d.default.RESUMING){let e=r-this.resumeAnalytics.lastUpdateTime;0===this.resumeAnalytics.numEvents?this.resumeAnalytics.initialWaitTime=e:e>this.resumeAnalytics.largestWaitTime&&(this.resumeAnalytics.largestWaitTime=e),this.resumeAnalytics.totalWaitTime+=e,this.resumeAnalytics.lastUpdateTime=r,this.resumeAnalytics.numEvents+=1}if(o.default.isLoggingGatewayEvents&&f.verboseDangerously(\"<~\",n,t),u.default.flush(n,t),\"READY\"===n){let e=(0,l.getReadyPayloadByteSizeAnalytics)(t);this.getDispatchHandler(n)?.dispatch(t,n,i),(0,l.logReadyPayloadReceived)(this.socket,t,r,s,e)}else\"RESUMED\"===n?(this.getDispatchHandler(n)?.dispatch(t,n,i),(0,l.logResumeAnalytics)(this.resumeAnalytics),this.resumeAnalytics=(0,l.createResumeAnalytics)(),this.socket.handleResumeDispatched()):this.getDispatchHandler(n)?.dispatch(t,n,i);this.socket.connectionState===d.default.RESUMING&&(this.resumeAnalytics.dispatchTime+=performance.now()-r)}clear(){this.paused=!1,this.queue.length=0}}"
    }
}