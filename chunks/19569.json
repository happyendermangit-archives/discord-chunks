{
    "exports": {
        "default": {
            "resolveInvite": "function e(t,n,s){return l.default.isDispatching()?Promise.resolve().then(()=>e(t,n,s)):(l.default.dispatch({type:\"INVITE_RESOLVE\",code:t}),(0,A.default)(t,n,s).then(e=>{let{invite:t,code:n,banned:s}=e;return null!=t?l.default.dispatch({type:\"INVITE_RESOLVE_SUCCESS\",invite:t,code:n}):l.default.dispatch({type:\"INVITE_RESOLVE_FAILURE\",code:n,banned:s}),{invite:t,code:n}}))}",
            "getInviteContext": "(e,t)=>({location:e,location_guild_id:null!=t.guild?t.guild.id:void 0,location_channel_id:null!=t.channel?t.channel.id:void 0,location_channel_type:null!=t.channel?t.channel.type:void 0})",
            "createInvite": "async createInvite(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2?arguments[2]:void 0;try{let{body:s}=await d.default.post({url:W.Endpoints.INSTANT_INVITES(e),body:t,context:{location:n}});return l.default.dispatch({type:\"INSTANT_INVITE_CREATE_SUCCESS\",channelId:e,invite:s}),s}catch(t){throw l.default.dispatch({type:\"INSTANT_INVITE_CREATE_FAILURE\",channelId:e}),new f.default(t)}}",
            "mobileCreateInvite": "async mobileCreateInvite(e,t){let n=U.default.getInvite(e.id);if(null!=n&&!n.isExpired())return n.code;let s={max_age:H.default.Seconds.DAY},i=await this.createInvite(e.id,s,t).catch(()=>l.default.dispatch({type:\"NATIVE_APP_INSTANT_INVITE_GDM_SHARE_FAILED\"}));return i?.code}",
            "getAllFriendInvites": "async getAllFriendInvites(e){if(await new Promise(e=>l.default.wait(()=>e(null))),U.default.getFriendInvitesFetching())return null!=Z?Z.then(e=>e.body):Promise.reject(Error(\"Invalid friend invite fetch request\"));Z=d.default.get({url:W.Endpoints.FRIEND_INVITES,context:{location:e}}),l.default.dispatch({type:\"FRIEND_INVITES_FETCH_REQUEST\",requestedAt:new Date});let{body:t}=await Z;return Z=null,l.default.dispatch({type:\"FRIEND_INVITES_FETCH_RESPONSE\",receivedAt:new Date,invites:t}),t}",
            "createFriendInvite": "(e,t)=>(l.default.dispatch({type:\"FRIEND_INVITE_CREATE_REQUEST\"}),d.default.post({url:W.Endpoints.FRIEND_INVITES,body:e??{},context:{location:t}}).then(e=>{let{body:t}=e;return l.default.dispatch({type:\"FRIEND_INVITE_CREATE_SUCCESS\",invite:t}),t},e=>{throw l.default.dispatch({type:\"FRIEND_INVITE_CREATE_FAILURE\",error:e}),e}))",
            "revokeFriendInvites": "()=>(l.default.dispatch({type:\"FRIEND_INVITE_REVOKE_REQUEST\"}),d.default.delete({url:W.Endpoints.FRIEND_INVITES,context:{location}}).then(e=>{let{body:t}=e;l.default.dispatch({type:\"FRIEND_INVITE_REVOKE_SUCCESS\",invites:t})}))",
            "revokeFriendInvite": "e=>d.default.delete({url:W.Endpoints.INVITE(e)})",
            "clearInviteFromStore": "clearInviteFromStore(e){l.default.dispatch({type:\"INSTANT_INVITE_CLEAR\",channelId:e})}",
            "revokeInvite": "revokeInvite(e){let{code:t,channel:n}=e;return x.default.delete({url:W.Endpoints.INVITE(t),oldFormErrors:!0,trackedActionData:{event:r.NetworkActionNames.INVITE_REVOKE,properties:{uses:e.uses,max_uses:e.maxUses,max_age:e.maxAge,invite_type:e.type}}}).then(()=>{l.default.dispatch({type:\"INSTANT_INVITE_REVOKE_SUCCESS\",code:t,channelId:n.id})})}",
            "acceptInvite": "acceptInvite(e){var t,s;let{inviteKey:i,context:r,callback:a,skipOnboarding:o}=e,u=(0,C.parseExtraDataFromInviteKey)(i),f=u.baseCode,c=b.default.getSessionId();let g=(t=r,s=u,{...t,invite_guild_scheduled_event_id:s.guildScheduledEventId}),m=F.default.getCurrentUser();return m?.hasFlag(W.UserFlags.QUARANTINED)?((0,N.default)(),new Promise((e,t)=>t(Error()))):(l.default.dispatch({type:\"INVITE_ACCEPT\",code:f}),d.default.post({url:W.Endpoints.INVITE(f),context:g,oldFormErrors:!0,body:{session_id:c}}).then(async e=>{l.default.dispatch({type:\"INVITE_ACCEPT_SUCCESS\",invite:e.body,code:f});let t=T.default.getGuildScheduledEvent(u.guildScheduledEventId),s={...e.body,guild_scheduled_event:t},i=s?.guild_id??s?.guild?.id;if(!o&&null!=i&&s.new_member){let{default:e}=await n.el(\"19569@20100:20157\").then(n.bind(n,\"329547\"));await e({guildId:i})}return a?.(s),e.body},e=>{throw l.default.dispatch({type:\"INVITE_ACCEPT_FAILURE\",code:f,error:{message:e.body?.message,code:e.body?.code}}),new _.default(e)}))}",
            "acceptInviteAndTransitionToInviteChannel": "acceptInviteAndTransitionToInviteChannel(e){let{inviteKey:t,context:n,analyticsLocations:s,callback:i,skipOnboarding:r}=e;return this.acceptInvite({inviteKey:t,context:n,skipOnboarding:r,callback:e=>{if(null!=e.channel){let t=J(e);et(e.channel.id,t,s??[])}null!=i&&i(e)}})}",
            "transitionToInvite": "transitionToInvite(e,t){let{channel:n,guild:s}=e;if(null!=s&&s.features?.includes(W.GuildFeatures.HUB)){S.default.onOpenHubInvite(e);return}if(null!=s&&s.features?.includes(W.GuildFeatures.COMMUNITY)&&s.features?.includes(W.GuildFeatures.MEMBER_VERIFICATION_GATE_ENABLED)&&!s.features.includes(W.GuildFeatures.PREVIEW_ENABLED)){(0,O.transitionTo)(W.Routes.GUILD_MEMBER_VERIFICATION(s.id,e.code));return}if(null==n)return;let i=J(e);null!=t&&(i.transitionTo=t),ee({guildId:null!=s?s.id:W.ME,channel:n,options:i})}",
            "transitionToInviteSync": "transitionToInviteSync(e,t,n){if(null!=e.channel){let s=J(e);this.transitionToInviteChannelSync(e.channel.id,{...s,intent:n,transitionTo:t})}}",
            "openNativeAppModal": "openNativeAppModal(e){m.default.openNativeAppModal(e,W.RPCCommands.INVITE_BROWSER)}",
            "openApp": "openApp(e,t,n,s,r){let d;let f=null!=e?(0,C.parseExtraDataFromInviteKey)(e):null,_=f?.baseCode;if(l.default.dispatch({type:\"INVITE_APP_OPENING\",code:e}),null!=i().ua&&i().ua.toLowerCase().indexOf(\"googlebot\")>-1){l.default.dispatch({type:\"INVITE_APP_NOT_OPENED\",code:e});return}if(i().os?.family===\"Android\"||i().os?.family===\"iOS\"){let e=null!=_?(0,a.getInviteDynamicLinkTemplate)(_):(0,a.getDefaultDynamicLinkTemplate)(),t=(0,o.generateAttemptId)();d=(0,o.default)(e,{utmSource:2===r?\"friend_invite\":Q,fingerprint:n,username:s,attemptId:t,event:f?.guildScheduledEventId,iosFallbackLink:`https://discord.com/api/download/mobile?invite_code=${_}`}),B.default.track(W.AnalyticEvents.DEEP_LINK_CLICKED,{fingerprint:(0,u.maybeExtractId)(n),attempt_id:t,source:Q,invite_code:_})}else\"#\"===(d=null!=t?W.Routes.INVITE_PROXY(t):\"\")[0]&&(d=d.slice(1)),d=`discord://${d}`;Y.default.launch(d,t=>{l.default.dispatch(t?{type:\"INVITE_APP_OPENED\",code:e}:{type:\"INVITE_APP_NOT_OPENED\",code:e})})}",
            "transitionToInviteChannelSync": "function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];M.default.addConditionalChangeListener(()=>{let s=M.default.getChannel(e),i=F.default.getCurrentUser();return null==s||null==i||(!s.nsfw||!!i.nsfwAllowed)&&(t?.guildScheduledEvent!=null?(!function(e){let{guildScheduledEvent:t,welcomeModalChannelId:n}=e;null!=t&&(0,h.addPostConnectionCallback)(()=>{let e={guildScheduledEventId:t.id};null!=n&&(e.welcomeModalChannelId=n),(0,I.transitionToEventDetailsFromInvite)(t,e)})}(t),!1):(ee({guildId:s.getGuildId()??W.ME,channel:s,options:t,analyticsLocations:n}),!1))})}"
        },
        "transitionToGuildFromEventInvite": "async e=>{let{guild_id:t,channel_id:n}=e;(0,T.isGuildScheduledEventActive)(e)&&null!=n?et(n):await j.default.transitionToGuildSync(t)}"
    }
}