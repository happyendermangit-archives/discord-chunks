{
    "exports": {
        "default": "class extends d{static canUse(){return void 0!==window.Uint8Array}getAlgorithm(){return\"zlib-stream\"}usesLegacyCompression(){return!1}constructor(e){super(e),this._pako=n(\"457854\");let t=this._pako;(this._inflate=new t.Inflate({chunkSize:65536,to:this._gatewayEncoding.wantsString()?\"string\":\"\"})).onEnd=this.handleFlushEnd.bind(this)}feed(e){let t=this._pako,n=this._inflate;if(null==n)throw Error(\"Trying to feed to closed compression adapter\");if(null===this._onDataReady)throw Error(\"Cannot feed unless a data ready callback is registered.\");if(e instanceof ArrayBuffer){let s=new DataView(e),i=s.byteLength>=4&&65535===s.getUint32(s.byteLength-4,!1);n.push(e,!!i&&t.Z_SYNC_FLUSH)}else throw Error(\"Expected array buffer, but got \"+typeof e)}close(){null!=this._inflate&&(this._inflate.onEnd=null,this._inflate.chunks=[]),this._inflate=null}handleFlushEnd(e){let t;let n=this._pako,s=this._inflate;if(null==s){new r.default(\"GatewayCompressionHandler\").error(\"flush end happened on closed compression adapter\");return}if(e!==n.Z_OK)throw Error(`zlib error, ${e}, ${s.strm.msg}`);let{chunks:i}=s,a=i.length;if(this._gatewayEncoding.wantsString())t=a>1?i.join(\"\"):i[0];else if(a>1){let e=0;for(let t=0;t<a;t++)e+=i[t].length;let n=new Uint8Array(e),s=0;for(let e=0;e<a;e++){let t=i[e];n.set(t,s),s+=t.length}t=n}else t=i[0];i.length=0,null!=this._onDataReady&&this._onDataReady(t)}}"
    }
}